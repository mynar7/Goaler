{"version":3,"sources":["components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/login/login.jsx","components/loading/loading.jsx","components/header/header.jsx","components/mainmenu/mainmenu.jsx","components/dashboard/goalform.jsx","components/dashboard/timer.jsx","components/dashboard/timedue.jsx","components/dashboard/timestamp.jsx","components/dashboard/timercompleted.jsx","components/dashboard/goalitem.jsx","components/dashboard/repeatform.jsx","components/dashboard/multigoallist.jsx","components/dashboard/multigoalitem.jsx","components/dashboard/clock.jsx","components/dashboard/completedcounter.jsx","components/dashboard/centeredModal.jsx","components/settings/settings.jsx","components/dashboard/index.js","components/dashboard/dashboard.jsx","components/about/about.jsx","App.js","theme.js","serviceWorker.js","index.js"],"names":["FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","components_Firebase","Firebase","_this","this","classCallCheck","signIn","provider","auth","GoogleAuthProvider","signInWithRedirect","catch","err","console","log","logout","signOut","redirect","getRedirectResult","initializeUser","uid","goalsRef","db","collection","concat","settingsRef","app","initializeApp","firestore","settings","timestampsInSnapshots","Login","user","Fragment","Card_default","className","Typography_default","variant","gutterBottom","align","displayName","Button_default","color","onClick","history","push","login","Loading","status","CircularProgress_default","size","children","Header","AppBar_default","position","style","backgroundColor","theme","palette","primary","main","Toolbar_default","Link","to","aria-label","Beenhere_default","IconButton_default","toggleDrawer","Menu_default","withTheme","MainMenu","navigate","route","_this2","List_default","ListItem_default","button","ListItemIcon_default","Home_default","ListItemText_default","DoneAll_default","Info_default","Settings_default","Divider_default","ExitToApp_default","withRouter","GoalForm","possibleConstructorReturn","getPrototypeOf","call","toggleMultigoal","setState","multigoal","state","toggleTimedgoal","timedgoal","handleChange","name","event","defineProperty","target","value","validate","nameErr","nameHelper","dateErr","dateHelper","timeErr","timeHelper","date","time","now","Date","dateArgs","split","map","str","Number","datetime","construct","toConsumableArray","getTime","toDateString","handleSubmit","d","n","initialState","goal","subgoal","doc","parentGoalId","id","update","completed","updatedAt","then","toggleModal","add","createdAt","plusOneDay","leadingZero","num","tomorrow","getFullYear","getMonth","getDate","today","maxDate","currentTime","getHours","getMinutes","milliseconds","prevProps","prevState","CardHeader_default","avatar","Avatar_default","secondary","text","AddAlarm_default","title","action","tabIndex","Close_default","CardContent_default","Grid_default","container","spacing","item","xs","TextField_default","label","placeholder","error","onChange","fullWidth","margin","helperText","md","type","InputLabelProps","shrink","InputProps","inputProps","min","max","FormGroup_default","row","FormControlLabel_default","control","Switch_default","checked","subgoalsAdded","CardActions_default","Timer","checkTime","updateTime","unMounting","counting","timeRemaining","Math","abs","seconds","floor","minutes","hours","days","toString","requestAnimationFrame","classes","TimeDue","ms","diff","toLocaleString","TimeStamp","updated","created","timeStatus","renderSpans","TimerCompleted","completionTime","round","GoalItem","handleMenuClick","anchorEl","currentTarget","handleClose","handleCompleteToggle","newCompletedStatus","goalRef","completedAt","countRef","get","newCount","data","count","set","enabled","triggerModal","modalToggleFn","toggleRepeatModal","parentGoalName","parentGoal","parentGoalDate","handleDelete","delete","toggleTimeView","timeView","deleteSelf","open","Boolean","timestamp","dashboard_timer","primaryTypographyProps","width","secondaryTypographyProps","timercompleted","dashboard_timedue","ListItemSecondaryAction_default","CheckBox_default","CheckBoxOutlineBlank_default","MoreVert_default","core_Menu_default","onClose","MenuItem_default","Edit_default","inset","Replay_default","Delete_default","nativeColor","warn","RepeatForm","handleText","goalErr","goalErrMsg","formError","handleTime","_this$setState","unit","Err","ErrMsg","hasError","isNaN","months","plusMonth","setMonth","toggleChip","chip","resetBadFields","minutesErr","minutesErrMsg","hoursErr","hoursErrMsg","daysErr","daysErrMsg","weeksErr","weeks","weeksErrMsg","step","required","onBlur","RadioGroup_default","Radio_default","root","endAdornment","InputAdornment_default","Chip_default","icon","Alarm_default","disabled","MultiGoalList","subgoals","deleteInProgress","length","deleteParent","onSnapshot","snapshot","forEach","objectSpread","filter","completePercentage","updateProgress","_this3","Collapse_default","in","timeout","unmountOnExit","component","disablePadding","sort","goalA","goalB","dashboard_goalitem","key","MultiGoalItem","document","hidden","progress","startDelete","subgoalsOpen","finishDelete","toggleSubgoals","newPercentage","loading","setTimeout","ExpandLess_default","ExpandMore_default","Add_default","LinearProgress_default","multigoallist","Clock","unmounting","newTime","options","weekday","year","month","day","hour","minute","second","CompletedCounter","completeCount","dashboard_centeredModal","_ref","Children","rest","objectWithoutProperties","Modal_default","getNewBackground","fetch","res","body","backgroundImage","url","Settings","toggleEnableSwitch","setting","loading_loading","justify","completedcounter","completedCount","clock","Dashboard","componentDidMount","goals","empty","initializeSettings","settingsLoaded","background","modalState","goalModalOpen","repeatModalOpen","repeatModalState","undefined","dashboard_multigoalitem","dashboard_goalform","dashboard_repeatform","Fab_default","About","alignItems","lg","href","rel","PrivateRoute","Route","render","Redirect","pathname","from","location","App","onAuthStateChanged","asyncToGenerator","regenerator_default","mark","_callee","result","wrap","_context","prev","next","sent","stop","drawer","BrowserRouter","basename","header_header","Drawer_default","anchor","mainmenu_mainmenu","path","login_login","App_PrivateRoute","exact","createMuiTheme","blue","purple","orange","red","contrastThreshold","tonalOffset","typography","useNextVariants","isLocalhost","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","context","Provider","styles","CssBaseline_default","src_App_0","getElementById","URL","origin","addEventListener","response","contentType","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.27068fa4.chunk.js","sourcesContent":["import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n    <FirebaseContext.Consumer>\n        {firebase => <Component {...props} firebase={firebase} />}\n    </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;","import app, { auth } from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n// Initialize Firebase\nconst config = {\n    apiKey: process.env.REACT_APP_FIREBASE_apiKey,\n    authDomain: process.env.REACT_APP_FIREBASE_authDomain,\n    databaseURL: process.env.REACT_APP_FIREBASE_databaseURL,\n    projectId: process.env.REACT_APP_FIREBASE_projectId,\n    storageBucket: process.env.REACT_APP_FIREBASE_storageBucket,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_messagingSenderId\n};\n\nclass Firebase {\n    constructor() {\n        app.initializeApp(config);\n        this.auth = app.auth();\n        this.db = app.firestore();\n        const settings = {/* your settings... */ timestampsInSnapshots: true};\n        this.db.settings(settings);\n        // this.userRef = null;\n        // this.goalsRef = null;\n    }\n    signIn = () => {\n        const provider = new auth.GoogleAuthProvider();\n        return this.auth.signInWithRedirect(provider).catch(err => console.log(err));\n        // return this.auth.signInWithPopup(provider).catch(err => console.log(err));\n    }\n    logout = () => {\n        return this.auth.signOut();\n    }\n    redirect = () => {\n        return this.auth.getRedirectResult();\n    }\n    initializeUser = (uid) => {\n        this.goalsRef = this.db.collection(`users/${uid}/goals`);\n        this.settingsRef = this.db.collection(`users/${uid}/settings`)\n        // this.db.collection(`users/${uid}/goals/${goalid}/subgoals`);\n        // this.goalsRef = this.userRef.collection(\"goals\");\n    }\n}\n\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };","import React, { Component } from 'react';\nimport Card from '@material-ui/core/Card';\n// import CardMedia from '@material-ui/core/CardMedia';\n// import CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n// import Grid from '@material-ui/core/Grid';\n// import LogoIcon from '@material-ui/icons/Beenhere';\nimport Button from '@material-ui/core/Button';\n// import darts from './darts.jpeg';\n\nimport './login.css';\n\nclass Login extends Component {\n    componentDidMount() {\n        // console.log(this.props)\n        if (this.props.user) {\n            // this.props.history.push('/')\n            console.log(this.props.user);\n        }\n    }\n    render() {\n        return (\n            <React.Fragment>\n\n            <Card className=\"login-titleCard\">\n                {/* <CardMedia\n                    className=\"login-titleCard_img\"\n                    component=\"img\"\n                    alt=\"Inspirational Goal Image\"\n                    image={darts}/> */}\n                <div className=\"login-titleCard_container\">\n                    <Typography variant=\"h2\" className=\"login-titleCard_title\" gutterBottom>\n                        Welcome to <strong>GOALER</strong>\n                    </Typography>\n                    <Typography variant=\"h5\" align=\"right\" className=\"login-titleCard_subtitle\" gutterBottom>\n                        Track your goals.\n                    </Typography>\n                    <Typography variant=\"h5\" align=\"right\" className=\"login-titleCard_subtitle\" gutterBottom>\n                        Get more things done.\n                    </Typography>\n                    {\n                        this.props.user\n                        ? <React.Fragment>\n                            <Typography variant=\"h5\" align=\"right\" className=\"login-titleCard_actionCall\" gutterBottom>\n                                Welcome, {this.props.user.displayName}\n                            </Typography>\n                            <Button variant=\"contained\" color=\"secondary\" className=\"login-titleCard_dashBtn\" onClick={() => this.props.history.push('/')}>\n                                See your Goals\n                            </Button>\n                        </React.Fragment>\n                        : <Typography variant=\"h5\" align=\"right\" className=\"login-titleCard_actionCall\" gutterBottom>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={this.props.login}>Sign in</Button>\n                            &nbsp;with Google\n                        </Typography>\n                    }\n                </div>\n            </Card>\n            {/* <Grid container justify={\"center\"} alignItems={\"center\"}>\n                <Grid item xs={12} lg={8}>\n                    <Card>\n                        <CardContent>\n                            <Typography variant=\"h5\">\n                                Welcome to Goaler\n                            </Typography>\n                        </CardContent>\n                    </Card>\n                </Grid>\n            </Grid> */}\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport './loading.css';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nclass Loading extends Component {\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    render() {\n        return (\n            <React.Fragment>\n            {\n                this.props.status ? \n                    <div className=\"loading\">\n                        <CircularProgress color=\"secondary\" size={200}/>\n                    </div> :\n                    this.props.children\n            }\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Loading;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport LogoIcon from '@material-ui/icons/Beenhere';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { withTheme } from '@material-ui/core/styles';\nimport './header.css';\n\nclass Header extends Component {\n    render() {\n        return (\n            <header>\n                <AppBar position=\"static\" className=\"header\" \n                    style={{backgroundColor: this.props.theme.palette.primary.main + '80' }}>\n                    <Toolbar className=\"row\">\n                        <Link to=\"/\">\n                            <Button color=\"inherit\" aria-label=\"Logo\">\n                                <LogoIcon />\n                                <Typography variant=\"h6\" color=\"inherit\">\n                                    Goaler\n                                </Typography>\n                            </Button>\n                        </Link>\n                        <div>\n                        {\n                            this.props.user\n                            ? <IconButton color=\"inherit\" onClick={this.props.toggleDrawer}>\n                                <MenuIcon />\n                            </IconButton>\n                            : <Button color=\"inherit\" onClick={this.props.login}>Sign In</Button>\n                        }\n                        </div>\n                    </Toolbar>\n                </AppBar>\n            </header>\n        )\n    }\n}\n\nexport default withTheme()(Header);","import React, { Component } from 'react'\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ExitIcon from '@material-ui/icons/ExitToApp'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport GoalsIcon from '@material-ui/icons/DoneAll'\nimport InfoIcon from '@material-ui/icons/Info'\nimport HomeIcon from '@material-ui/icons/Home'\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { withRouter } from 'react-router-dom';\nimport './mainmenu.css'\n\nclass MainMenu extends Component {\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    navigate = route => {\n        this.props.history.push(route);\n        this.props.toggleDrawer();\n    }\n\n    render() {\n        return (\n            <List className=\"mainmenu\">\n                <ListItem button onClick={() => this.navigate('/login')}>\n                    <ListItemIcon>\n                        <HomeIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Home\" />\n                </ListItem>\n                <ListItem button onClick={() => this.navigate('/')}>\n                    <ListItemIcon>\n                        <GoalsIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Goals\" />\n                </ListItem>\n                <ListItem button onClick={() => this.navigate('/about')}>\n                    <ListItemIcon>\n                        <InfoIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"About\" />\n                </ListItem>\n                <ListItem button onClick={() => this.navigate('/settings')}>\n                    <ListItemIcon>\n                        <SettingsIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Settings\" />\n                </ListItem>\n                <Divider/>\n                <ListItem button onClick={this.props.logout}>\n                    <ListItemIcon>\n                        <ExitIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Sign Out\" />\n                </ListItem>\n            </List>\n        )\n    }\n}\n\nexport default withRouter(MainMenu);","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Icon from '@material-ui/icons/AddAlarm'\nimport { withTheme } from '@material-ui/core/styles'\nimport { withFirebase } from '../Firebase';\nimport './goalform.css';\n\nclass GoalForm extends Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props)\n    this.now = new Date();\n    const plusOneDay = new Date(this.now.getTime() + (1000 * 60 * 60 * 24));\n    const leadingZero = num => num < 10 ? \"0\" + num : num\n    const tomorrow = `${plusOneDay.getFullYear()}-${leadingZero(plusOneDay.getMonth() + 1)}-${leadingZero(plusOneDay.getDate())}`\n    this.today = `${this.now.getFullYear()}-${leadingZero(this.now.getMonth() + 1)}-${leadingZero(this.now.getDate())}`\n    this.maxDate = `${this.now.getFullYear() + 10}-${leadingZero(this.now.getMonth() + 1)}-${leadingZero(this.now.getDate())}`\n    this.currentTime = `${leadingZero(this.now.getHours())}:${leadingZero(this.now.getMinutes())}`;\n    let initialState;\n    if (this.props.initialState && this.props.initialState.date) {\n      const milliseconds = this.props.initialState.date;\n      let date = tomorrow;\n      let time = this.currentTime;\n      if (milliseconds > this.now.getTime()) {\n        const d = new Date(milliseconds);\n        date = `${d.getFullYear()}-${leadingZero(d.getMonth() + 1)}-${leadingZero(d.getDate())}`\n        time = `${leadingZero(d.getHours())}:${leadingZero(d.getMinutes())}`;\n      }\n      initialState = {\n        name: this.props.initialState.goal,\n        nameErr: false,\n        nameHelper: \"\",\n        date,\n        dateErr: false,\n        dateHelper: \"\",\n        time,\n        timeErr: false,\n        timeHelper: \"\",\n        multigoal: this.props.initialState.multigoal ? true : false,\n        subgoal: this.props.initialState.subgoal ? true : false,\n        timedgoal: this.props.initialState.timedgoal ? true : false,\n      }\n    } else {\n      initialState = {\n        name: \"\",\n        nameErr: false,\n        nameHelper: \"\",\n        date: tomorrow,\n        dateErr: false,\n        dateHelper: \"\",\n        time: this.currentTime,\n        timeErr: false,\n        timeHelper: \"\",\n        multigoal: this.props.initialState && this.props.initialState.multigoal\n          ? true : false,\n        subgoal: this.props.initialState && this.props.initialState.subgoal\n          ? true : false,\n        timedgoal: this.props.initialState && this.props.initialState.timedgoal\n          ? true : false\n      }\n    }\n    this.state = initialState;\n    // console.log(this.state)\n  }\n\n  toggleMultigoal = () => {\n    this.setState({\n      multigoal: !this.state.multigoal\n    })\n  }\n\n  toggleTimedgoal = () => {\n    this.setState({\n      timedgoal: !this.state.timedgoal\n    })\n  }\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.name !== this.state.name ||\n      prevState.date !== this.state.date ||\n      prevState.time !== this.state.time) {\n      this.validate();\n    }\n  }\n\n  validate = () => {\n    //check if name\n    let nameErr = false;\n    let nameHelper = \"\";\n    let dateErr = false;\n    let dateHelper = \"\";\n    let timeErr = false;\n    let timeHelper = \"\";\n    if (!this.state.name) {\n      nameErr = true;\n      nameHelper = \"Please set a goal\";\n    }\n    //check if date\n    if (!this.state.date) {\n      dateErr = true;\n      dateHelper = \"Please set a date\";\n    }\n    //check if time\n    if (!this.state.time) {\n      timeErr = true;\n      timeHelper = \"Please set a time\";\n    }\n    //get current date and time when form submits\n    const now = new Date();\n    const dateArgs = `${this.state.date} ${this.state.time}`.split(/[- :]/).map(str => Number(str));\n    dateArgs[1]--; //month is 0 indexed\n    const datetime = new Date(...dateArgs);\n    // check if time/date is > now\n    if (datetime.getTime() < now.getTime()) {\n      if (datetime.toDateString() !== now.toDateString()) {\n        dateErr = true;\n        dateHelper = \"Date must be in future\";\n      } else {\n        timeErr = true;\n        timeHelper = \"Time must be in future\";\n      }\n    }\n    this.setState({\n      nameErr,\n      nameHelper,\n      dateErr,\n      dateHelper,\n      timeErr,\n      timeHelper,\n    })\n    if (timeErr || dateErr || nameErr) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  handleSubmit = () => {\n    if (this.validate()) return;\n    const dateArgs = `${this.state.date} ${this.state.time}`.split(/[- :]/)\n      .map(str => Number(str));\n    dateArgs[1]--; //month is 0 indexed\n    const d = new Date(...dateArgs);\n    const now = new Date();\n    const n = now.getTime();\n    if (this.props.initialState && this.props.initialState.goal) {\n      if (this.state.subgoal) {\n        // console.log(`updating sub goal`, this.state, this.props)\n        this.props.firebase.goalsRef\n          .doc(this.props.initialState.parentGoalId)\n          .collection('subgoals')\n          .doc(this.props.initialState.id)\n          .update({\n            goal: this.state.name,\n            date: d.getTime(),\n            multigoal: this.state.multigoal,\n            subgoal: this.state.subgoal,\n            timedgoal: this.state.timedgoal,\n            completed: false,\n            updatedAt: n\n          })\n          .then(() => {\n            this.props.toggleModal();\n            // this.props.initialState.closeMenu();\n          })\n      } else {\n        // console.log(`updating regular goal`, this.state, this.props)\n        this.props.firebase.goalsRef\n          .doc(this.props.initialState.id)\n          .update({\n            goal: this.state.name,\n            date: d.getTime(),\n            multigoal: this.state.multigoal,\n            subgoal: this.state.subgoal,\n            timedgoal: this.state.timedgoal,\n            completed: false,\n            updatedAt: n\n          })\n          .then(() => {\n            this.props.toggleModal();\n            // this.props.initialState.closeMenu();\n          })\n      }\n    } else if (!this.state.subgoal) {\n      // console.log(`Adding regular goal`, this.state, this.props)\n      this.props.firebase.goalsRef.add({\n        goal: this.state.name,\n        date: d.getTime(),\n        multigoal: this.state.multigoal,\n        subgoal: this.state.subgoal,\n        timedgoal: this.state.timedgoal,\n        completed: false,\n        createdAt: n,\n        updatedAt: n\n      })\n        .then(() => {\n          this.props.toggleModal();\n        })\n    } else {\n      // console.log(`Adding subgoal`, this.state, this.props)\n      this.props.firebase.goalsRef\n        .doc(this.props.initialState.parentGoalId)\n        .collection('subgoals').add({\n          goal: this.state.name,\n          date: d.getTime(),\n          multigoal: this.state.multigoal,\n          subgoal: this.state.subgoal,\n          timedgoal: this.state.timedgoal,\n          completed: false,\n          createdAt: n,\n          updatedAt: n\n        })\n        .then(() => {\n          this.props.toggleModal();\n        })\n    }\n\n  }\n\n  render() {\n    return (\n      <Card className=\"goalform\">\n        <CardHeader\n          avatar={\n            <Avatar\n              style={{\n                backgroundColor: this.props.theme.palette.secondary.main,\n                color: this.props.theme.palette.text.primary\n              }}>\n              <Icon />\n            </Avatar>\n          }\n          title=\"Add a goal\"\n          // subheader=\"With Chocolates\"\n          action={\n            <IconButton onClick={this.props.toggleModal} tabIndex={-1}>\n              <CloseIcon />\n            </IconButton>\n          }\n        />\n        <CardContent>\n          <Grid container spacing={0}>\n            <Grid item xs={12}>\n              <TextField\n                label=\"Goal\"\n                placeholder=\"Make it a good one!\"\n                error={this.state.nameErr}\n                value={this.state.name}\n                onChange={this.handleChange('name')}\n                fullWidth\n                margin=\"normal\"\n                helperText={this.state.nameHelper}\n              />\n            </Grid>\n            { this.state.timedgoal &&\n              <>\n                <Grid item xs={12} md={6}>\n                  <TextField\n                    label=\"Due Date\"\n                    error={this.state.dateErr}\n                    type=\"date\"\n                    value={this.state.date}\n                    onChange={this.handleChange('date')}\n                    margin=\"normal\"\n                    fullWidth\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    helperText={this.state.dateHelper}\n                    InputProps={{\n                      inputProps: {\n                        min: this.today,\n                        max: this.maxDate\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <TextField\n                    label=\"Due Time\"\n                    error={this.state.timeErr}\n                    type=\"time\"\n                    value={this.state.time}\n                    onChange={this.handleChange('time')}\n                    margin=\"normal\"\n                    fullWidth\n                    helperText={this.state.timeHelper}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                  />\n                </Grid>\n              </>\n            }\n            <Grid item xs={12} md={6}>\n              <FormGroup row>\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={this.state.timedgoal}\n                      onChange={this.toggleTimedgoal}\n                      value={this.state.timedgoal}\n                    />\n                  }\n                  label={\n                    <Typography color={\n                      this.state.timedgoal\n                        ? \"textPrimary\"\n                        : \"textSecondary\"\n                    }>\n                      Timed Goal\n                    </Typography>\n                  } />\n                {\n                  !this.state.subgoal && !this.props.initialState.subgoalsAdded &&\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={this.state.multigoal}\n                        onChange={this.toggleMultigoal}\n                        value={this.state.multigoal}\n                      />\n                    }\n                    label={\n                      <Typography color={\n                        this.state.multigoal\n                          ? \"textPrimary\"\n                          : \"textSecondary\"\n                      }>\n                        Multi-Step Goal\n                      </Typography>\n                    } />\n                }\n              </FormGroup>\n            </Grid>\n          </Grid>\n        </CardContent>\n        <CardActions className=\"row right\">\n          <Button onClick={this.handleSubmit}>\n            {\n              this.props.initialState && this.props.initialState.goal\n                ? \"Update \" : \"Add \"\n            }\n            Goal\n          </Button>\n          <Button onClick={this.props.toggleModal}>Cancel</Button>\n        </CardActions>\n      </Card>\n    )\n  }\n}\n\nexport default withTheme()(withFirebase(GoalForm));","import React from 'react';\nimport './timer.css';\nclass Timer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.unMounting = false;\n        const timeRemaining = this.checkTime();\n        this.state = {\n            time: {},\n            counting: timeRemaining > 0 ? true : false,\n            classes: \"\"\n        }\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if(prevProps.date !== this.props.date) {\n            this.updateTime();\n        }\n    }\n    componentDidMount() {\n        if (this.props.date /* && this.state.counting */) {\n            this.updateTime();\n        }\n    }\n    checkTime = () => {\n        const future = this.props.date;\n        const d = new Date();\n        const now = d.getTime();\n        const timeRemaining = future - now;\n        return timeRemaining;\n    }\n    updateTime = () => {\n        if (this.unMounting) return;\n        // var future = Date.parse(\"December 31, 2019\");\n        let timeRemaining = this.checkTime();\n        let counting;\n        timeRemaining < 0 ? counting = false : counting = true;\n        timeRemaining = Math.abs(timeRemaining);\n        // console.log(timeRemaining)\n        // if (timeRemaining < 1000) {\n        //     return this.setState({\n        //         time: {\n        //             days: \"00\",\n        //             hours: \"00\",\n        //             minutes: \"00\",\n        //             seconds: \"00\"\n        //         },\n        //         counting: false,\n        //         // classes: \"timer-strike_animate\"\n        //     });\n        // }\n        let seconds = Math.floor(timeRemaining / 1000) % 60;\n        let minutes = Math.floor((timeRemaining / 1000) / 60) % 60;\n        let hours = Math.floor((timeRemaining / 1000) / 3600) % 24;\n        let days = Math.floor(((timeRemaining / 1000) / 3600) / 24);\n        days = days < 10 ? '0' + days : days.toString();\n        hours = hours < 10 ? '0' + hours : hours.toString();\n        minutes = minutes < 10 ? '0' + minutes : minutes.toString();\n        seconds = seconds < 10 ? '0' + seconds : seconds.toString();\n        this.setState({\n            time: {\n                days, hours, minutes, seconds\n            },\n            counting: counting\n        });\n        requestAnimationFrame(this.updateTime);\n    }\n\n    componentWillUnmount() {\n        this.unMounting = true;\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                {\n                    this.state.counting\n                    ? <span className={this.state.classes}>\n                        Due in:\n                        {` ${this.state.time.days}:` +\n                            `${this.state.time.hours}:` +\n                            `${this.state.time.minutes}:` +\n                            `${this.state.time.seconds}`}\n                    </span>\n                    : <span className=\"timer-strike\">\n                        Past Due:\n                        {` ${this.state.time.days}:` +\n                            `${this.state.time.hours}:` +\n                            `${this.state.time.minutes}:` +\n                            `${this.state.time.seconds}`}\n                    </span>\n                    // : <span className=\"timer-strike\">00:00:00:00</span>\n                }\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Timer;","import React from 'react';\nimport './timedue.css'\n\nconst TimeDue = props => {\n    const ms = props.date;\n    const now = new Date();\n    const nowMs = now.getTime();\n    const diff = nowMs - ms;\n    const d = new Date(ms);\n    return (\n        <span className={diff > 0 ? \"timedue\" : \"\"}>Due: {d.toLocaleString()}</span>\n    )\n};\n\nexport default TimeDue;","import React, { Component } from 'react';\n\nclass TimeStamp extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            created: \"\",\n            updated: \"\",\n            completed: \"\",\n            timeStatus: \"\"\n        }\n\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps !== this.props) {\n            this.updateTime();\n        }\n    }\n\n    componentDidMount() {\n        this.updateTime();\n    }\n\n    updateTime = () => {\n        const updated = new Date(this.props.updated);\n        const created = new Date(this.props.created);\n        const completed = new Date(this.props.completed);\n        if (this.props.completed) {\n            this.setState({\n                timeStatus: \"completed\",\n                completed: \"Done: \" + completed.toLocaleString()\n            })\n        } else if (this.props.updated === this.props.created) {\n            this.setState({\n                timeStatus: \"created\",\n                created: \"Created: \" + created.toLocaleString()\n            });\n        } else {\n            this.setState({\n                timeStatus: \"updated\",\n                updated: \"Updated: \" + updated.toLocaleString(),\n                created: \"Created: \" + created.toLocaleString()\n            });\n        }\n    }\n\n    renderSpans = () => {\n        //if created\n        switch(this.state.timeStatus) {\n            case 'completed':\n                return (\n                    <span>{this.state.completed}</span>\n                )\n            case 'created':\n                return (\n                    <span>{this.state.created}</span>\n                )\n            case 'updated':\n                return (\n                    <React.Fragment>\n                        {/* <span>{this.state.created}</span><br/> */}\n                        <span>{this.state.updated}</span>\n                    </React.Fragment>\n                )\n            default:\n                return;\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                {this.renderSpans()}\n            </React.Fragment>\n        )\n    }\n}\n\nexport default TimeStamp;","import React, { Component } from 'react';\n\nclass TimerCompleted extends Component {\n    constructor(props) {\n        super(props);\n        const completed = props.completed;\n        const updated = props.updated;\n        const completionTime = completed - updated;\n        let seconds = Math.round(completionTime / 1000) % 60;\n        let minutes = Math.floor((completionTime / 1000) / 60) % 60;\n        let hours = Math.floor((completionTime / 1000) / 3600) % 24;\n        let days = Math.floor(((completionTime / 1000) / 3600) / 24);\n        this.days = days < 10 ? '0' + days : days.toString();\n        this.hours = hours < 10 ? '0' + hours : hours.toString();\n        this.minutes = minutes < 10 ? '0' + minutes : minutes.toString();\n        this.seconds = seconds < 10 ? '0' + seconds : seconds.toString();\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <span>{`Time: ${this.days}:${this.hours}:${this.minutes}:${this.seconds}`}</span><br/>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default TimerCompleted;","import React, { Component } from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { withTheme } from '@material-ui/core/styles';\nimport { withFirebase } from '../Firebase';\nimport Timer from './timer';\nimport TimeDue from './timedue';\nimport TimeStamp from './timestamp';\nimport TimerCompleted from './timercompleted';\nimport './goalitem.css';\n\nclass GoalItem extends Component {\n    constructor(props) {\n        super(props);\n        // console.log(props)\n        this.state = {\n            anchorEl: null,\n            timeView: true\n        };\n        this.goalRef = props.goal.subgoal\n        ? props.firebase.goalsRef.doc(`${props.parentGoal.id}/subgoals/${props.goal.id}`)\n        : props.firebase.goalsRef.doc(props.goal.id);\n    }\n\n    componentDidMount() {\n        if (this.props.deleteSelf) {\n            this.goalRef.delete();\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        // console.log(\"I rendered with\", {props: this.props})\n        if (prevProps.deleteSelf !== this.props.deleteSelf && this.props.deleteSelf) {\n            this.goalRef.delete();\n        }\n    }\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCompleteToggle = () => {\n        const d = new Date();\n        const ms = d.getTime();\n        const newCompletedStatus = !this.props.goal.completed\n        this.goalRef.update({\n            completed: newCompletedStatus,\n            completedAt: newCompletedStatus ? ms : null\n        });\n        const countRef = this.props.firebase.settingsRef.doc('completedCount');\n        countRef.get().then(doc => {\n            const data = doc.data();\n            let newCount;\n            newCompletedStatus\n                ? newCount = data.count + 1\n                : newCount = data.count - 1;\n            if (newCount < 0) newCount = 0;\n            countRef.set({\n                count: newCount,\n                enabled: data.enabled\n            });\n        });\n\n    }\n    triggerModal = (subgoal, type) => {\n        let modalToggleFn;\n        switch(type) {\n            case 'edit':\n                modalToggleFn = this.props.toggleModal;\n                break;\n            case 'repeat':\n                modalToggleFn = this.props.toggleRepeatModal;\n                break;\n            default:\n                return;\n        }\n        if (subgoal) {\n            // console.log(subgoal)\n            modalToggleFn({\n                parentGoalName: this.props.parentGoal.goal,\n                parentGoalDate: this.props.parentGoal.date,\n                parentGoalId: this.props.parentGoal.id,\n                goal: this.props.goal.goal,\n                date: this.props.goal.date,\n                id: this.props.goal.id,\n                multigoal: false,\n                subgoal: true,\n                timedgoal: this.props.goal.timedgoal,\n                // closeMenu: this.handleClose\n            })\n        } else {\n            modalToggleFn({\n                goal: this.props.goal.goal,\n                date: this.props.goal.date,\n                id: this.props.goal.id,\n                multigoal: this.props.goal.multigoal,\n                subgoal: this.props.goal.subgoal,\n                timedgoal: this.props.goal.timedgoal,\n                // closeMenu: this.handleClose\n            })\n        }\n        this.handleClose();\n    }\n\n    handleDelete = () =>{\n        this.goalRef.delete();\n        this.handleClose();\n    }\n\n    toggleTimeView = () => {\n        this.setState({\n            timeView: !this.state.timeView\n        })\n    }\n\n    render() {\n        const { anchorEl } = this.state;\n        const open = Boolean(anchorEl);\n        return (\n            <React.Fragment>\n                <ListItem className={this.props.goal.subgoal ? \"goalItem-indent\" : \"\"}\n                    button onClick={this.toggleTimeView}>\n                    {\n                        this.state.timeView\n                        ? <ListItemText\n                        // className={}\n                        primary={this.props.goal.goal}\n                        secondary={this.props.goal.completed\n                            ? <TimeStamp completed={this.props.goal.completedAt} />\n                            : this.props.goal.timedgoal && <Timer date={this.props.goal.date} />\n                        }\n                        primaryTypographyProps={{\n                            style: { width: '80%' },\n                            className: this.props.goal.completed ? \"goalitem-strike\" : \"\"\n                        }}\n                        secondaryTypographyProps={{ color: 'error' }}\n                        />\n                        : <ListItemText\n                        // className={this.props.goal.completed ? \"goalitem-strike\" : \"\"}\n                        primary={this.props.goal.goal}\n                        secondary={this.props.goal.completed\n                            ? <React.Fragment>\n                                {/* <TimeStamp completed={this.props.goal.completedAt} /><br/> */}\n                                {/* <TimeStamp updated={this.props.goal.updatedAt} created={this.props.goal.createdAt}/><br/> */}\n                                <TimerCompleted completed={this.props.goal.completedAt} updated={this.props.goal.createdAt}/>\n                            </React.Fragment>\n                            : this.props.goal.timedgoal && <React.Fragment>\n                                {/* <TimeStamp updated={this.props.goal.updatedAt} created={this.props.goal.createdAt}/><br/> */}\n                                <TimeDue date={this.props.goal.date}/><br/>\n                            </React.Fragment>\n                        }\n                        primaryTypographyProps={{\n                            style: { width: '80%' },\n                            className: this.props.goal.completed ? \"goalitem-strike\" : \"\"\n                        }}\n                        secondaryTypographyProps={{ color: 'error' }}\n                        />\n\n                    }\n                    <ListItemSecondaryAction>\n                        <IconButton onClick={this.handleCompleteToggle}>\n                            {\n                                this.props.goal.completed\n                                ? <CheckBoxIcon color=\"secondary\"/>\n                                : <CheckBoxOutlineBlankIcon />\n                            }\n                        </IconButton>\n                        <IconButton onClick={this.handleMenuClick}>\n                            <MoreVertIcon />\n                        </IconButton>\n                        <Menu\n                            id=\"long-menu\"\n                            anchorEl={anchorEl}\n                            open={open}\n                            onClose={this.handleClose}>\n                            {\n                                !this.props.goal.completed &&\n                                <MenuItem\n                                    onClick={() => this.triggerModal(this.props.goal.subgoal, \"edit\")}>\n                                    <ListItemIcon>\n                                        <EditIcon color={'inherit'}/>\n                                    </ListItemIcon>\n                                    <ListItemText inset primary=\"Edit\" />\n                                </MenuItem>\n                            }\n                            {\n                                this.props.goal.completed &&\n                                <MenuItem\n                                    onClick={() => this.triggerModal(this.props.goal.subgoal, \"repeat\")}>\n                                    <ListItemIcon>\n                                        <ReplayIcon color=\"error\" />\n                                    </ListItemIcon>\n                                    <ListItemText inset primary=\"Repeat\"/>\n                                </MenuItem>\n                            }\n                            <MenuItem onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon nativeColor={this.props.theme.palette.warn[500]}/>\n                                </ListItemIcon>\n                                <ListItemText inset primary=\"Delete\" />\n                            </MenuItem>\n                        </Menu>\n                    </ListItemSecondaryAction>\n                </ListItem>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default withTheme()(withFirebase(GoalItem));","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Chip from '@material-ui/core/Chip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport AlarmIcon from '@material-ui/icons/Alarm'\nimport CloseIcon from '@material-ui/icons/Close';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport { withTheme } from '@material-ui/core/styles';\nimport { withFirebase } from '../Firebase';\nimport TimeDue from './timedue';\nimport Timer from './timer';\nimport './repeatform.css'\n\nclass RepeatForm extends Component {\n    constructor(props) {\n        super(props)\n        const d = new Date();\n        this.state = {\n            now: d.getTime(),\n            value: (1000 * 60 * 60 * 24).toString(),\n            chip: true,\n            formError: false,\n            hours: \"1\",\n            hoursErr: false,\n            hoursErrMsg: \"\",\n            minutes: \"10\",\n            minutesErr: false,\n            minutesErrMsg: \"\",\n            days: \"1\",\n            daysErr: false,\n            daysErrMsg: \"\",\n            weeks: \"1\",\n            weeksErr: false,\n            weeksErrMsg: \"\",\n            goal: this.props.initialState.goal,\n            goalErr: false,\n            goalErrMsg: \"\"\n        }\n    }\n    handleText = event => {\n        const goal = event.target.value;\n        let goalErr, goalErrMsg, formError;\n        if (goal === \"\") {\n            goalErr = true;\n            goalErrMsg = \"Must have goal name\";\n            formError = true;\n        } else {\n            goalErr = false;\n            goalErrMsg = \"\";\n            formError = false;\n        }\n        this.setState({goal, goalErr, goalErrMsg, formError});\n    }\n\n    handleTime = event => {\n        const name = event.target.name;\n        let unit;\n        switch(name) {\n            case 'hours':\n                unit = 60;\n                break;\n            case 'minutes':\n                unit = 1;\n                break;\n            case 'days':\n                unit = 60 * 24;\n                break;\n            case 'weeks':\n                unit = 60 * 24 * 7;\n                break;\n            default:\n                break;\n        }\n        const num = Number(event.target.value)\n        let Err;\n        let ErrMsg;\n        let hasError = false;\n        if (num <= 0 || isNaN(num)) {\n            Err = true;\n            ErrMsg = \"Time > 0\"\n            hasError = true;\n        }\n        this.setState({\n            [name]: event.target.value,\n            [name + \"Err\"]: Err,\n            [ name + \"ErrMsg\"]: ErrMsg,\n            formError: hasError,\n            value: (1000 * 60 * unit * num).toString()\n        })\n    }\n\n    handleChange = event => {\n        const d = new Date();\n        const value = event.target.value;\n        this.setState({ \n            value,\n            now: d.getTime()\n        });\n    };\n\n    getMonth = months => {\n        const d = new Date();\n        const plusMonth = new Date();\n        plusMonth.setMonth(d.getMonth() + months);\n        let value = plusMonth.getTime() - d.getTime();\n        value = value.toString();\n        return value;\n    }\n\n    handleSubmit = () => {\n        const goal = this.props.initialState;\n        const collectionRef = goal.subgoal\n            ? this.props.firebase.goalsRef.doc(goal.parentGoalId).collection('subgoals')\n            : this.props.firebase.goalsRef\n        collectionRef.add({\n            goal: this.state.goal,\n            date: (+this.state.value) + this.state.now,\n            multigoal: goal.multigoal,\n            subgoal: goal.subgoal,\n            completed: false,\n            createdAt: this.state.now,\n            updatedAt: this.state.now\n        })\n        .then(() => {\n            this.props.toggleRepeatModal();\n        })\n    }\n\n    toggleChip = () => {\n        this.setState({chip: !this.state.chip})\n    }\n\n    resetBadFields = () => {\n        if (this.state.minutesErr) {\n            this.setState({\n                minutes: \"10\",\n                minutesErr: false,\n                minutesErrMsg: \"\",\n                formError: false\n            });\n        }\n        if (this.state.hoursErr) {\n            this.setState({\n                hours: \"1\",\n                hoursErr: false,\n                hoursErrMsg: \"\",\n                formError: false\n            });\n        }\n        if (this.state.daysErr) {\n            this.setState({\n                days: \"1\",\n                daysErr: false,\n                daysErrMsg: \"\",\n                formError: false\n            });\n        }\n        if (this.state.weeksErr) {\n            this.setState({\n                weeks: \"1\",\n                weeksErr: false,\n                weeksErrMsg: \"\",\n                formError: false\n            });\n        }\n        if (this.state.goalErr) {\n            this.setState({\n                goal: this.props.initialState.goal,\n                goalErr: false,\n                goalErrMsg: \"\",\n                formError: false\n            });\n        }\n    }\n\n    render() {\n        return (\n            <Card className=\"goalform\">\n                <CardHeader\n                    avatar={\n                        <Avatar\n                            style={{\n                                backgroundColor: this.props.theme.palette.secondary.main,\n                                color: this.props.theme.palette.text.primary\n                            }}>\n                            <ReplayIcon />\n                        </Avatar>\n                    }\n                    title=\"Repeat Goal:\"\n                    // subheader={this.state.goal}\n                    action={\n                        <IconButton onClick={this.props.toggleRepeatModal} tabIndex={-1}>\n                            <CloseIcon />\n                        </IconButton>\n                    }\n                />\n                <CardContent>\n                    <Grid container spacing={0}>\n                        <Grid item xs={12} className=\"repeatform-goalField\">\n                            <TextField\n                                error={this.state.goalErr}\n                                helperText={this.state.goalErrMsg}\n                                inputProps={{\n                                    step: 1,\n                                    min: 1,\n                                    required: true\n                                }}\n                                fullWidth\n                                // label=\"Goal\"\n                                name=\"goal\"\n                                value={this.state.goal}\n                                onBlur={this.resetBadFields}\n                                onChange={this.handleText}/>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <RadioGroup className=\"repeatform-buttonGrp\"\n                                row={true}\n                                aria-label=\"Repeat Time\"\n                                name=\"repeatTime\"\n                                value={this.state.value}\n                                onChange={this.handleChange}>\n                                <FormControlLabel value={(1000 * 60 * this.state.minutes).toString()} control={<Radio />} label={\n                                    <div className=\"repeatform-hourInput-wrapper\">\n                                        <TextField\n                                            classes={{root: \"repeatform-hourInput\"}}\n                                            type=\"number\"\n                                            error={this.state.minutesErr}\n                                            helperText={this.state.minutesErrMsg}\n                                            inputProps={{\n                                                step: 1,\n                                                min: 1,\n                                                required: true,\n                                            }}\n                                            InputProps={{\n                                                endAdornment: \n                                                <InputAdornment position=\"end\">\n                                                    Minute{this.state.minutes === \"1\" ? '' : 's'}\n                                                </InputAdornment>\n                                            }}\n                                            // label=\"Hours\"\n                                            name=\"minutes\"\n                                            className=\"\"\n                                            value={this.state.minutes}\n                                            onBlur={this.resetBadFields}\n                                            onChange={this.handleTime}/>\n                                            {/* <span>Minute{this.state.minutes === \"1\" ? '' : 's'}</span> */}\n                                    </div>\n                                } />\n                                <FormControlLabel value={(1000 * 60 * 60 * this.state.hours).toString()} control={<Radio />} label={\n                                    <div className=\"repeatform-hourInput-wrapper\">\n                                        <TextField\n                                            classes={{root: \"repeatform-hourInput\"}}\n                                            type=\"number\"\n                                            error={this.state.hoursErr}\n                                            helperText={this.state.hoursErrMsg}\n                                            inputProps={{\n                                                step: 1,\n                                                min: 1,\n                                                required: true\n                                            }}\n                                            InputProps={{\n                                                endAdornment: \n                                                <InputAdornment position=\"end\">\n                                                    Hour{this.state.hours === \"1\" ? '' : 's'}\n                                                </InputAdornment>\n                                            }}\n                                            // label=\"Hours\"\n                                            name=\"hours\"\n                                            className=\"\"\n                                            value={this.state.hours}\n                                            onBlur={this.resetBadFields}\n                                            onChange={this.handleTime}/>\n                                            {/* <span>Hour{this.state.hours === \"1\" ? '' : 's'}</span> */}\n                                    </div>\n                                } />\n                                <FormControlLabel value={(1000 * 60 * 60 * 24 * this.state.days).toString()} control={<Radio />} label={\n                                    <div className=\"repeatform-hourInput-wrapper\">\n                                        <TextField\n                                            classes={{root: \"repeatform-hourInput\"}}\n                                            type=\"number\"\n                                            error={this.state.daysErr}\n                                            helperText={this.state.daysErrMsg}\n                                            inputProps={{\n                                                step: 1,\n                                                min: 1,\n                                                required: true\n                                            }}\n                                            InputProps={{\n                                                endAdornment: \n                                                <InputAdornment position=\"end\">\n                                                    Day{this.state.days === \"1\" ? '' : 's'}\n                                                </InputAdornment>\n                                            }}\n                                            // label=\"Hours\"\n                                            name=\"days\"\n                                            className=\"\"\n                                            value={this.state.days}\n                                            onBlur={this.resetBadFields}\n                                            onChange={this.handleTime}/>\n                                            {/* <span>Day{this.state.days === \"1\" ? '' : 's'}</span> */}\n                                    </div>\n                                } />\n                                <FormControlLabel value={(1000 * 60 * 60 * 24 * 7 * this.state.weeks).toString()} control={<Radio />} label={\n                                    <div className=\"repeatform-hourInput-wrapper\">\n                                        <TextField\n                                            classes={{root: \"repeatform-hourInput\"}}\n                                            type=\"number\"\n                                            error={this.state.weeksErr}\n                                            helperText={this.state.weeksErrMsg}\n                                            inputProps={{\n                                                step: 1,\n                                                min: 1,\n                                                required: true\n                                            }}\n                                            InputProps={{\n                                                endAdornment: \n                                                <InputAdornment position=\"end\">\n                                                    Week{this.state.weeks === \"1\" ? '' : 's'}\n                                                </InputAdornment>\n                                            }}\n                                            // label=\"Hours\"\n                                            name=\"weeks\"\n                                            className=\"\"\n                                            value={this.state.weeks}\n                                            onBlur={this.resetBadFields}\n                                            onChange={this.handleTime}/>\n                                            {/* <span>Week{this.state.weeks === \"1\" ? '' : 's'}</span> */}\n                                    </div>\n                                } />\n                                <FormControlLabel value={this.getMonth(1)} control={<Radio />} label=\"One Month\" />\n                                <FormControlLabel value={this.getMonth(12)} control={<Radio />} label=\"One Year\" />\n                            </RadioGroup>\n                        </Grid>\n                        <Grid item xs={12} className=\"repeatform-chipWrapper\">\n                            <Chip tabIndex={-1}\n                                color={this.state.chip ? \"primary\" : \"secondary\"}\n                                icon={<AlarmIcon/>}\n                                onClick={this.toggleChip}\n                                label={\n                                    this.state.chip\n                                    ? <TimeDue date={this.state.now + (+this.state.value)}/>\n                                    : <Timer date={this.state.now + (+this.state.value)}/> \n                                    }\n                                />\n                        </Grid>\n                    </Grid>\n                </CardContent>\n                <CardActions className=\"row right\">\n                    <Button disabled={this.state.formError || +this.state.value === 0} onClick={this.handleSubmit}>\n                        Submit\n                    </Button>\n                    <Button onClick={this.props.toggleRepeatModal}>Cancel</Button>\n                </CardActions>\n            </Card>\n        )\n    }\n}\n\nexport default withTheme()(withFirebase(RepeatForm));","import React, { Component } from 'react';\nimport List from '@material-ui/core/List';\nimport Collapse from '@material-ui/core/Collapse';\nimport GoalItem from './goalitem';\nimport { withFirebase } from '../Firebase';\n\nclass MultiGoalList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            subgoals: []\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.deleteInProgress && this.state.subgoals.length === 0) {\n            this.props.deleteParent();\n        }\n    }\n\n    componentDidMount() {\n        this.props.firebase.db\n            .collection(`users/${this.props.user.uid}/goals/${this.props.parentGoal.id}/subgoals`)\n            .onSnapshot((snapshot) => {\n                const subgoals = [];\n                snapshot.forEach(doc => subgoals.push({ id: doc.id, ...doc.data() }))\n                const completed = subgoals.filter(goal => goal.completed);\n                const completePercentage = Math.round(completed.length / subgoals.length * 100);\n                this.props.updateProgress(completePercentage);\n                this.setState({ subgoals });\n            })\n    }\n\n    render() {\n        return (\n            <Collapse in={this.props.open} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding>\n                    {\n                        this.state.subgoals\n                            .sort((goalA, goalB) => {\n                              const diff = goalA.date - goalB.date\n                              if (goalA.completed === goalB.completed && goalA.timedgoal && goalB.timedgoal) {\n                                  return diff;\n                              } else if (goalA.completed === goalB.completed && goalA.timedgoal !== goalB.timedgoal) {\n                                  return goalA.timedgoal ? -1 : 1\n                              } else if (goalA.completed) {\n                                  return 1;\n                              } else {\n                                  return -1;\n                              }\n                            })\n                            .map(goal => (\n                                <GoalItem key={goal.id} goal={goal}\n                                    toggleModal={this.props.toggleModal}\n                                    toggleRepeatModal={this.props.toggleRepeatModal}\n                                    parentGoal={this.props.parentGoal}\n                                    deleteSelf={this.props.deleteInProgress}/>\n                            ))\n                    }\n                </List>\n            </Collapse>\n        );\n    }\n}\n\nexport default withFirebase(MultiGoalList);","import React, { Component } from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n// import CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\n// import CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { withTheme } from '@material-ui/core/styles';\nimport { withFirebase } from '../Firebase';\nimport MultiGoalList from './multigoallist';\nimport Timer from './timer';\nimport TimeDue from './timedue';\nimport TimeStamp from './timestamp';\nimport TimerCompleted from './timercompleted';\nimport './multigoalitem.css';\n\nclass MultiGoalItem extends Component {\n    constructor(props) {\n        super(props);\n        // console.log(props)\n        this.state = {\n            anchorEl: null,\n            timeView: true,\n            subgoalsOpen: props.goal.multigoal ? false : null,\n            progress: 0,\n            subgoalsAdded: false,\n            loading: true,\n            deleteInProgress: false,\n        };\n        this.goalRef = props.goal.subgoal\n        ? props.firebase.goalsRef.doc(`${props.parentGoal.id}/subgoals/${props.goal.id}`)\n        : props.firebase.goalsRef.doc(props.goal.id);\n    }\n    // componentDidUpdate() {\n    //     console.log(\"I rendered with\", {props: this.props})\n    // }\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCompleteToggle = () => {\n        if (document.hidden) { return; }\n        // if (this.props.goal.metadata.fromCache) return;\n        if ((this.state.progress === 100 && !this.props.goal.completed) ||\n        (this.state.progress !== 100 && this.props.goal.completed)) {\n            const d = new Date();\n            const ms = d.getTime();\n            const newCompletedStatus = !this.props.goal.completed\n            this.goalRef.update({\n                completed: newCompletedStatus,\n                completedAt: newCompletedStatus ? ms : null\n            });\n        }\n        // const countRef = this.props.firebase.settingsRef.doc('completedCount');\n        // countRef.get().then(doc => {\n        //     const data = doc.data();\n        //     let newCount;\n        //     newCompletedStatus\n        //         ? newCount = data.count + 1\n        //         : newCount = data.count - 1\n        //     if (newCount < 0) newCount = 0;\n        //     countRef.set({\n        //         count: newCount\n        //     })\n        // })\n\n    }\n    triggerModal = (subgoal) => {\n        if (subgoal) {\n            // console.log(subgoal)\n            this.props.toggleModal({\n                parentGoalName: this.props.goal.goal,\n                parentGoalDate: this.props.goal.date,\n                parentGoalId: this.props.goal.id,\n                multigoal: false,\n                subgoal: true,\n                subgoalsAdded: this.state.subgoalsAdded,\n                timedgoal: this.props.goal.timedgoal,\n                // closeMenu: this.handleClose\n            })\n        } else {\n            this.props.toggleModal({\n                goal: this.props.goal.goal,\n                date: this.props.goal.date,\n                id: this.props.goal.id,\n                multigoal: this.props.goal.multigoal,\n                subgoal: this.props.goal.subgoal,\n                subgoalsAdded: this.state.subgoalsAdded,\n                timedgoal: this.props.goal.timedgoal,\n                // closeMenu: this.handleClose\n            })\n        }\n        this.handleClose();\n    }\n    startDelete = () => {\n        // this.goalRef.delete();\n        this.setState({\n            subgoalsOpen: true,\n            deleteInProgress: true,\n        })\n        this.handleClose();\n    }\n\n    finishDelete = () => {\n        this.goalRef.delete();\n    }\n\n    toggleTimeView = () => {\n        this.setState({\n            timeView: !this.state.timeView\n        })\n    }\n    toggleSubgoals = () => {\n        this.setState({\n            subgoalsOpen: !this.state.subgoalsOpen\n        })\n    }\n\n    updateProgress = newPercentage => {\n        // console.log(newPercentage)\n        this.setState({\n            progress: newPercentage,\n            subgoalsAdded: isNaN(newPercentage) ? false : true,\n            loading: false\n        });\n        if (newPercentage === 100 && !this.props.goal.completed) {\n            setTimeout(() => this.handleCompleteToggle(), 500)\n            // this.handleCompleteToggle();\n        } else if (newPercentage !== 100 && this.props.goal.completed) {\n            setTimeout(() => this.handleCompleteToggle(), 500)\n            // this.handleCompleteToggle();\n        }\n    }\n\n    render() {\n        const { anchorEl } = this.state;\n        const open = Boolean(anchorEl);\n        return (\n            <React.Fragment>\n                <ListItem className={this.props.goal.subgoal ? \"goalitem-indent\" : \"\"}\n                    button onClick={this.toggleTimeView}>\n                    {\n                        this.state.timeView\n                        ? <ListItemText\n                        primary={this.props.goal.goal}\n                        secondary={this.props.goal.completed\n                            ? <TimeStamp completed={this.props.goal.completedAt} />\n                            : this.props.goal.timedgoal && <Timer date={this.props.goal.date} />\n                        }\n                        primaryTypographyProps={{\n                            style: { width: '80%' },\n                            className: this.props.goal.completed ? \"goalitem-strike\" : \"\"\n                        }}\n                        secondaryTypographyProps={{ color: 'error' }}\n                        />\n                        : <ListItemText\n                        primary={this.props.goal.goal}\n                        secondary={this.props.goal.completed\n                            ? <React.Fragment>\n                                {/* <TimeStamp completed={this.props.goal.completedAt} /><br/> */}\n                                {/* <TimeStamp updated={this.props.goal.updatedAt} created={this.props.goal.createdAt}/><br/> */}\n                                <TimerCompleted completed={this.props.goal.completedAt} updated={this.props.goal.createdAt}/>\n                            </React.Fragment>\n                            : this.props.goal.timedgoal\n                              ? <React.Fragment>\n                                  {/* <TimeStamp updated={this.props.goal.updatedAt} created={this.props.goal.createdAt}/><br/> */}\n                                  <TimeDue date={this.props.goal.date}/><br/>\n                              </React.Fragment>\n                              : <span>{this.state.progress}% Complete</span>\n                        }\n                        primaryTypographyProps={{\n                            style: { width: '80%' },\n                            className: this.props.goal.completed ? \"goalitem-strike\" : \"\"\n                        }}\n                        secondaryTypographyProps={{ color: 'error' }}\n                        />\n\n                    }\n                    <ListItemSecondaryAction>\n                        {\n                            this.state.subgoalsAdded\n                            ? !this.state.loading &&\n                            <IconButton onClick={this.toggleSubgoals}>\n                                {\n                                    this.state.subgoalsOpen\n                                    ? <ExpandLess/>\n                                    : <ExpandMore/>\n                                }\n                            </IconButton>\n                            : !this.state.loading &&\n                            <IconButton variant=\"raised\"\n                                onClick={() => this.triggerModal(true)}>\n                                <AddIcon />\n                            </IconButton>\n                        }\n                        <IconButton onClick={this.handleMenuClick}>\n                            <MoreVertIcon />\n                        </IconButton>\n                        <Menu\n                            id=\"long-menu\"\n                            anchorEl={anchorEl}\n                            open={open}\n                            onClose={this.handleClose}>\n                            {\n                                this.props.goal.multigoal &&\n                                //trigger modal with subgoal flag\n                                <MenuItem onClick={() => this.triggerModal(true)}>\n                                    <ListItemIcon>\n                                        <AddIcon color={'inherit'}/>\n                                    </ListItemIcon>\n                                    <ListItemText inset primary=\"Add Sub Goal\" />\n                                </MenuItem>\n                            }\n                            {\n                                !this.props.goal.completed &&\n                                <MenuItem onClick={() => this.triggerModal(false)}>\n                                    <ListItemIcon>\n                                        <EditIcon color={'inherit'}/>\n                                    </ListItemIcon>\n                                    <ListItemText inset primary=\"Edit\" />\n                                </MenuItem>\n                            }\n                            <MenuItem onClick={this.startDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon nativeColor={this.props.theme.palette.warn[500]}/>\n                                </ListItemIcon>\n                                <ListItemText inset primary=\"Delete\" />\n                            </MenuItem>\n                        </Menu>\n                    </ListItemSecondaryAction>\n                </ListItem>\n                {\n                    !this.state.loading && this.state.subgoalsAdded &&\n                    <LinearProgress className=\"goalItem-progress\"\n                        color=\"secondary\" variant=\"determinate\" value={this.state.progress} />\n                }\n                {\n                    this.props.goal.multigoal &&\n                    <MultiGoalList\n                        open={this.state.subgoalsOpen}\n                        parentGoal={this.props.goal}\n                        user={this.props.user}\n                        toggleModal={this.props.toggleModal}\n                        toggleRepeatModal={this.props.toggleRepeatModal}\n                        updateProgress={this.updateProgress}\n                        deleteParent={this.finishDelete}\n                        deleteInProgress={this.state.deleteInProgress}/>\n                }\n            </React.Fragment>\n        )\n    }\n}\n\nexport default withTheme()(withFirebase(MultiGoalItem));","import React, {Component} from 'react'\nimport Chip from '@material-ui/core/Chip';\n\nclass Clock extends Component {\n    constructor(props) {\n        super(props);\n        this.d = new Date();\n        this.options = {\n            weekday: 'short',\n            year: 'numeric',\n            month: 'numeric',\n            day: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            second: 'numeric',\n        }\n        this.state = {\n            time: this.d.toLocaleString('en-US', this.options)\n        }\n    }\n\n    componentDidMount() {\n        this.update();\n    }\n\n    componentWillUnmount() {\n        this.unmounting = true;\n    }\n\n    update = () => {\n        if(this.unmounting) return;\n        const d = new Date();\n        const newTime = d.toLocaleString('en-US', this.options);\n        if(newTime !== this.state.time) {\n            this.setState({\n                time: newTime\n            })\n        }\n        requestAnimationFrame(this.update);\n    }\n\n    render() {\n        return (\n            <Chip color=\"secondary\" label={this.state.time} />\n        )\n    }\n}\n\nexport default Clock;","import React, {Component} from 'react'\nimport Chip from '@material-ui/core/Chip';\nimport { withFirebase } from '../Firebase';\nclass CompletedCounter extends Component {\n    constructor(props) {\n        super(props);\n        this.unmounting = false;\n        this.state = {completeCount: \"\"}\n        // console.log(props)\n    }\n\n    componentDidMount() {\n        const completedRef = this.props.firebase.db.collection(`users/${this.props.uid}/settings`)\n        .doc('completedCount');\n\n        completedRef.onSnapshot(snapshot => {\n            const data = snapshot.data()\n            if (!this.unmounting) {\n                this.setState({ completeCount: data.count })\n            }\n        })\n    }\n\n    componentWillUnmount() {\n        this.unmounting = true;\n    }\n\n    render() {\n        return (\n            <Chip color=\"primary\" label={`Completed Goals: ${this.state.completeCount}`} />\n        )\n    }\n}\n\nexport default withFirebase(CompletedCounter);","import React from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport './centeredModal.css';\n\nexport default ({children: Children, ...rest}) => (\n    <Modal {...rest} className=\"centeredModal\">{Children}</Modal>\n);\n","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport './settings.css';\nimport Loading from '../loading/loading';\nimport CompletedCounter from '../dashboard/completedcounter';\nimport Clock from '../dashboard/clock';\nimport { withFirebase } from '../Firebase';\n\nfunction initializeSettings(settingsRef) {\n    settingsRef.doc('completedCount').set({ count: 0, enabled: true });\n    settingsRef.doc('clock').set({ enabled: true });\n}\n\nfunction getNewBackground(settingsRef) {\n    fetch('https://picsum.photos/g/1920/1200/?random')\n    .then(res => {\n        if (res.status === 200) {\n            document.body.style.backgroundImage = `url(${res.url})`\n            settingsRef.doc('background').set({ url: res.url });\n        } else {\n            document.body.style.backgroundImage = 'none'\n        }\n    });\n}\n\nclass Settings extends Component {\n\n    constructor(props) {\n        super(props);\n        this.unmounting = false;\n        this.settingsRef = this.props.firebase.db.collection(`users/${this.props.user.uid}/settings`);\n        this.state = {\n            loading: true,\n            settings: {}\n        }\n    }\n\n    componentDidMount() {\n        this.settingsRef.onSnapshot((snapshot) => {\n            const settings = {};\n            // snapshot.forEach(doc => settings.push({id: doc.id, ...doc.data()}))\n            snapshot.forEach(doc => settings[doc.id] = {id: doc.id, ...doc.data()});\n            if (!this.unmounting) {\n                this.setState({settings, loading: false});\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        this.unmounting = true;\n    }\n\n    toggleEnableSwitch = setting => {\n        this.settingsRef.doc(setting).update({ enabled: !this.state.settings[setting].enabled})\n    }\n\n    render() {\n        return (\n        <Loading status={this.state.loading}>\n            <div className=\"settings-wrapper\">\n                {/* <h1>{JSON.stringify(this.state.settings)}</h1> */}\n                <Typography variant=\"h4\" align=\"center\" className=\"settings-title\">\n                    Settings\n                </Typography>\n                <form>\n                    <Grid container justify=\"center\" className=\"settings__setting-row\">\n                        <Grid item xs={12} md={6}>\n                            <div className=\"settings__column-wrapper--center\">\n                                <Typography variant=\"h6\">\n                                    Completed Goals Counter\n                                </Typography>\n                                <CompletedCounter uid={this.props.user.uid} />\n                            </div>\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <div className=\"settings__column-wrapper--center\">\n                                {\n                                    this.state.settings.completedCount &&\n                                    <FormGroup row>\n                                        <FormControlLabel\n                                            control={\n                                                <Switch\n                                                checked={this.state.settings.completedCount.enabled}\n                                                onChange={() => this.toggleEnableSwitch(this.state.settings.completedCount.id)}\n                                                value={this.state.settings.completedCount.enabled}\n                                                />\n                                            }\n                                            label={\n                                                <Typography color={\n                                                    this.state.settings.completedCount.enabled\n                                                    ? \"textPrimary\"\n                                                    : \"textSecondary\"\n                                                }>\n                                                    Enable Complete Counter\n                                                </Typography>\n                                            }/>\n                                    </FormGroup>\n                                }\n                            </div>\n                        </Grid>\n                    </Grid>\n                    <Divider variant='middle' />\n                    <Grid container justify=\"center\" className=\"settings__setting-row\">\n                        <Grid item xs={12} md={6}>\n                            <div className=\"settings__column-wrapper--center\">\n                                <Typography variant=\"h6\">\n                                    Clock\n                                </Typography>\n                                <Clock uid={this.props.user.uid} />\n                            </div>\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <div className=\"settings__column-wrapper--center\">\n                                {\n                                    this.state.settings.clock &&\n                                    <FormGroup row>\n                                        <FormControlLabel\n                                            control={\n                                                <Switch\n                                                checked={this.state.settings.clock.enabled}\n                                                onChange={() => this.toggleEnableSwitch(this.state.settings.clock.id)}\n                                                value={this.state.settings.clock.enabled}\n                                                />\n                                            }\n                                            label={\n                                                <Typography color={\n                                                    this.state.settings.clock.enabled\n                                                    ? \"textPrimary\"\n                                                    : \"textSecondary\"\n                                                }>\n                                                    Enable Clock\n                                                </Typography>\n                                            }/>\n                                    </FormGroup>\n                                }\n                            </div>\n                        </Grid>\n                    </Grid>\n                    <Divider variant='middle' />\n                    <Grid container justify=\"center\" className=\"settings__setting-row\">\n                        <Grid item xs={12} md={6}>\n                            <div className=\"settings__column-wrapper--center\">\n                                <Typography variant=\"h6\">\n                                    Background\n                                </Typography>\n                            </div>\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <div className=\"settings__column-wrapper--center\">\n                                {\n                                    // this.state.settings.background &&\n                                    true &&\n                                    <Button variant=\"contained\" color=\"primary\" onClick={() => getNewBackground(this.settingsRef)}>\n                                        Shuffle Background\n                                    </Button>\n                                }\n                            </div>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Loading>\n        )\n    }\n}\n\nexport default withFirebase(Settings);\n\nexport { initializeSettings, getNewBackground };","import Dashboard from './dashboard';\nimport Goalform from './goalform';\nimport CenteredModal from './centeredModal';\n\nexport { Goalform, CenteredModal };\nexport default Dashboard;","import React from 'react';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport List from '@material-ui/core/List';\nimport GoalForm from './goalform';\nimport GoalItem from './goalitem';\nimport RepeatForm from './repeatform';\nimport MultiGoalItem from './multigoalitem';\nimport Clock from './clock';\nimport CompletedCounter from './completedcounter';\nimport CenteredModal from './centeredModal';\nimport { withFirebase } from '../Firebase';\nimport { initializeSettings, getNewBackground } from '../settings/settings';\nimport './dashboard.css';\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.unmounting = false;\n        this.state = {\n            goalModalOpen: false,\n            repeatModalOpen: false,\n            modalState: undefined,\n            repeatModalState: undefined,\n            goals: [],\n            settings: {},\n            settingsLoaded: false,\n        };\n    }\n    componentDidMount = () => {\n        this.props.firebase.db.collection(`users/${this.props.user.uid}/goals`)\n        .onSnapshot((snapshot) => {\n            const goals = [];\n            snapshot.forEach(doc => goals.push({id: doc.id, ...doc.data()}))\n            this.setState({goals});\n        })\n        const settingsRef = this.props.firebase.db.collection(`users/${this.props.user.uid}/settings`);\n        settingsRef.onSnapshot((snapshot) => {\n            // console.log(snapshot)\n            if (!snapshot.empty) {\n                const settings = {};\n                // snapshot.forEach(doc => console.log(doc));\n                snapshot.forEach(doc => settings[doc.id] = {id: doc.id, ...doc.data()});\n                if (!this.unmounting) {\n                    this.setState({settings, settingsLoaded: true});\n                    if (settings.background && settings.background.url) {\n                        document.body.style.backgroundImage = `url(${settings.background.url})`\n                    }\n                }\n            } else {\n                initializeSettings(settingsRef);\n                getNewBackground(settingsRef);\n            }\n        })\n    }\n\n    toggleModal = modalState => {\n        this.setState({\n            goalModalOpen: !this.state.goalModalOpen,\n            modalState: modalState ? modalState : null\n        })\n    }\n\n    toggleRepeatModal = modalState => {\n        this.setState({\n            repeatModalOpen: !this.state.repeatModalOpen,\n            repeatModalState: modalState ? modalState : null\n        })\n    }\n    componentWillUnmount() {\n        this.unmounting = true;\n    }\n    render() {\n        return (\n            <div className=\"dash\">\n                <div className=\"dash-items\">\n                    {\n                        this.state.settingsLoaded && this.state.settings.clock.enabled &&\n                        <div className=\"dash-item\">\n                            <Clock />\n                        </div>\n                    }\n                    {\n                        this.state.settingsLoaded && this.state.settings.completedCount.enabled &&\n                        <div className=\"dash-item\">\n                            <CompletedCounter uid={this.props.user.uid}/>\n                        </div>\n                    }\n                </div>\n                <List>\n                    {\n                        this.state.goals\n                        .sort((goalA, goalB) => {\n                            const diff = goalA.date - goalB.date\n                            if (goalA.completed === goalB.completed && goalA.timedgoal && goalB.timedgoal) {\n                                return diff;\n                            } else if (goalA.completed === goalB.completed && goalA.timedgoal !== goalB.timedgoal) {\n                                return goalA.timedgoal ? -1 : 1\n                            } else if (goalA.completed) {\n                                return 1;\n                            } else {\n                                return -1;\n                            }\n                        })\n                        .map(goal => (\n                            goal.multigoal\n                            ? <MultiGoalItem key={goal.id} goal={goal}\n                                toggleModal={this.toggleModal}\n                                toggleRepeatModal={this.toggleRepeatModal}\n                                user={this.props.user}/>\n                            : <GoalItem key={goal.id} goal={goal}\n                                toggleModal={this.toggleModal}\n                                toggleRepeatModal={this.toggleRepeatModal}/>\n                        ))\n                    }\n                </List>\n                <CenteredModal open={this.state.goalModalOpen}\n                    onClose={this.toggleModal}>\n                    <GoalForm toggleModal={this.toggleModal} initialState={this.state.modalState}/>\n                </CenteredModal>\n                <CenteredModal open={this.state.repeatModalOpen}\n                    onClose={this.toggleRepeatModal}>\n                    <RepeatForm toggleRepeatModal={this.toggleRepeatModal} initialState={this.state.repeatModalState}/>\n                </CenteredModal>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <Fab color=\"secondary\"\n                    variant=\"extended\"\n                    aria-label=\"Add\"\n                    id=\"dash-addBtn\"\n                    onClick={this.toggleModal}>\n                    <AddIcon />\n                </Fab>\n            </div>\n        );\n    }\n}\n\nexport default withFirebase(Dashboard);","import React, { Component } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid'\nimport './about.css';\n\nclass About extends Component {\n    render() {\n        return (\n            <div className=\"about\">\n                <Grid container justify={\"center\"} alignItems={\"center\"}>\n                    <Grid item xs={12} lg={8}>\n                        <Card className=\"about-card\">\n                            <CardContent>\n                                <Typography variant={\"h3\"} align={\"center\"}>\n                                    Thanks for using Goaler!\n                                </Typography>\n                                <br/>\n                                <Typography variant={\"h5\"} align={\"center\"}>\n                                    Contact me: <a href=\"mailto:leewarrick@gmail.com\" rel=\"noopener noreferrer\" target=\"_BLANK\">leewarrick@gmail.com</a>\n                                </Typography>\n                                <br/>\n                                <Typography variant={\"h6\"} align={\"center\"}>\n                                    Background Images Courtesy of <a href=\"https://unsplash.com/\">Unsplash</a> and <a href=\"https://picsum.photos\">Lorem Picsum</a>\n                                </Typography>\n                                <br/>\n                                <Typography variant={\"h6\"} align={\"center\"}>\n                                    © Lee Warrick 2019. All Rights Reserved.\n                                </Typography>\n                            </CardContent> \n                        </Card>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default About;","import React, { Component } from 'react';\nimport { withFirebase } from './components/Firebase';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport Drawer from '@material-ui/core/Drawer';\nimport Login from './components/login/login';\nimport Loading from './components/loading/loading';\nimport Header from './components/header/header';\nimport MainMenu from './components/mainmenu/mainmenu';\nimport Dashboard from './components/dashboard/';\nimport Settings from './components/settings/settings';\nimport About from './components/about/about';\nimport './App.css';\n\nconst PrivateRoute = ({component: Component, user, ...rest}) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => user\n        ? <Component {...props} {...rest} user={user} />\n        : <Redirect to={{pathname: '/login', state: {from: props.location}}} />}\n        // : <Redirect to='/login' />}\n    />\n  )\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      loading: true,\n      from: null,\n      drawer: false\n    }\n  }\n\n  componentDidMount = () => {\n    this.props.firebase.auth.onAuthStateChanged(user => {\n      if (user) {\n        this.setState({ user: user, loading: false })\n        this.props.firebase.initializeUser(user.uid);\n      } else {\n        this.setState({ user: null, loading: false });\n      }\n    })\n    document.body.style.backgroundImage = `url(https://picsum.photos/g/1920/1080?image=773)`\n  }\n\n  // writeTestData = () => {\n  //   this.props.firebase.goalsRef.add({name: \"banana Johnson\"})\n  // }\n\n  signIn = async () => {\n    const result = await this.props.firebase.signIn();\n    this.setState({ user: result.user });\n  }\n\n  signOut = () => {\n    this.props.firebase.logout();\n    this.toggleDrawer();\n  }\n\n  toggleDrawer = () => {\n    this.setState({\n      drawer: !this.state.drawer\n    })\n  }\n\n  render() {\n    return (\n      <Router basename=\"/Goaler\">\n        <Loading status={this.state.loading}>\n          <div className=\"App\">\n          <Header user={this.state.user} login={this.signIn} toggleDrawer={this.toggleDrawer}/>\n          <Drawer anchor={\"right\"} open={this.state.drawer} onClose={this.toggleDrawer}>\n            <MainMenu logout={this.signOut} toggleDrawer={this.toggleDrawer}/>\n          </Drawer>\n          <Route path=\"/login\" render={(props)=> <Login {...props} user={this.state.user} login={this.signIn} />} />\n          <PrivateRoute user={this.state.user} exact path='/about' component={About}/>\n          <PrivateRoute user={this.state.user} exact path='/' component={Dashboard}/>\n          <PrivateRoute user={this.state.user} exact path='/settings' component={Settings}/>\n          {/* <Link to=\"/private\">Banana</Link>\n          <Link to=\"/private/2\">Banana2</Link>\n          <PrivateRoute user={this.state.user} exact path='/private' component={Banana} text=\"React Router\"/>\n          <PrivateRoute user={this.state.user} path='/private/:num' component={Banana} text=\"React Router\" /> */}\n          </div>\n        </Loading>\n      </Router>\n    );\n  }\n}\n\nexport default withFirebase(App);\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport purple from '@material-ui/core/colors/purple';\nimport orange from '@material-ui/core/colors/orange';\nimport red from '@material-ui/core/colors/red';\n\n// All the following keys are optional.\n// We try our best to provide a great default value.\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n        main: blue[900]\n    },\n    secondary: {\n        main: purple[400],\n      },\n    error: orange,\n    warn: red,\n    // Used by `getContrastText()` to maximize the contrast between the background and\n    // the text.\n    contrastThreshold: 3,\n    // Used to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: 0.5,\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nexport default theme;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport theme from './theme';\nimport 'typeface-roboto';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n<FirebaseContext.Provider value={new Firebase()}>\n    <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <App />\n    </MuiThemeProvider>\n</FirebaseContext.Provider>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}