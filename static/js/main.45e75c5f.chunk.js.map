{"version":3,"sources":["components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/login/login.jsx","components/loading/loading.jsx","components/header/header.jsx","components/mainmenu/mainmenu.jsx","components/dashboard/goalform.jsx","components/dashboard/timer.jsx","components/dashboard/timedue.jsx","components/dashboard/timestamp.jsx","components/dashboard/timercompleted.jsx","components/dashboard/goalitem.jsx","components/dashboard/repeatform.jsx","components/dashboard/multigoallist.jsx","components/dashboard/multigoalitem.jsx","components/dashboard/clock.jsx","components/dashboard/completedcounter.jsx","components/dashboard/centeredModal.jsx","components/settings/settings.jsx","components/dashboard/index.js","components/dashboard/dashboard.jsx","components/about/about.jsx","App.js","theme.js","serviceWorker.js","index.js"],"names":["FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","components_Firebase","Firebase","_this","this","classCallCheck","signIn","provider","auth","GoogleAuthProvider","signInWithRedirect","catch","err","console","log","logout","signOut","redirect","getRedirectResult","initializeUser","uid","goalsRef","db","collection","concat","settingsRef","app","initializeApp","firestore","settings","timestampsInSnapshots","Login","user","Fragment","Card_default","className","Typography_default","variant","gutterBottom","align","displayName","Button_default","color","onClick","history","push","login","Loading","status","CircularProgress_default","size","children","Header","AppBar_default","position","style","backgroundColor","theme","palette","primary","main","Toolbar_default","Link","to","aria-label","Beenhere_default","IconButton_default","toggleDrawer","Menu_default","withTheme","MainMenu","navigate","route","_this2","List_default","ListItem_default","button","ListItemIcon_default","Home_default","ListItemText_default","Info_default","DoneAll_default","Settings_default","Divider_default","ExitToApp_default","withRouter","GoalForm","possibleConstructorReturn","getPrototypeOf","call","toggleMultigoal","setState","multigoal","state","handleChange","name","event","defineProperty","target","value","validate","nameErr","nameHelper","dateErr","dateHelper","timeErr","timeHelper","date","time","now","Date","dateArgs","split","map","str","Number","datetime","construct","toConsumableArray","getTime","toDateString","handleSubmit","d","n","initialState","goal","subgoal","doc","parentGoalId","id","update","completed","updatedAt","then","toggleModal","add","createdAt","plusOneDay","leadingZero","num","tomorrow","getFullYear","getMonth","getDate","today","maxDate","currentTime","getHours","getMinutes","milliseconds","prevProps","prevState","CardHeader_default","avatar","Avatar_default","secondary","text","AddAlarm_default","title","action","tabIndex","Close_default","CardContent_default","Grid_default","container","spacing","item","xs","TextField_default","label","placeholder","error","onChange","fullWidth","margin","helperText","md","type","InputLabelProps","shrink","InputProps","inputProps","min","max","subgoalsAdded","FormGroup_default","row","FormControlLabel_default","control","Switch_default","checked","CardActions_default","Timer","checkTime","updateTime","unMounting","counting","timeRemaining","Math","abs","seconds","floor","minutes","hours","days","toString","requestAnimationFrame","classes","TimeDue","ms","diff","toLocaleString","TimeStamp","updated","created","timeStatus","renderSpans","TimerCompleted","completionTime","round","GoalItem","handleMenuClick","anchorEl","currentTarget","handleClose","handleCompleteToggle","newCompletedStatus","goalRef","completedAt","countRef","get","newCount","data","count","set","triggerModal","modalToggleFn","toggleRepeatModal","parentGoalName","parentGoal","parentGoalDate","handleDelete","delete","toggleTimeView","timeView","deleteSelf","open","Boolean","timestamp","dashboard_timer","primaryTypographyProps","width","secondaryTypographyProps","timercompleted","dashboard_timedue","ListItemSecondaryAction_default","CheckBox_default","CheckBoxOutlineBlank_default","MoreVert_default","core_Menu_default","onClose","MenuItem_default","Edit_default","inset","Replay_default","Delete_default","nativeColor","warn","RepeatForm","handleText","goalErr","goalErrMsg","formError","handleTime","_this$setState","unit","Err","ErrMsg","hasError","isNaN","months","plusMonth","setMonth","toggleChip","chip","resetBadFields","minutesErr","minutesErrMsg","hoursErr","hoursErrMsg","daysErr","daysErrMsg","weeksErr","weeks","weeksErrMsg","step","required","onBlur","RadioGroup_default","Radio_default","root","endAdornment","InputAdornment_default","Chip_default","icon","Alarm_default","disabled","MultiGoalList","subgoals","deleteInProgress","length","deleteParent","onSnapshot","snapshot","forEach","objectSpread","filter","completePercentage","updateProgress","_this3","Collapse_default","in","timeout","unmountOnExit","component","disablePadding","sort","goalA","goalB","dashboard_goalitem","key","MultiGoalItem","document","hidden","progress","startDelete","subgoalsOpen","finishDelete","toggleSubgoals","newPercentage","loading","setTimeout","ExpandLess_default","ExpandMore_default","Add_default","LinearProgress_default","multigoallist","Clock","unmounting","newTime","options","weekday","year","month","day","hour","minute","second","CompletedCounter","completeCount","dashboard_centeredModal","_ref","Children","rest","objectWithoutProperties","Modal_default","getNewBackground","fetch","res","body","backgroundImage","url","Settings","toggleEnableSwitch","setting","enabled","loading_loading","justify","completedcounter","completedCount","clock","Dashboard","componentDidMount","goals","empty","initializeSettings","settingsLoaded","background","modalState","goalModalOpen","repeatModalOpen","repeatModalState","undefined","dashboard_multigoalitem","dashboard_goalform","dashboard_repeatform","Fab_default","About","alignItems","lg","href","rel","PrivateRoute","Route","render","Redirect","pathname","from","location","App","onAuthStateChanged","asyncToGenerator","regenerator_default","mark","_callee","result","wrap","_context","prev","next","sent","stop","drawer","BrowserRouter","basename","header_header","Drawer_default","anchor","mainmenu_mainmenu","path","login_login","App_PrivateRoute","exact","createMuiTheme","blue","purple","orange","red","contrastThreshold","tonalOffset","typography","useNextVariants","isLocalhost","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","context","Provider","styles","CssBaseline_default","src_App_0","getElementById","URL","origin","addEventListener","response","contentType","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.45e75c5f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n    <FirebaseContext.Consumer>\r\n        {firebase => <Component {...props} firebase={firebase} />}\r\n    </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default FirebaseContext;","import app, { auth } from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n// Initialize Firebase\nconst config = {\n    apiKey: process.env.REACT_APP_FIREBASE_apiKey,\n    authDomain: process.env.REACT_APP_FIREBASE_authDomain,\n    databaseURL: process.env.REACT_APP_FIREBASE_databaseURL,\n    projectId: process.env.REACT_APP_FIREBASE_projectId,\n    storageBucket: process.env.REACT_APP_FIREBASE_storageBucket,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_messagingSenderId\n};\n\nclass Firebase {\n    constructor() {\n        app.initializeApp(config);\n        this.auth = app.auth();\n        this.db = app.firestore();\n        const settings = {/* your settings... */ timestampsInSnapshots: true};\n        this.db.settings(settings);\n        // this.userRef = null;\n        // this.goalsRef = null;\n    }\n    signIn = () => {\n        const provider = new auth.GoogleAuthProvider();\n        return this.auth.signInWithRedirect(provider).catch(err => console.log(err));\n        // return this.auth.signInWithPopup(provider).catch(err => console.log(err));\n    }\n    logout = () => {\n        return this.auth.signOut();\n    }\n    redirect = () => {\n        return this.auth.getRedirectResult();\n    }\n    initializeUser = (uid) => {\n        this.goalsRef = this.db.collection(`users/${uid}/goals`);\n        this.settingsRef = this.db.collection(`users/${uid}/settings`)\n        // this.db.collection(`users/${uid}/goals/${goalid}/subgoals`);\n        // this.goalsRef = this.userRef.collection(\"goals\");\n    }\n}\n\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\r\nimport Firebase from './firebase';\r\n\r\nexport default Firebase;\r\n\r\nexport { FirebaseContext, withFirebase };","import React, { Component } from 'react';\nimport Card from '@material-ui/core/Card';\n// import CardMedia from '@material-ui/core/CardMedia';\n// import CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n// import Grid from '@material-ui/core/Grid';\n// import LogoIcon from '@material-ui/icons/Beenhere';\nimport Button from '@material-ui/core/Button';\n// import darts from './darts.jpeg';\n\nimport './login.css';\n\nclass Login extends Component {\n    componentDidMount() {\n        // console.log(this.props)\n        if (this.props.user) {\n            // this.props.history.push('/')\n            console.log(this.props.user);\n        }\n    }\n    render() {\n        return (\n            <React.Fragment>\n\n            <Card className=\"login-titleCard\">\n                {/* <CardMedia\n                    className=\"login-titleCard_img\"\n                    component=\"img\"\n                    alt=\"Inspirational Goal Image\"\n                    image={darts}/> */}\n                <div className=\"login-titleCard_container\">\n                    <Typography variant=\"h2\" className=\"login-titleCard_title\" gutterBottom>\n                        Welcome to <strong>GOALER</strong>\n                    </Typography>\n                    <Typography variant=\"h5\" align=\"right\" className=\"login-titleCard_subtitle\" gutterBottom>\n                        Track your goals.\n                    </Typography>\n                    <Typography variant=\"h5\" align=\"right\" className=\"login-titleCard_subtitle\" gutterBottom>\n                        Get more things done.\n                    </Typography>\n                    {\n                        this.props.user\n                        ? <React.Fragment>\n                            <Typography variant=\"h5\" align=\"right\" className=\"login-titleCard_actionCall\" gutterBottom>\n                                Welcome, {this.props.user.displayName}\n                            </Typography>\n                            <Button variant=\"contained\" color=\"secondary\" className=\"login-titleCard_dashBtn\" onClick={() => this.props.history.push('/')}>\n                                See your Goals\n                            </Button>\n                        </React.Fragment>\n                        : <Typography variant=\"h5\" align=\"right\" className=\"login-titleCard_actionCall\" gutterBottom>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={this.props.login}>Sign in</Button>\n                            &nbsp;with Google\n                        </Typography>\n                    }\n                </div>\n            </Card>\n            {/* <Grid container justify={\"center\"} alignItems={\"center\"}>\n                <Grid item xs={12} lg={8}>\n                    <Card>\n                        <CardContent>\n                            <Typography variant=\"h5\">\n                                Welcome to Goaler\n                            </Typography>\n                        </CardContent>\n                    </Card>\n                </Grid>\n            </Grid> */}\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Login;","import React, { Component } from 'react';\r\nimport './loading.css';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nclass Loading extends Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n            {\r\n                this.props.status ? \r\n                    <div className=\"loading\">\r\n                        <CircularProgress color=\"secondary\" size={200}/>\r\n                    </div> :\r\n                    this.props.children\r\n            }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Loading;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport LogoIcon from '@material-ui/icons/Beenhere';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { withTheme } from '@material-ui/core/styles';\r\nimport './header.css';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <header>\r\n                <AppBar position=\"static\" className=\"header\" \r\n                    style={{backgroundColor: this.props.theme.palette.primary.main + '80' }}>\r\n                    <Toolbar className=\"row\">\r\n                        <Link to=\"/\">\r\n                            <Button color=\"inherit\" aria-label=\"Logo\">\r\n                                <LogoIcon />\r\n                                <Typography variant=\"h6\" color=\"inherit\">\r\n                                    Goaler\r\n                                </Typography>\r\n                            </Button>\r\n                        </Link>\r\n                        <div>\r\n                        {\r\n                            this.props.user\r\n                            ? <IconButton color=\"inherit\" onClick={this.props.toggleDrawer}>\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                            : <Button color=\"inherit\" onClick={this.props.login}>Sign In</Button>\r\n                        }\r\n                        </div>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withTheme()(Header);","import React, { Component } from 'react'\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ExitIcon from '@material-ui/icons/ExitToApp'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport GoalsIcon from '@material-ui/icons/DoneAll'\nimport InfoIcon from '@material-ui/icons/Info'\nimport HomeIcon from '@material-ui/icons/Home'\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { withRouter } from 'react-router-dom';\nimport './mainmenu.css'\n\nclass MainMenu extends Component {\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    navigate = route => {\n        this.props.history.push(route);\n        this.props.toggleDrawer();\n    }\n\n    render() {\n        return (\n            <List className=\"mainmenu\">\n                <ListItem button onClick={() => this.navigate('/login')}>\n                    <ListItemIcon>\n                        <HomeIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Home\" />\n                </ListItem>\n                <ListItem button onClick={() => this.navigate('/about')}>\n                    <ListItemIcon>\n                        <InfoIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"About\" />\n                </ListItem>\n                <ListItem button onClick={() => this.navigate('/')}>\n                    <ListItemIcon>\n                        <GoalsIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Goals\" />\n                </ListItem>\n                <ListItem button onClick={() => this.navigate('/settings')}>\n                    <ListItemIcon>\n                        <SettingsIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Settings\" />\n                </ListItem>\n                <Divider/>\n                <ListItem button onClick={this.props.logout}>\n                    <ListItemIcon>\n                        <ExitIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Sign Out\" />\n                </ListItem>\n            </List>\n        )\n    }\n}\n\nexport default withRouter(MainMenu);","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Icon from '@material-ui/icons/AddAlarm'\nimport { withTheme } from '@material-ui/core/styles'\nimport { withFirebase } from '../Firebase';\nimport './goalform.css';\n\nclass GoalForm extends Component {\n    constructor(props) {\n        super(props);\n        // console.log(this.props)\n        this.now = new Date();\n        const plusOneDay = new Date(this.now.getTime() + (1000 * 60 * 60 * 24));\n        const leadingZero = num => num < 10 ? \"0\" + num : num\n        const tomorrow = `${plusOneDay.getFullYear()}-${leadingZero(plusOneDay.getMonth() + 1)}-${leadingZero(plusOneDay.getDate())}`\n        this.today = `${this.now.getFullYear()}-${leadingZero(this.now.getMonth() + 1)}-${leadingZero(this.now.getDate())}`\n        this.maxDate = `${this.now.getFullYear() + 10}-${leadingZero(this.now.getMonth() + 1)}-${leadingZero(this.now.getDate())}`\n        this.currentTime = `${leadingZero(this.now.getHours())}:${leadingZero(this.now.getMinutes())}`;\n        let initialState;\n        if (this.props.initialState && this.props.initialState.date) {\n            const milliseconds = this.props.initialState.date;\n            let date = tomorrow;\n            let time = this.currentTime;\n            if (milliseconds > this.now.getTime()) {\n                const d = new Date(milliseconds);\n                date = `${d.getFullYear()}-${leadingZero(d.getMonth() + 1)}-${leadingZero(d.getDate())}`\n                time = `${leadingZero(d.getHours())}:${leadingZero(d.getMinutes())}`;\n            }\n            initialState = {\n                name: this.props.initialState.goal,\n                nameErr: false,\n                nameHelper: \"\",\n                date,\n                dateErr: false,\n                dateHelper: \"\",\n                time,\n                timeErr: false,\n                timeHelper: \"\",\n                multigoal: this.props.initialState.multigoal ? true : false,\n                subgoal: this.props.initialState.subgoal ? true : false,\n            }\n        } else {\n            initialState = {\n                name: \"\",\n                nameErr: false,\n                nameHelper: \"\",\n                date: tomorrow,\n                dateErr: false,\n                dateHelper: \"\",\n                time: this.currentTime,\n                timeErr: false,\n                timeHelper: \"\",\n                // multigoal: false,\n                // subgoal: false,\n                multigoal: this.props.initialState && this.props.initialState.multigoal\n                    ? true : false,\n                subgoal: this.props.initialState && this.props.initialState.subgoal\n                    ? true : false,\n            }\n        }\n        this.state = initialState;\n        // console.log(this.state)\n    }\n\n    toggleMultigoal = () => {\n        this.setState({\n            multigoal: !this.state.multigoal\n        })\n    }\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.name !== this.state.name ||\n            prevState.date !== this.state.date ||\n            prevState.time !== this.state.time) {\n            this.validate();\n        }\n    }\n\n    validate = () => {\n        //check if name\n        let nameErr = false;\n        let nameHelper = \"\";\n        let dateErr = false;\n        let dateHelper = \"\";\n        let timeErr = false;\n        let timeHelper = \"\";\n        if (!this.state.name) {\n            nameErr = true;\n            nameHelper = \"Please set a goal\";\n        }\n        //check if date\n        if (!this.state.date) {\n            dateErr = true;\n            dateHelper = \"Please set a date\";\n        }\n        //check if time\n        if (!this.state.time) {\n            timeErr = true;\n            timeHelper = \"Please set a time\";\n        }\n        //get current date and time when form submits\n        const now = new Date();\n        const dateArgs = `${this.state.date} ${this.state.time}`.split(/[- :]/).map(str => Number(str));\n        dateArgs[1]--; //month is 0 indexed\n        const datetime = new Date(...dateArgs);\n        // check if time/date is > now\n        if (datetime.getTime() < now.getTime()) {\n            if (datetime.toDateString() !== now.toDateString()) {\n                dateErr = true;\n                dateHelper = \"Date must be in future\";\n            } else {\n                timeErr = true;\n                timeHelper = \"Time must be in future\";\n            }\n        }\n        this.setState({\n            nameErr,\n            nameHelper,\n            dateErr,\n            dateHelper,\n            timeErr,\n            timeHelper,\n        })\n        if (timeErr || dateErr || nameErr) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    handleSubmit = () => {\n        if (this.validate()) return;\n        const dateArgs = `${this.state.date} ${this.state.time}`.split(/[- :]/)\n            .map(str => Number(str));\n        dateArgs[1]--; //month is 0 indexed\n        const d = new Date(...dateArgs);\n        const now = new Date();\n        const n = now.getTime();\n        if (this.props.initialState && this.props.initialState.goal) {\n            if (this.state.subgoal) {\n                // console.log(`updating sub goal`, this.state, this.props)\n                this.props.firebase.goalsRef\n                .doc(this.props.initialState.parentGoalId)\n                .collection('subgoals')\n                .doc(this.props.initialState.id)\n                .update({\n                    goal: this.state.name,\n                    date: d.getTime(),\n                    multigoal: this.state.multigoal,\n                    subgoal: this.state.subgoal,\n                    completed: false,\n                    updatedAt: n\n                })\n                .then(() => {\n                    this.props.toggleModal();\n                    // this.props.initialState.closeMenu();\n                })\n            } else {\n                // console.log(`updating regular goal`, this.state, this.props)\n                this.props.firebase.goalsRef\n                .doc(this.props.initialState.id)\n                .update({\n                    goal: this.state.name,\n                    date: d.getTime(),\n                    multigoal: this.state.multigoal,\n                    subgoal: this.state.subgoal,\n                    completed: false,\n                    updatedAt: n\n                })\n                .then(() => {\n                    this.props.toggleModal();\n                    // this.props.initialState.closeMenu();\n                })\n            }\n        } else if (!this.state.subgoal){\n            // console.log(`Adding regular goal`, this.state, this.props)\n            this.props.firebase.goalsRef.add({\n                goal: this.state.name,\n                date: d.getTime(),\n                multigoal: this.state.multigoal,\n                subgoal: this.state.subgoal,\n                completed: false,\n                createdAt: n,\n                updatedAt: n\n            })\n            .then(() => {\n                this.props.toggleModal();\n            })\n        } else {\n            // console.log(`Adding subgoal`, this.state, this.props)\n            this.props.firebase.goalsRef\n            .doc(this.props.initialState.parentGoalId)\n            .collection('subgoals').add({\n                goal: this.state.name,\n                date: d.getTime(),\n                multigoal: this.state.multigoal,\n                subgoal: this.state.subgoal,\n                completed: false,\n                createdAt: n,\n                updatedAt: n\n            })\n            .then(() => {\n                this.props.toggleModal();\n            })\n        }\n\n    }\n\n    render() {\n        return (\n            <Card className=\"goalform\">\n                <CardHeader\n                    avatar={\n                        <Avatar\n                            style={{\n                                backgroundColor: this.props.theme.palette.secondary.main,\n                                color: this.props.theme.palette.text.primary\n                            }}>\n                            <Icon />\n                        </Avatar>\n                    }\n                    title=\"Add a goal\"\n                    // subheader=\"With Chocolates\"\n                    action={\n                        <IconButton onClick={this.props.toggleModal} tabIndex={-1}>\n                            <CloseIcon />\n                        </IconButton>\n                    }\n                />\n                <CardContent>\n                    <Grid container spacing={0}>\n                        <Grid item xs={12}>\n                            <TextField\n                                label=\"Goal\"\n                                placeholder=\"Make it a good one!\"\n                                error={this.state.nameErr}\n                                value={this.state.name}\n                                onChange={this.handleChange('name')}\n                                fullWidth\n                                margin=\"normal\"\n                                helperText={this.state.nameHelper}\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                label=\"Due Date\"\n                                error={this.state.dateErr}\n                                type=\"date\"\n                                value={this.state.date}\n                                onChange={this.handleChange('date')}\n                                margin=\"normal\"\n                                fullWidth\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                helperText={this.state.dateHelper}\n                                InputProps={{\n                                    inputProps: {\n                                        min: this.today,\n                                        max: this.maxDate\n                                    }\n                                }}\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                label=\"Due Time\"\n                                error={this.state.timeErr}\n                                type=\"time\"\n                                value={this.state.time}\n                                onChange={this.handleChange('time')}\n                                margin=\"normal\"\n                                fullWidth\n                                helperText={this.state.timeHelper}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                            />\n                        </Grid>\n                        {\n                            !this.state.subgoal && !this.props.initialState.subgoalsAdded &&\n                            <Grid item xs={12} md={6}>\n                                <FormGroup row>\n                                    <FormControlLabel\n                                        control={\n                                            <Switch\n                                            checked={this.state.multigoal}\n                                            onChange={this.toggleMultigoal}\n                                            value={this.state.multigoal}\n                                            />\n                                        }\n                                        label={\n                                            <Typography color={\n                                                this.state.multigoal\n                                                ? \"textPrimary\"\n                                                : \"textSecondary\"\n                                                }>\n                                                Multi-Step Goal\n                                            </Typography>\n                                        }/>\n                                </FormGroup>\n                            </Grid>\n                        }\n                    </Grid>\n                </CardContent>\n                <CardActions className=\"row right\">\n                    <Button onClick={this.handleSubmit}>\n                        {\n                            this.props.initialState && this.props.initialState.goal\n                            ? \"Update \" : \"Add \"\n                        }\n                        Goal\n                    </Button>\n                    <Button onClick={this.props.toggleModal}>Cancel</Button>\n                </CardActions>\n            </Card>\n                )\n            }\n        }\n\nexport default withTheme()(withFirebase(GoalForm));","import React from 'react';\nimport './timer.css';\nclass Timer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.unMounting = false;\n        const timeRemaining = this.checkTime();\n        this.state = {\n            time: {},\n            counting: timeRemaining > 0 ? true : false,\n            classes: \"\"\n        }\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if(prevProps.date !== this.props.date) {\n            this.updateTime();\n        }\n    }\n    componentDidMount() {\n        if (this.props.date /* && this.state.counting */) {\n            this.updateTime();\n        }\n    }\n    checkTime = () => {\n        const future = this.props.date;\n        const d = new Date();\n        const now = d.getTime();\n        const timeRemaining = future - now;\n        return timeRemaining;\n    }\n    updateTime = () => {\n        if (this.unMounting) return;\n        // var future = Date.parse(\"December 31, 2019\");\n        let timeRemaining = this.checkTime();\n        let counting;\n        timeRemaining < 0 ? counting = false : counting = true;\n        timeRemaining = Math.abs(timeRemaining);\n        // console.log(timeRemaining)\n        // if (timeRemaining < 1000) {\n        //     return this.setState({\n        //         time: {\n        //             days: \"00\",\n        //             hours: \"00\",\n        //             minutes: \"00\",\n        //             seconds: \"00\"\n        //         },\n        //         counting: false,\n        //         // classes: \"timer-strike_animate\"\n        //     });\n        // }\n        let seconds = Math.floor(timeRemaining / 1000) % 60;\n        let minutes = Math.floor((timeRemaining / 1000) / 60) % 60;\n        let hours = Math.floor((timeRemaining / 1000) / 3600) % 24;\n        let days = Math.floor(((timeRemaining / 1000) / 3600) / 24);\n        days = days < 10 ? '0' + days : days.toString();\n        hours = hours < 10 ? '0' + hours : hours.toString();\n        minutes = minutes < 10 ? '0' + minutes : minutes.toString();\n        seconds = seconds < 10 ? '0' + seconds : seconds.toString();\n        this.setState({\n            time: {\n                days, hours, minutes, seconds\n            },\n            counting: counting\n        });\n        requestAnimationFrame(this.updateTime);\n    }\n\n    componentWillUnmount() {\n        this.unMounting = true;\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                {\n                    this.state.counting\n                    ? <span className={this.state.classes}>\n                        Due in:\n                        {` ${this.state.time.days}:` +\n                            `${this.state.time.hours}:` +\n                            `${this.state.time.minutes}:` +\n                            `${this.state.time.seconds}`}\n                    </span>\n                    : <span className=\"timer-strike\">\n                        Past Due:\n                        {` ${this.state.time.days}:` +\n                            `${this.state.time.hours}:` +\n                            `${this.state.time.minutes}:` +\n                            `${this.state.time.seconds}`}\n                    </span>\n                    // : <span className=\"timer-strike\">00:00:00:00</span>\n                }\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Timer;","import React from 'react';\r\nimport './timedue.css'\r\n\r\nconst TimeDue = props => {\r\n    const ms = props.date;\r\n    const now = new Date();\r\n    const nowMs = now.getTime();\r\n    const diff = nowMs - ms;\r\n    const d = new Date(ms);\r\n    return (\r\n        <span className={diff > 0 ? \"timedue\" : \"\"}>Due: {d.toLocaleString()}</span>\r\n    )\r\n};\r\n\r\nexport default TimeDue;","import React, { Component } from 'react';\n\nclass TimeStamp extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            created: \"\",\n            updated: \"\",\n            completed: \"\",\n            timeStatus: \"\"\n        }\n\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps !== this.props) {\n            this.updateTime();\n        }\n    }\n\n    componentDidMount() {\n        this.updateTime();\n    }\n\n    updateTime = () => {\n        const updated = new Date(this.props.updated);\n        const created = new Date(this.props.created);\n        const completed = new Date(this.props.completed);\n        if (this.props.completed) {\n            this.setState({\n                timeStatus: \"completed\",\n                completed: \"Done: \" + completed.toLocaleString()\n            })\n        } else if (this.props.updated === this.props.created) {\n            this.setState({\n                timeStatus: \"created\",\n                created: \"Created: \" + created.toLocaleString()\n            });\n        } else {\n            this.setState({\n                timeStatus: \"updated\",\n                updated: \"Updated: \" + updated.toLocaleString(),\n                created: \"Created: \" + created.toLocaleString()\n            });\n        }\n    }\n\n    renderSpans = () => {\n        //if created\n        switch(this.state.timeStatus) {\n            case 'completed':\n                return (\n                    <span>{this.state.completed}</span>\n                )\n            case 'created':\n                return (\n                    <span>{this.state.created}</span>\n                )\n            case 'updated':\n                return (\n                    <React.Fragment>\n                        {/* <span>{this.state.created}</span><br/> */}\n                        <span>{this.state.updated}</span>\n                    </React.Fragment>\n                )\n            default:\n                return;\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                {this.renderSpans()}\n            </React.Fragment>\n        )\n    }\n}\n\nexport default TimeStamp;","import React, { Component } from 'react';\n\nclass TimerCompleted extends Component {\n    constructor(props) {\n        super(props);\n        const completed = props.completed;\n        const updated = props.updated;\n        const completionTime = completed - updated;\n        let seconds = Math.round(completionTime / 1000) % 60;\n        let minutes = Math.floor((completionTime / 1000) / 60) % 60;\n        let hours = Math.floor((completionTime / 1000) / 3600) % 24;\n        let days = Math.floor(((completionTime / 1000) / 3600) / 24);\n        this.days = days < 10 ? '0' + days : days.toString();\n        this.hours = hours < 10 ? '0' + hours : hours.toString();\n        this.minutes = minutes < 10 ? '0' + minutes : minutes.toString();\n        this.seconds = seconds < 10 ? '0' + seconds : seconds.toString();\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <span>{`Time: ${this.days}:${this.hours}:${this.minutes}:${this.seconds}`}</span><br/>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default TimerCompleted;","import React, { Component } from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { withTheme } from '@material-ui/core/styles';\nimport { withFirebase } from '../Firebase';\nimport Timer from './timer';\nimport TimeDue from './timedue';\nimport TimeStamp from './timestamp';\nimport TimerCompleted from './timercompleted';\nimport './goalitem.css';\n\nclass GoalItem extends Component {\n    constructor(props) {\n        super(props);\n        // console.log(props)\n        this.state = {\n            anchorEl: null,\n            timeView: true\n        };\n        this.goalRef = props.goal.subgoal\n        ? props.firebase.goalsRef.doc(`${props.parentGoal.id}/subgoals/${props.goal.id}`)\n        : props.firebase.goalsRef.doc(props.goal.id);\n    }\n\n    componentDidMount() {\n        if (this.props.deleteSelf) {\n            this.goalRef.delete();\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        // console.log(\"I rendered with\", {props: this.props})\n        if (prevProps.deleteSelf !== this.props.deleteSelf && this.props.deleteSelf) {\n            this.goalRef.delete();\n        }\n    }\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCompleteToggle = () => {\n        const d = new Date();\n        const ms = d.getTime();\n        const newCompletedStatus = !this.props.goal.completed\n        this.goalRef.update({\n            completed: newCompletedStatus,\n            completedAt: newCompletedStatus ? ms : null\n        });\n        const countRef = this.props.firebase.settingsRef.doc('completedCount');\n        countRef.get().then(doc => {\n            const data = doc.data();\n            let newCount;\n            newCompletedStatus\n                ? newCount = data.count + 1\n                : newCount = data.count - 1\n            if (newCount < 0) newCount = 0;\n            countRef.set({\n                count: newCount\n            })\n        })\n\n    }\n    triggerModal = (subgoal, type) => {\n        let modalToggleFn;\n        switch(type) {\n            case 'edit':\n                modalToggleFn = this.props.toggleModal;\n                break;\n            case 'repeat':\n                modalToggleFn = this.props.toggleRepeatModal;\n                break;\n            default:\n                return;\n        }\n        if (subgoal) {\n            // console.log(subgoal)\n            modalToggleFn({\n                parentGoalName: this.props.parentGoal.goal,\n                parentGoalDate: this.props.parentGoal.date,\n                parentGoalId: this.props.parentGoal.id,\n                goal: this.props.goal.goal,\n                date: this.props.goal.date,\n                id: this.props.goal.id,\n                multigoal: false,\n                subgoal: true\n                // closeMenu: this.handleClose\n            })\n        } else {\n            modalToggleFn({\n                goal: this.props.goal.goal,\n                date: this.props.goal.date,\n                id: this.props.goal.id,\n                multigoal: this.props.goal.multigoal,\n                subgoal: this.props.goal.subgoal\n                // closeMenu: this.handleClose\n            })\n        }\n        this.handleClose();\n    }\n\n    handleDelete = () =>{\n        this.goalRef.delete();\n        this.handleClose();\n    }\n\n    toggleTimeView = () => {\n        this.setState({\n            timeView: !this.state.timeView\n        })\n    }\n\n    render() {\n        const { anchorEl } = this.state;\n        const open = Boolean(anchorEl);\n        return (\n            <React.Fragment>\n                <ListItem className={this.props.goal.subgoal ? \"goalItem-indent\" : \"\"}\n                    button onClick={this.toggleTimeView}>\n                    {\n                        this.state.timeView\n                        ? <ListItemText\n                        // className={}\n                        primary={this.props.goal.goal}\n                        secondary={this.props.goal.completed\n                            ? <TimeStamp completed={this.props.goal.completedAt} />\n                            : <Timer date={this.props.goal.date} />\n                        }\n                        primaryTypographyProps={{\n                            style: { width: '80%' },\n                            className: this.props.goal.completed ? \"goalitem-strike\" : \"\"\n                        }}\n                        secondaryTypographyProps={{ color: 'error' }}\n                        />\n                        : <ListItemText\n                        // className={this.props.goal.completed ? \"goalitem-strike\" : \"\"}\n                        primary={this.props.goal.goal}\n                        secondary={this.props.goal.completed\n                            ? <React.Fragment>\n                                {/* <TimeStamp completed={this.props.goal.completedAt} /><br/> */}\n                                {/* <TimeStamp updated={this.props.goal.updatedAt} created={this.props.goal.createdAt}/><br/> */}\n                                <TimerCompleted completed={this.props.goal.completedAt} updated={this.props.goal.updatedAt}/>\n                            </React.Fragment>\n                            :<React.Fragment>\n                                {/* <TimeStamp updated={this.props.goal.updatedAt} created={this.props.goal.createdAt}/><br/> */}\n                                <TimeDue date={this.props.goal.date}/><br/>\n                            </React.Fragment>\n                        }\n                        primaryTypographyProps={{\n                            style: { width: '80%' },\n                            className: this.props.goal.completed ? \"goalitem-strike\" : \"\"\n                        }}\n                        secondaryTypographyProps={{ color: 'error' }}\n                        />\n\n                    }\n                    <ListItemSecondaryAction>\n                        <IconButton onClick={this.handleCompleteToggle}>\n                            {\n                                this.props.goal.completed\n                                ? <CheckBoxIcon color=\"secondary\"/>\n                                : <CheckBoxOutlineBlankIcon />\n                            }\n                        </IconButton>\n                        <IconButton onClick={this.handleMenuClick}>\n                            <MoreVertIcon />\n                        </IconButton>\n                        <Menu\n                            id=\"long-menu\"\n                            anchorEl={anchorEl}\n                            open={open}\n                            onClose={this.handleClose}>\n                            {\n                                !this.props.goal.completed &&\n                                <MenuItem \n                                    onClick={() => this.triggerModal(this.props.goal.subgoal, \"edit\")}>\n                                    <ListItemIcon>\n                                        <EditIcon color={'inherit'}/>\n                                    </ListItemIcon>\n                                    <ListItemText inset primary=\"Edit\" />\n                                </MenuItem>\n                            }\n                            {\n                                this.props.goal.completed &&\n                                <MenuItem\n                                    onClick={() => this.triggerModal(this.props.goal.subgoal, \"repeat\")}>\n                                    <ListItemIcon>\n                                        <ReplayIcon color=\"error\" />\n                                    </ListItemIcon>\n                                    <ListItemText inset primary=\"Repeat\"/>\n                                </MenuItem>\n                            }\n                            <MenuItem onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon nativeColor={this.props.theme.palette.warn[500]}/>\n                                </ListItemIcon>\n                                <ListItemText inset primary=\"Delete\" />\n                            </MenuItem>\n                        </Menu>\n                    </ListItemSecondaryAction>\n                </ListItem>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default withTheme()(withFirebase(GoalItem));","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Chip from '@material-ui/core/Chip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport AlarmIcon from '@material-ui/icons/Alarm'\nimport CloseIcon from '@material-ui/icons/Close';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport { withTheme } from '@material-ui/core/styles';\nimport { withFirebase } from '../Firebase';\nimport TimeDue from './timedue';\nimport Timer from './timer';\nimport './repeatform.css'\n\nclass RepeatForm extends Component {\n    constructor(props) {\n        super(props)\n        const d = new Date();\n        this.state = {\n            now: d.getTime(),\n            value: (1000 * 60 * 60 * 24).toString(),\n            chip: true,\n            formError: false,\n            hours: \"1\",\n            hoursErr: false,\n            hoursErrMsg: \"\",\n            minutes: \"10\",\n            minutesErr: false,\n            minutesErrMsg: \"\",\n            days: \"1\",\n            daysErr: false,\n            daysErrMsg: \"\",\n            weeks: \"1\",\n            weeksErr: false,\n            weeksErrMsg: \"\",\n            goal: this.props.initialState.goal,\n            goalErr: false,\n            goalErrMsg: \"\"\n        }\n    }\n    handleText = event => {\n        const goal = event.target.value;\n        let goalErr, goalErrMsg, formError;\n        if (goal === \"\") {\n            goalErr = true;\n            goalErrMsg = \"Must have goal name\";\n            formError = true;\n        } else {\n            goalErr = false;\n            goalErrMsg = \"\";\n            formError = false;\n        }\n        this.setState({goal, goalErr, goalErrMsg, formError});\n    }\n\n    handleTime = event => {\n        const name = event.target.name;\n        let unit;\n        switch(name) {\n            case 'hours':\n                unit = 60;\n                break;\n            case 'minutes':\n                unit = 1;\n                break;\n            case 'days':\n                unit = 60 * 24;\n                break;\n            case 'weeks':\n                unit = 60 * 24 * 7;\n                break;\n            default:\n                break;\n        }\n        const num = Number(event.target.value)\n        let Err;\n        let ErrMsg;\n        let hasError = false;\n        if (num <= 0 || isNaN(num)) {\n            Err = true;\n            ErrMsg = \"Time > 0\"\n            hasError = true;\n        }\n        this.setState({\n            [name]: event.target.value,\n            [name + \"Err\"]: Err,\n            [ name + \"ErrMsg\"]: ErrMsg,\n            formError: hasError,\n            value: (1000 * 60 * unit * num).toString()\n        })\n    }\n\n    handleChange = event => {\n        const d = new Date();\n        const value = event.target.value;\n        this.setState({ \n            value,\n            now: d.getTime()\n        });\n    };\n\n    getMonth = months => {\n        const d = new Date();\n        const plusMonth = new Date();\n        plusMonth.setMonth(d.getMonth() + months);\n        let value = plusMonth.getTime() - d.getTime();\n        value = value.toString();\n        return value;\n    }\n\n    handleSubmit = () => {\n        const goal = this.props.initialState;\n        const collectionRef = goal.subgoal\n            ? this.props.firebase.goalsRef.doc(goal.parentGoalId).collection('subgoals')\n            : this.props.firebase.goalsRef\n        collectionRef.add({\n            goal: this.state.goal,\n            date: (+this.state.value) + this.state.now,\n            multigoal: goal.multigoal,\n            subgoal: goal.subgoal,\n            completed: false,\n            createdAt: this.state.now,\n            updatedAt: this.state.now\n        })\n        .then(() => {\n            this.props.toggleRepeatModal();\n        })\n    }\n\n    toggleChip = () => {\n        this.setState({chip: !this.state.chip})\n    }\n\n    resetBadFields = () => {\n        if (this.state.minutesErr) {\n            this.setState({\n                minutes: \"10\",\n                minutesErr: false,\n                minutesErrMsg: \"\",\n                formError: false\n            });\n        }\n        if (this.state.hoursErr) {\n            this.setState({\n                hours: \"1\",\n                hoursErr: false,\n                hoursErrMsg: \"\",\n                formError: false\n            });\n        }\n        if (this.state.daysErr) {\n            this.setState({\n                days: \"1\",\n                daysErr: false,\n                daysErrMsg: \"\",\n                formError: false\n            });\n        }\n        if (this.state.weeksErr) {\n            this.setState({\n                weeks: \"1\",\n                weeksErr: false,\n                weeksErrMsg: \"\",\n                formError: false\n            });\n        }\n        if (this.state.goalErr) {\n            this.setState({\n                goal: this.props.initialState.goal,\n                goalErr: false,\n                goalErrMsg: \"\",\n                formError: false\n            });\n        }\n    }\n\n    render() {\n        return (\n            <Card className=\"goalform\">\n                <CardHeader\n                    avatar={\n                        <Avatar\n                            style={{\n                                backgroundColor: this.props.theme.palette.secondary.main,\n                                color: this.props.theme.palette.text.primary\n                            }}>\n                            <ReplayIcon />\n                        </Avatar>\n                    }\n                    title=\"Repeat Goal:\"\n                    // subheader={this.state.goal}\n                    action={\n                        <IconButton onClick={this.props.toggleRepeatModal} tabIndex={-1}>\n                            <CloseIcon />\n                        </IconButton>\n                    }\n                />\n                <CardContent>\n                    <Grid container spacing={0}>\n                        <Grid item xs={12} className=\"repeatform-goalField\">\n                            <TextField\n                                error={this.state.goalErr}\n                                helperText={this.state.goalErrMsg}\n                                inputProps={{\n                                    step: 1,\n                                    min: 1,\n                                    required: true\n                                }}\n                                fullWidth\n                                // label=\"Goal\"\n                                name=\"goal\"\n                                value={this.state.goal}\n                                onBlur={this.resetBadFields}\n                                onChange={this.handleText}/>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <RadioGroup className=\"repeatform-buttonGrp\"\n                                row={true}\n                                aria-label=\"Repeat Time\"\n                                name=\"repeatTime\"\n                                value={this.state.value}\n                                onChange={this.handleChange}>\n                                <FormControlLabel value={(1000 * 60 * this.state.minutes).toString()} control={<Radio />} label={\n                                    <div className=\"repeatform-hourInput-wrapper\">\n                                        <TextField\n                                            classes={{root: \"repeatform-hourInput\"}}\n                                            type=\"number\"\n                                            error={this.state.minutesErr}\n                                            helperText={this.state.minutesErrMsg}\n                                            inputProps={{\n                                                step: 1,\n                                                min: 1,\n                                                required: true,\n                                            }}\n                                            InputProps={{\n                                                endAdornment: \n                                                <InputAdornment position=\"end\">\n                                                    Minute{this.state.minutes === \"1\" ? '' : 's'}\n                                                </InputAdornment>\n                                            }}\n                                            // label=\"Hours\"\n                                            name=\"minutes\"\n                                            className=\"\"\n                                            value={this.state.minutes}\n                                            onBlur={this.resetBadFields}\n                                            onChange={this.handleTime}/>\n                                            {/* <span>Minute{this.state.minutes === \"1\" ? '' : 's'}</span> */}\n                                    </div>\n                                } />\n                                <FormControlLabel value={(1000 * 60 * 60 * this.state.hours).toString()} control={<Radio />} label={\n                                    <div className=\"repeatform-hourInput-wrapper\">\n                                        <TextField\n                                            classes={{root: \"repeatform-hourInput\"}}\n                                            type=\"number\"\n                                            error={this.state.hoursErr}\n                                            helperText={this.state.hoursErrMsg}\n                                            inputProps={{\n                                                step: 1,\n                                                min: 1,\n                                                required: true\n                                            }}\n                                            InputProps={{\n                                                endAdornment: \n                                                <InputAdornment position=\"end\">\n                                                    Hour{this.state.hours === \"1\" ? '' : 's'}\n                                                </InputAdornment>\n                                            }}\n                                            // label=\"Hours\"\n                                            name=\"hours\"\n                                            className=\"\"\n                                            value={this.state.hours}\n                                            onBlur={this.resetBadFields}\n                                            onChange={this.handleTime}/>\n                                            {/* <span>Hour{this.state.hours === \"1\" ? '' : 's'}</span> */}\n                                    </div>\n                                } />\n                                <FormControlLabel value={(1000 * 60 * 60 * 24 * this.state.days).toString()} control={<Radio />} label={\n                                    <div className=\"repeatform-hourInput-wrapper\">\n                                        <TextField\n                                            classes={{root: \"repeatform-hourInput\"}}\n                                            type=\"number\"\n                                            error={this.state.daysErr}\n                                            helperText={this.state.daysErrMsg}\n                                            inputProps={{\n                                                step: 1,\n                                                min: 1,\n                                                required: true\n                                            }}\n                                            InputProps={{\n                                                endAdornment: \n                                                <InputAdornment position=\"end\">\n                                                    Day{this.state.days === \"1\" ? '' : 's'}\n                                                </InputAdornment>\n                                            }}\n                                            // label=\"Hours\"\n                                            name=\"days\"\n                                            className=\"\"\n                                            value={this.state.days}\n                                            onBlur={this.resetBadFields}\n                                            onChange={this.handleTime}/>\n                                            {/* <span>Day{this.state.days === \"1\" ? '' : 's'}</span> */}\n                                    </div>\n                                } />\n                                <FormControlLabel value={(1000 * 60 * 60 * 24 * 7 * this.state.weeks).toString()} control={<Radio />} label={\n                                    <div className=\"repeatform-hourInput-wrapper\">\n                                        <TextField\n                                            classes={{root: \"repeatform-hourInput\"}}\n                                            type=\"number\"\n                                            error={this.state.weeksErr}\n                                            helperText={this.state.weeksErrMsg}\n                                            inputProps={{\n                                                step: 1,\n                                                min: 1,\n                                                required: true\n                                            }}\n                                            InputProps={{\n                                                endAdornment: \n                                                <InputAdornment position=\"end\">\n                                                    Week{this.state.weeks === \"1\" ? '' : 's'}\n                                                </InputAdornment>\n                                            }}\n                                            // label=\"Hours\"\n                                            name=\"weeks\"\n                                            className=\"\"\n                                            value={this.state.weeks}\n                                            onBlur={this.resetBadFields}\n                                            onChange={this.handleTime}/>\n                                            {/* <span>Week{this.state.weeks === \"1\" ? '' : 's'}</span> */}\n                                    </div>\n                                } />\n                                <FormControlLabel value={this.getMonth(1)} control={<Radio />} label=\"One Month\" />\n                                <FormControlLabel value={this.getMonth(12)} control={<Radio />} label=\"One Year\" />\n                            </RadioGroup>\n                        </Grid>\n                        <Grid item xs={12} className=\"repeatform-chipWrapper\">\n                            <Chip tabIndex={-1}\n                                color={this.state.chip ? \"primary\" : \"secondary\"}\n                                icon={<AlarmIcon/>}\n                                onClick={this.toggleChip}\n                                label={\n                                    this.state.chip\n                                    ? <TimeDue date={this.state.now + (+this.state.value)}/>\n                                    : <Timer date={this.state.now + (+this.state.value)}/> \n                                    }\n                                />\n                        </Grid>\n                    </Grid>\n                </CardContent>\n                <CardActions className=\"row right\">\n                    <Button disabled={this.state.formError || +this.state.value === 0} onClick={this.handleSubmit}>\n                        Submit\n                    </Button>\n                    <Button onClick={this.props.toggleRepeatModal}>Cancel</Button>\n                </CardActions>\n            </Card>\n        )\n    }\n}\n\nexport default withTheme()(withFirebase(RepeatForm));","import React, { Component } from 'react';\nimport List from '@material-ui/core/List';\nimport Collapse from '@material-ui/core/Collapse';\nimport GoalItem from './goalitem';\nimport { withFirebase } from '../Firebase';\n\nclass MultiGoalList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            subgoals: []\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.deleteInProgress && this.state.subgoals.length === 0) {\n            this.props.deleteParent();\n        }\n    }\n\n    componentDidMount() {\n        this.props.firebase.db\n            .collection(`users/${this.props.user.uid}/goals/${this.props.parentGoal.id}/subgoals`)\n            .onSnapshot((snapshot) => {\n                const subgoals = [];\n                snapshot.forEach(doc => subgoals.push({ id: doc.id, ...doc.data() }))\n                const completed = subgoals.filter(goal => goal.completed);\n                const completePercentage = Math.round(completed.length / subgoals.length * 100);\n                this.props.updateProgress(completePercentage);\n                this.setState({ subgoals });\n            })\n    }\n\n    render() {\n        return (\n            <Collapse in={this.props.open} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding>\n                    {\n                        this.state.subgoals\n                            .sort((goalA, goalB) => {\n                                const diff = goalA.date - goalB.date\n                                if (goalA.completed === goalB.completed) {\n                                    return diff;\n                                } else if (goalA.completed) {\n                                    return 1;\n                                } else {\n                                    return -1;\n                                }\n                            })\n                            .map(goal => (\n                                <GoalItem key={goal.id} goal={goal} \n                                    toggleModal={this.props.toggleModal} \n                                    toggleRepeatModal={this.props.toggleRepeatModal} \n                                    parentGoal={this.props.parentGoal}\n                                    deleteSelf={this.props.deleteInProgress}/>\n                            ))\n                    }\n                </List>\n            </Collapse>\n        );\n    }\n}\n\nexport default withFirebase(MultiGoalList);","import React, { Component } from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n// import CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\n// import CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { withTheme } from '@material-ui/core/styles';\nimport { withFirebase } from '../Firebase';\nimport MultiGoalList from './multigoallist';\nimport Timer from './timer';\nimport TimeDue from './timedue';\nimport TimeStamp from './timestamp';\nimport TimerCompleted from './timercompleted';\nimport './multigoalitem.css';\n\nclass MultiGoalItem extends Component {\n    constructor(props) {\n        super(props);\n        // console.log(props)\n        this.state = {\n            anchorEl: null,\n            timeView: true,\n            subgoalsOpen: props.goal.multigoal ? false : null,\n            progress: 0,\n            subgoalsAdded: false,\n            loading: true,\n            deleteInProgress: false,\n        };\n        this.goalRef = props.goal.subgoal\n        ? props.firebase.goalsRef.doc(`${props.parentGoal.id}/subgoals/${props.goal.id}`)\n        : props.firebase.goalsRef.doc(props.goal.id);\n    }\n    // componentDidUpdate() {\n    //     console.log(\"I rendered with\", {props: this.props})\n    // }\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCompleteToggle = () => {\n        if (document.hidden) { return; }\n        // if (this.props.goal.metadata.fromCache) return;\n        if ((this.state.progress === 100 && !this.props.goal.completed) ||\n        (this.state.progress !== 100 && this.props.goal.completed)) {\n            const d = new Date();\n            const ms = d.getTime();\n            const newCompletedStatus = !this.props.goal.completed\n            this.goalRef.update({\n                completed: newCompletedStatus,\n                completedAt: newCompletedStatus ? ms : null\n            });\n        }\n        // const countRef = this.props.firebase.settingsRef.doc('completedCount');\n        // countRef.get().then(doc => {\n        //     const data = doc.data();\n        //     let newCount;\n        //     newCompletedStatus\n        //         ? newCount = data.count + 1\n        //         : newCount = data.count - 1\n        //     if (newCount < 0) newCount = 0;\n        //     countRef.set({\n        //         count: newCount\n        //     })\n        // })\n\n    }\n    triggerModal = (subgoal) => {\n        if (subgoal) {\n            // console.log(subgoal)\n            this.props.toggleModal({\n                parentGoalName: this.props.goal.goal,\n                parentGoalDate: this.props.goal.date,\n                parentGoalId: this.props.goal.id,\n                multigoal: false,\n                subgoal: true,\n                subgoalsAdded: this.state.subgoalsAdded\n                // closeMenu: this.handleClose\n            })\n        } else {\n            this.props.toggleModal({\n                goal: this.props.goal.goal,\n                date: this.props.goal.date,\n                id: this.props.goal.id,\n                multigoal: this.props.goal.multigoal,\n                subgoal: this.props.goal.subgoal,\n                subgoalsAdded: this.state.subgoalsAdded\n                // closeMenu: this.handleClose\n            })\n        }\n        this.handleClose();\n    }\n    startDelete = () => {\n        // this.goalRef.delete();\n        this.setState({\n            subgoalsOpen: true,\n            deleteInProgress: true,\n        })\n        this.handleClose();\n    }\n\n    finishDelete = () => {\n        this.goalRef.delete();\n    }\n\n    toggleTimeView = () => {\n        this.setState({\n            timeView: !this.state.timeView\n        })\n    }\n    toggleSubgoals = () => {\n        this.setState({\n            subgoalsOpen: !this.state.subgoalsOpen\n        })\n    }\n\n    updateProgress = newPercentage => {\n        // console.log(newPercentage)\n        this.setState({\n            progress: newPercentage,\n            subgoalsAdded: isNaN(newPercentage) ? false : true,\n            loading: false\n        });\n        if (newPercentage === 100 && !this.props.goal.completed) {\n            setTimeout(() => this.handleCompleteToggle(), 500)\n            // this.handleCompleteToggle();\n        } else if (newPercentage !== 100 && this.props.goal.completed) {\n            setTimeout(() => this.handleCompleteToggle(), 500)\n            // this.handleCompleteToggle();\n        }\n    }\n\n    render() {\n        const { anchorEl } = this.state;\n        const open = Boolean(anchorEl);\n        return (\n            <React.Fragment>\n                <ListItem className={this.props.goal.subgoal ? \"goalitem-indent\" : \"\"}\n                    button onClick={this.toggleTimeView}>\n                    {\n                        this.state.timeView\n                        ? <ListItemText\n                        primary={this.props.goal.goal}\n                        secondary={this.props.goal.completed\n                            ? <TimeStamp completed={this.props.goal.completedAt} />\n                            : <Timer date={this.props.goal.date} />\n                        }\n                        primaryTypographyProps={{\n                            style: { width: '80%' },\n                            className: this.props.goal.completed ? \"goalitem-strike\" : \"\"\n                        }}\n                        secondaryTypographyProps={{ color: 'error' }}\n                        />\n                        : <ListItemText\n                        primary={this.props.goal.goal}\n                        secondary={this.props.goal.completed\n                            ? <React.Fragment>\n                                {/* <TimeStamp completed={this.props.goal.completedAt} /><br/> */}\n                                {/* <TimeStamp updated={this.props.goal.updatedAt} created={this.props.goal.createdAt}/><br/> */}\n                                <TimerCompleted completed={this.props.goal.completedAt} updated={this.props.goal.updatedAt}/>\n                            </React.Fragment>\n                            :<React.Fragment>\n                                {/* <TimeStamp updated={this.props.goal.updatedAt} created={this.props.goal.createdAt}/><br/> */}\n                                <TimeDue date={this.props.goal.date}/><br/>\n                            </React.Fragment>\n                        }\n                        primaryTypographyProps={{\n                            style: { width: '80%' },\n                            className: this.props.goal.completed ? \"goalitem-strike\" : \"\"\n                        }}\n                        secondaryTypographyProps={{ color: 'error' }}\n                        />\n\n                    }\n                    <ListItemSecondaryAction>\n                        {\n                            this.state.subgoalsAdded\n                            ? !this.state.loading && \n                            <IconButton onClick={this.toggleSubgoals}>\n                                {\n                                    this.state.subgoalsOpen\n                                    ? <ExpandLess/>\n                                    : <ExpandMore/>\n                                }\n                            </IconButton>\n                            : !this.state.loading &&\n                            <IconButton variant=\"raised\"\n                                onClick={() => this.triggerModal(true)}>\n                                <AddIcon />\n                            </IconButton>\n                        }\n                        <IconButton onClick={this.handleMenuClick}>\n                            <MoreVertIcon />\n                        </IconButton>\n                        <Menu\n                            id=\"long-menu\"\n                            anchorEl={anchorEl}\n                            open={open}\n                            onClose={this.handleClose}>\n                            {\n                                this.props.goal.multigoal &&\n                                //trigger modal with subgoal flag\n                                <MenuItem onClick={() => this.triggerModal(true)}>\n                                    <ListItemIcon>\n                                        <AddIcon color={'inherit'}/>\n                                    </ListItemIcon>\n                                    <ListItemText inset primary=\"Add Sub Goal\" />\n                                </MenuItem>\n                            }\n                            {\n                                !this.props.goal.completed &&\n                                <MenuItem onClick={() => this.triggerModal(false)}>\n                                    <ListItemIcon>\n                                        <EditIcon color={'inherit'}/>\n                                    </ListItemIcon>\n                                    <ListItemText inset primary=\"Edit\" />\n                                </MenuItem>\n                            }\n                            <MenuItem onClick={this.startDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon nativeColor={this.props.theme.palette.warn[500]}/>\n                                </ListItemIcon>\n                                <ListItemText inset primary=\"Delete\" />\n                            </MenuItem>\n                        </Menu>\n                    </ListItemSecondaryAction>\n                </ListItem>\n                {\n                    !this.state.loading && this.state.subgoalsAdded &&\n                    <LinearProgress className=\"goalItem-progress\"\n                        color=\"secondary\" variant=\"determinate\" value={this.state.progress} />\n                }\n                {\n                    this.props.goal.multigoal &&\n                    <MultiGoalList \n                        open={this.state.subgoalsOpen}\n                        parentGoal={this.props.goal}\n                        user={this.props.user} \n                        toggleModal={this.props.toggleModal}\n                        toggleRepeatModal={this.props.toggleRepeatModal}\n                        updateProgress={this.updateProgress}\n                        deleteParent={this.finishDelete}\n                        deleteInProgress={this.state.deleteInProgress}/>\n                }\n            </React.Fragment>\n        )\n    }\n}\n\nexport default withTheme()(withFirebase(MultiGoalItem));","import React, {Component} from 'react'\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nclass Clock extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.d = new Date();\r\n        this.options = {\r\n            weekday: 'short',\r\n            year: 'numeric',\r\n            month: 'numeric',\r\n            day: 'numeric',\r\n            hour: 'numeric',\r\n            minute: 'numeric',\r\n            second: 'numeric',\r\n        }\r\n        this.state = {\r\n            time: this.d.toLocaleString('en-US', this.options)\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.update();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unmounting = true;\r\n    }\r\n\r\n    update = () => {\r\n        if(this.unmounting) return;\r\n        const d = new Date();\r\n        const newTime = d.toLocaleString('en-US', this.options);\r\n        if(newTime !== this.state.time) {\r\n            this.setState({\r\n                time: newTime\r\n            })\r\n        }\r\n        requestAnimationFrame(this.update);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Chip color=\"secondary\" label={this.state.time} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Clock;","import React, {Component} from 'react'\nimport Chip from '@material-ui/core/Chip';\nimport { withFirebase } from '../Firebase';\nclass CompletedCounter extends Component {\n    constructor(props) {\n        super(props);\n        this.unmounting = false;\n        this.state = {completeCount: \"\"}\n        // console.log(props)\n    }\n\n    componentDidMount() {\n        const completedRef = this.props.firebase.db.collection(`users/${this.props.uid}/settings`)\n        .doc('completedCount');\n\n        completedRef.onSnapshot(snapshot => {\n            const data = snapshot.data()\n            if (!this.unmounting) {\n                this.setState({ completeCount: data.count })\n            }\n        })\n    }\n\n    componentWillUnmount() {\n        this.unmounting = true;\n    }\n\n    render() {\n        return (\n            <Chip color=\"primary\" label={`Completed Goals: ${this.state.completeCount}`} />\n        )\n    }\n}\n\nexport default withFirebase(CompletedCounter);","import React from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport './centeredModal.css';\r\n\r\nexport default ({children: Children, ...rest}) => (\r\n    <Modal {...rest} className=\"centeredModal\">{Children}</Modal>\r\n);\r\n","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport './settings.css';\nimport Loading from '../loading/loading';\nimport CompletedCounter from '../dashboard/completedcounter';\nimport Clock from '../dashboard/clock';\nimport { withFirebase } from '../Firebase';\n\nfunction initializeSettings(settingsRef) {\n    settingsRef.doc('completedCount').set({ count: 0, enabled: true });\n    settingsRef.doc('clock').set({ enabled: true });\n}\n\nfunction getNewBackground(settingsRef) {\n    fetch('https://picsum.photos/g/1920/1200/?random')\n    .then(res => {\n        if (res.status === 200) {\n            document.body.style.backgroundImage = `url(${res.url})`\n            settingsRef.doc('background').set({ url: res.url });\n        } else {\n            document.body.style.backgroundImage = 'none'\n        }\n    });\n}\n\nclass Settings extends Component {\n\n    constructor(props) {\n        super(props);\n        this.unmounting = false;\n        this.settingsRef = this.props.firebase.db.collection(`users/${this.props.user.uid}/settings`);\n        this.state = {\n            loading: true,\n            settings: {}\n        }\n    }\n\n    componentDidMount() {\n        this.settingsRef.onSnapshot((snapshot) => {\n            const settings = {};\n            // snapshot.forEach(doc => settings.push({id: doc.id, ...doc.data()}))\n            snapshot.forEach(doc => settings[doc.id] = {id: doc.id, ...doc.data()});\n            if (!this.unmounting) {\n                this.setState({settings, loading: false});\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        this.unmounting = true;\n    }\n\n    toggleEnableSwitch = setting => {\n        this.settingsRef.doc(setting).update({ enabled: !this.state.settings[setting].enabled})\n    }\n\n    render() {\n        return (\n        <Loading status={this.state.loading}>\n            <div className=\"settings-wrapper\">\n                {/* <h1>{JSON.stringify(this.state.settings)}</h1> */}\n                <Typography variant=\"h4\" align=\"center\" className=\"settings-title\">\n                    Settings\n                </Typography>\n                <form>\n                    <Grid container justify=\"center\" className=\"settings__setting-row\">\n                        <Grid item xs={12} md={6}>\n                            <div className=\"settings__column-wrapper--center\">\n                                <Typography variant=\"h6\">\n                                    Completed Goals Counter\n                                </Typography>\n                                <CompletedCounter uid={this.props.user.uid} />\n                            </div>\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <div className=\"settings__column-wrapper--center\">\n                                {\n                                    this.state.settings.completedCount &&\n                                    <FormGroup row>\n                                        <FormControlLabel\n                                            control={\n                                                <Switch\n                                                checked={this.state.settings.completedCount.enabled}\n                                                onChange={() => this.toggleEnableSwitch(this.state.settings.completedCount.id)}\n                                                value={this.state.settings.completedCount.enabled}\n                                                />\n                                            }\n                                            label={\n                                                <Typography color={\n                                                    this.state.settings.completedCount.enabled\n                                                    ? \"textPrimary\"\n                                                    : \"textSecondary\"\n                                                }>\n                                                    Enable Complete Counter\n                                                </Typography>\n                                            }/>\n                                    </FormGroup>\n                                }\n                            </div>\n                        </Grid>\n                    </Grid>\n                    <Divider variant='middle' />\n                    <Grid container justify=\"center\" className=\"settings__setting-row\">\n                        <Grid item xs={12} md={6}>\n                            <div className=\"settings__column-wrapper--center\">\n                                <Typography variant=\"h6\">\n                                    Clock\n                                </Typography>\n                                <Clock uid={this.props.user.uid} />\n                            </div>\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <div className=\"settings__column-wrapper--center\">\n                                {\n                                    this.state.settings.clock &&\n                                    <FormGroup row>\n                                        <FormControlLabel\n                                            control={\n                                                <Switch\n                                                checked={this.state.settings.clock.enabled}\n                                                onChange={() => this.toggleEnableSwitch(this.state.settings.clock.id)}\n                                                value={this.state.settings.clock.enabled}\n                                                />\n                                            }\n                                            label={\n                                                <Typography color={\n                                                    this.state.settings.clock.enabled\n                                                    ? \"textPrimary\"\n                                                    : \"textSecondary\"\n                                                }>\n                                                    Enable Clock\n                                                </Typography>\n                                            }/>\n                                    </FormGroup>\n                                }\n                            </div>\n                        </Grid>\n                    </Grid>\n                    <Divider variant='middle' />\n                    <Grid container justify=\"center\" className=\"settings__setting-row\">\n                        <Grid item xs={12} md={6}>\n                            <div className=\"settings__column-wrapper--center\">\n                                <Typography variant=\"h6\">\n                                    Background\n                                </Typography>\n                            </div>\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <div className=\"settings__column-wrapper--center\">\n                                {\n                                    // this.state.settings.background &&\n                                    true &&\n                                    <Button variant=\"contained\" color=\"primary\" onClick={() => getNewBackground(this.settingsRef)}>\n                                        Shuffle Background\n                                    </Button>\n                                }\n                            </div>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Loading>\n        )\n    }\n}\n\nexport default withFirebase(Settings);\n\nexport { initializeSettings, getNewBackground };","import Dashboard from './dashboard';\r\nimport Goalform from './goalform';\r\nimport CenteredModal from './centeredModal';\r\n\r\nexport { Goalform, CenteredModal };\r\nexport default Dashboard;","import React from 'react';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport List from '@material-ui/core/List';\nimport GoalForm from './goalform';\nimport GoalItem from './goalitem';\nimport RepeatForm from './repeatform';\nimport MultiGoalItem from './multigoalitem';\nimport Clock from './clock';\nimport CompletedCounter from './completedcounter';\nimport CenteredModal from './centeredModal';\nimport { withFirebase } from '../Firebase';\nimport { initializeSettings, getNewBackground } from '../settings/settings';\nimport './dashboard.css';\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.unmounting = false;\n        this.state = {\n            goalModalOpen: false,\n            repeatModalOpen: false,\n            modalState: undefined,\n            repeatModalState: undefined,\n            goals: [],\n            settings: {},\n            settingsLoaded: false,\n        };\n    }\n    componentDidMount = () => {\n        this.props.firebase.db.collection(`users/${this.props.user.uid}/goals`)\n        .onSnapshot((snapshot) => {\n            const goals = [];\n            snapshot.forEach(doc => goals.push({id: doc.id, ...doc.data()}))\n            this.setState({goals});\n        })\n        const settingsRef = this.props.firebase.db.collection(`users/${this.props.user.uid}/settings`);\n        settingsRef.onSnapshot((snapshot) => {\n            // console.log(snapshot)\n            if (!snapshot.empty) {\n                const settings = {};\n                // snapshot.forEach(doc => console.log(doc));\n                snapshot.forEach(doc => settings[doc.id] = {id: doc.id, ...doc.data()});\n                if (!this.unmounting) {\n                    this.setState({settings, settingsLoaded: true});\n                    if (settings.background && settings.background.url) {\n                        document.body.style.backgroundImage = `url(${settings.background.url})`\n                    }\n                }\n            } else {\n                initializeSettings(settingsRef);\n                getNewBackground(settingsRef);\n            }\n        })\n    }\n\n    toggleModal = modalState => {\n        this.setState({\n            goalModalOpen: !this.state.goalModalOpen,\n            modalState: modalState ? modalState : null\n        })\n    }\n\n    toggleRepeatModal = modalState => {\n        this.setState({\n            repeatModalOpen: !this.state.repeatModalOpen,\n            repeatModalState: modalState ? modalState : null\n        })\n    }\n    componentWillUnmount() {\n        this.unmounting = true;\n    }\n    render() {\n        return (\n            <div className=\"dash\">\n                <div className=\"dash-items\">\n                    {\n                        this.state.settingsLoaded && this.state.settings.clock.enabled &&\n                        <div className=\"dash-item\">\n                            <Clock />\n                        </div>\n                    }\n                    {\n                        this.state.settingsLoaded && this.state.settings.completedCount.enabled &&\n                        <div className=\"dash-item\">\n                            <CompletedCounter uid={this.props.user.uid}/>\n                        </div>\n                    }\n                </div>\n                <List>\n                    {\n                        this.state.goals\n                        .sort((goalA, goalB) => {\n                            const diff = goalA.date - goalB.date\n                            if (goalA.completed === goalB.completed) {\n                                return diff;\n                            } else if (goalA.completed) {\n                                return 1;\n                            } else {\n                                return -1;\n                            }\n                        })\n                        .map(goal => (\n                            goal.multigoal\n                            ? <MultiGoalItem key={goal.id} goal={goal}\n                                toggleModal={this.toggleModal}\n                                toggleRepeatModal={this.toggleRepeatModal}\n                                user={this.props.user}/>\n                            : <GoalItem key={goal.id} goal={goal}\n                                toggleModal={this.toggleModal}\n                                toggleRepeatModal={this.toggleRepeatModal}/>\n                        ))\n                    }\n                </List>\n                <CenteredModal open={this.state.goalModalOpen}\n                    onClose={this.toggleModal}>\n                    <GoalForm toggleModal={this.toggleModal} initialState={this.state.modalState}/>\n                </CenteredModal>\n                <CenteredModal open={this.state.repeatModalOpen}\n                    onClose={this.toggleRepeatModal}>\n                    <RepeatForm toggleRepeatModal={this.toggleRepeatModal} initialState={this.state.repeatModalState}/>\n                </CenteredModal>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <Fab color=\"secondary\"\n                    variant=\"extended\"\n                    aria-label=\"Add\"\n                    id=\"dash-addBtn\"\n                    onClick={this.toggleModal}>\n                    <AddIcon />\n                </Fab>\n            </div>\n        );\n    }\n}\n\nexport default withFirebase(Dashboard);","import React, { Component } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid'\nimport './about.css';\n\nclass About extends Component {\n    render() {\n        return (\n            <div className=\"about\">\n                <Grid container justify={\"center\"} alignItems={\"center\"}>\n                    <Grid item xs={12} lg={8}>\n                        <Card className=\"about-card\">\n                            <CardContent>\n                                <Typography variant={\"h4\"} align={\"center\"}>\n                                    Thanks for using Goaler!\n                                </Typography>\n                                <br/>\n                                <Typography variant={\"h5\"} align={\"center\"}>\n                                    Contact me <a href=\"mailto:leewarrick@gmail.com\" rel=\"noopener noreferrer\" target=\"_BLANK\">here</a>\n                                </Typography>\n                                <br/>\n                                <Typography variant={\"h6\"} align={\"center\"}>\n                                    © Lee Warrick 2019. All Rights Reserved.\n                                </Typography>\n                            </CardContent> \n                        </Card>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default About;","import React, { Component } from 'react';\nimport { withFirebase } from './components/Firebase';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport Drawer from '@material-ui/core/Drawer';\nimport Login from './components/login/login';\nimport Loading from './components/loading/loading';\nimport Header from './components/header/header';\nimport MainMenu from './components/mainmenu/mainmenu';\nimport Dashboard from './components/dashboard/';\nimport Settings from './components/settings/settings';\nimport About from './components/about/about';\nimport './App.css';\n\nconst PrivateRoute = ({component: Component, user, ...rest}) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => user\n        ? <Component {...props} {...rest} user={user} />\n        : <Redirect to={{pathname: '/login', state: {from: props.location}}} />}\n        // : <Redirect to='/login' />}\n    />\n  )\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      loading: true,\n      from: null,\n      drawer: false\n    }\n  }\n\n  componentDidMount = () => {\n    this.props.firebase.auth.onAuthStateChanged(user => {\n      if (user) {\n        this.setState({ user: user, loading: false })\n        this.props.firebase.initializeUser(user.uid);\n      } else {\n        this.setState({ user: null, loading: false });\n      }\n    })\n    document.body.style.backgroundImage = `url(https://picsum.photos/g/1920/1080?image=773)`\n  }\n\n  // writeTestData = () => {\n  //   this.props.firebase.goalsRef.add({name: \"banana Johnson\"})\n  // }\n\n  signIn = async () => {\n    const result = await this.props.firebase.signIn();\n    this.setState({ user: result.user });\n  }\n\n  signOut = () => {\n    this.props.firebase.logout();\n    this.toggleDrawer();\n  }\n\n  toggleDrawer = () => {\n    this.setState({\n      drawer: !this.state.drawer\n    })\n  }\n\n  render() {\n    return (\n      <Router basename=\"/Goaler\">\n        <Loading status={this.state.loading}>\n          <div className=\"App\">\n          <Header user={this.state.user} login={this.signIn} toggleDrawer={this.toggleDrawer}/>\n          <Drawer anchor={\"right\"} open={this.state.drawer} onClose={this.toggleDrawer}>\n            <MainMenu logout={this.signOut} toggleDrawer={this.toggleDrawer}/>\n          </Drawer>\n          <Route path=\"/login\" render={(props)=> <Login {...props} user={this.state.user} login={this.signIn} />} />\n          <PrivateRoute user={this.state.user} exact path='/about' component={About}/>\n          <PrivateRoute user={this.state.user} exact path='/' component={Dashboard}/>\n          <PrivateRoute user={this.state.user} exact path='/settings' component={Settings}/>\n          {/* <Link to=\"/private\">Banana</Link>\n          <Link to=\"/private/2\">Banana2</Link>\n          <PrivateRoute user={this.state.user} exact path='/private' component={Banana} text=\"React Router\"/>\n          <PrivateRoute user={this.state.user} path='/private/:num' component={Banana} text=\"React Router\" /> */}\n          </div>\n        </Loading>\n      </Router>\n    );\n  }\n}\n\nexport default withFirebase(App);\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport purple from '@material-ui/core/colors/purple';\nimport orange from '@material-ui/core/colors/orange';\nimport red from '@material-ui/core/colors/red';\n\n// All the following keys are optional.\n// We try our best to provide a great default value.\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n        main: blue[900]\n    },\n    secondary: {\n        main: purple[400],\n      },\n    error: orange,\n    warn: red,\n    // Used by `getContrastText()` to maximize the contrast between the background and\n    // the text.\n    contrastThreshold: 3,\n    // Used to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: 0.5,\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nexport default theme;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport theme from './theme';\nimport 'typeface-roboto';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n<FirebaseContext.Provider value={new Firebase()}>\n    <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <App />\n    </MuiThemeProvider>\n</FirebaseContext.Provider>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}