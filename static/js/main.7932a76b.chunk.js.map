{"version":3,"sources":["components/login/darts.jpeg","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/login/login.jsx","components/loading/loading.jsx","components/header/header.jsx","components/mainmenu/mainmenu.jsx","components/dashboard/goalform.jsx","components/dashboard/timer.jsx","components/dashboard/timedue.jsx","components/dashboard/timestamp.jsx","components/dashboard/timercompleted.jsx","components/dashboard/goalitem.jsx","components/dashboard/multigoallist.jsx","components/dashboard/multigoalitem.jsx","components/dashboard/clock.jsx","components/dashboard/completedcounter.jsx","components/dashboard/centeredModal.jsx","components/dashboard/index.js","components/dashboard/dashboard.jsx","components/settings/settings.jsx","components/about/about.jsx","App.js","theme.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","components_Firebase","Firebase","_this","this","classCallCheck","signIn","provider","auth","GoogleAuthProvider","signInWithRedirect","catch","err","console","log","logout","signOut","redirect","getRedirectResult","initializeUser","uid","goalsRef","db","collection","concat","settingsRef","app","initializeApp","firestore","settings","timestampsInSnapshots","Login","user","history","push","Fragment","Card_default","className","CardMedia_default","component","alt","image","darts","Typography_default","variant","gutterBottom","align","Button_default","color","onClick","login","Loading","status","CircularProgress_default","size","children","Header","AppBar_default","position","Toolbar_default","Link","to","aria-label","Beenhere_default","IconButton_default","toggleDrawer","Menu_default","MainMenu","navigate","route","_this2","List_default","ListItem_default","button","ListItemIcon_default","Info_default","ListItemText_default","primary","DoneAll_default","Settings_default","Divider_default","ExitToApp_default","withRouter","GoalForm","possibleConstructorReturn","getPrototypeOf","call","toggleMultigoal","setState","multigoal","state","handleChange","name","event","defineProperty","target","value","validate","nameErr","nameHelper","dateErr","dateHelper","timeErr","timeHelper","date","time","now","Date","dateArgs","split","map","str","Number","datetime","construct","toConsumableArray","getTime","toDateString","handleSubmit","d","n","initialState","goal","subgoal","doc","id","update","completed","updatedAt","then","toggleModal","parentGoalId","add","createdAt","addSixtySeconds","leadingZero","num","today","getFullYear","getMonth","getDate","maxDate","currentTime","getHours","getMinutes","milliseconds","prevProps","prevState","CardHeader_default","avatar","Avatar_default","style","backgroundColor","theme","palette","secondary","main","text","AddAlarm_default","title","action","tabIndex","Close_default","CardContent_default","Grid_default","container","spacing","item","xs","TextField_default","label","placeholder","error","onChange","fullWidth","margin","helperText","md","type","InputLabelProps","shrink","InputProps","inputProps","min","max","subgoalsAdded","FormGroup_default","row","FormControlLabel_default","control","Switch_default","checked","CardActions_default","withTheme","Timer","checkTime","updateTime","unMounting","counting","timeRemaining","Math","abs","seconds","floor","minutes","hours","days","toString","requestAnimationFrame","classes","TimeDue","ms","diff","toLocaleString","TimeStamp","updated","created","timeStatus","renderSpans","TimerCompleted","completionTime","round","GoalItem","handleMenuClick","anchorEl","currentTarget","handleClose","handleCompleteToggle","newCompletedStatus","goalRef","completedAt","countRef","get","newCount","data","count","set","triggerModal","parentGoalName","parentGoalDate","handleDelete","delete","toggleTimeView","timeView","parentGoal","deleteSelf","open","Boolean","timestamp","dashboard_timer","primaryTypographyProps","width","secondaryTypographyProps","timercompleted","dashboard_timedue","ListItemSecondaryAction_default","CheckBox_default","CheckBoxOutlineBlank_default","MoreVert_default","core_Menu_default","onClose","MenuItem_default","Edit_default","inset","Delete_default","nativeColor","warn","MultiGoalList","subgoals","deleteInProgress","length","deleteParent","onSnapshot","snapshot","forEach","objectSpread","filter","completePercentage","updateProgress","_this3","Collapse_default","in","timeout","unmountOnExit","disablePadding","sort","goalA","goalB","dashboard_goalitem","key","MultiGoalItem","startDelete","subgoalsOpen","finishDelete","toggleSubgoals","newPercentage","progress","isNaN","loading","ExpandLess_default","ExpandMore_default","Add_default","LinearProgress_default","multigoallist","Clock","unmounting","newTime","options","weekday","year","month","day","hour","minute","second","Chip_default","CompletedCounter","completeCount","completedRef","exists","dashboard_centeredModal","_ref","Children","rest","objectWithoutProperties","Modal_default","Dashboard","componentDidMount","goals","modalState","goalModalOpen","undefined","clock","completedcounter","dashboard_multigoalitem","dashboard_goalform","Fab_default","Settings","About","justify","alignItems","lg","href","rel","PrivateRoute","Route","render","Redirect","pathname","from","location","App","onAuthStateChanged","asyncToGenerator","regenerator_default","mark","_callee","result","wrap","_context","prev","next","sent","stop","drawer","BrowserRouter","basename","loading_loading","header_header","Drawer_default","anchor","mainmenu_mainmenu","path","login_login","App_PrivateRoute","exact","createMuiTheme","blue","purple","orange","red","contrastThreshold","tonalOffset","typography","useNextVariants","window","hostname","match","ReactDOM","context","Provider","styles","CssBaseline_default","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7932a76b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/darts.9832dd2d.jpeg\";","import React from 'react';\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n    <FirebaseContext.Consumer>\r\n        {firebase => <Component {...props} firebase={firebase} />}\r\n    </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default FirebaseContext;","import app, { auth } from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n// Initialize Firebase\nconst config = {\n    apiKey: process.env.REACT_APP_FIREBASE_apiKey,\n    authDomain: process.env.REACT_APP_FIREBASE_authDomain,\n    databaseURL: process.env.REACT_APP_FIREBASE_databaseURL,\n    projectId: process.env.REACT_APP_FIREBASE_projectId,\n    storageBucket: process.env.REACT_APP_FIREBASE_storageBucket,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_messagingSenderId\n};\n\nclass Firebase {\n    constructor() {\n        app.initializeApp(config);\n        this.auth = app.auth();\n        this.db = app.firestore();\n        const settings = {/* your settings... */ timestampsInSnapshots: true};\n        this.db.settings(settings);\n        // this.userRef = null;\n        // this.goalsRef = null;\n    }\n    signIn = () => {\n        const provider = new auth.GoogleAuthProvider();\n        return this.auth.signInWithRedirect(provider).catch(err => console.log(err));\n        // return this.auth.signInWithPopup(provider).catch(err => console.log(err));\n    }\n    logout = () => {\n        return this.auth.signOut();\n    }\n    redirect = () => {\n        return this.auth.getRedirectResult();\n    }\n    initializeUser = (uid) => {\n        this.goalsRef = this.db.collection(`users/${uid}/goals`);\n        this.settingsRef = this.db.collection(`users/${uid}/settings`)\n        // this.db.collection(`users/${uid}/goals/${goalid}/subgoals`);\n        // this.goalsRef = this.userRef.collection(\"goals\");\n    }\n}\n\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\r\nimport Firebase from './firebase';\r\n\r\nexport default Firebase;\r\n\r\nexport { FirebaseContext, withFirebase };","import React, { Component } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\n// import CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n// import Grid from '@material-ui/core/Grid';\n// import LogoIcon from '@material-ui/icons/Beenhere';\nimport Button from '@material-ui/core/Button';\nimport darts from './darts.jpeg';\n\nimport './login.css';\n\nclass Login extends Component {\n    componentDidMount() {\n        // console.log(this.props)\n        if (this.props.user) {\n            this.props.history.push('/')\n        }\n    }\n    render() {\n        return (\n            <React.Fragment>\n\n            <Card className=\"login-titleCard\">\n                <CardMedia\n                    component=\"img\"\n                    alt=\"Inspirational Goal Image\"\n                    image={darts}/>\n                <div className=\"login-titleCard_container\">\n                    <Typography variant=\"h2\" className=\"login-titleCard_title\" gutterBottom>\n                        Welcome to <strong>GOALER</strong>\n                    </Typography>\n                    <Typography variant=\"h5\" align=\"right\" className=\"login-titleCard_subtitle\" gutterBottom>\n                        Track your goals.\n                    </Typography>\n                    <Typography variant=\"h5\" align=\"right\" className=\"login-titleCard_subtitle\" gutterBottom>\n                        Get more things done.\n                    </Typography>\n                    <Typography variant=\"h5\" align=\"right\" className=\"login-titleCard_actionCall\" gutterBottom>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={this.props.login}>Sign in</Button>\n                        &nbsp;with Google\n                    </Typography>\n                </div>\n            </Card>\n            {/* <Grid container justify={\"center\"} alignItems={\"center\"}>\n                <Grid item xs={12} lg={8}>\n                    <Card>\n                        <CardContent>\n                            <Typography variant=\"h5\">\n                                Welcome to Goaler\n                            </Typography>\n                        </CardContent>\n                    </Card>\n                </Grid>\n            </Grid> */}\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Login;","import React, { Component } from 'react';\r\nimport './loading.css';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nclass Loading extends Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n            {\r\n                this.props.status ? \r\n                    <div className=\"loading\">\r\n                        <CircularProgress color=\"secondary\" size={200}/>\r\n                    </div> :\r\n                    this.props.children\r\n            }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Loading;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport LogoIcon from '@material-ui/icons/Beenhere';\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport './header.css';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <header>\r\n                <AppBar position=\"static\" className=\"header\">\r\n                    <Toolbar className=\"row\">\r\n                        <Link to=\"/\">\r\n                            <Button color=\"inherit\" aria-label=\"Logo\">\r\n                                <LogoIcon />\r\n                                <Typography variant=\"h6\" color=\"inherit\">\r\n                                    Goaler\r\n                                </Typography>\r\n                            </Button>\r\n                        </Link>\r\n                        <div>\r\n                        {\r\n                            this.props.user\r\n                            ? <IconButton color=\"inherit\" onClick={this.props.toggleDrawer}>\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                            : <Button color=\"inherit\" onClick={this.props.login}>Sign In</Button>\r\n                        }\r\n                        </div>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react'\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ExitIcon from '@material-ui/icons/ExitToApp'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport GoalsIcon from '@material-ui/icons/DoneAll'\nimport InfoIcon from '@material-ui/icons/Info'\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { withRouter } from 'react-router-dom';\nimport './mainmenu.css'\n\nclass MainMenu extends Component {\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    navigate = route => {\n        this.props.history.push(route);\n        this.props.toggleDrawer();\n    }\n\n    render() {\n        return (\n            <List className=\"mainmenu\">\n                <ListItem button onClick={() => this.navigate('/about')}>\n                    <ListItemIcon>\n                        <InfoIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"About\" />\n                </ListItem>\n                <ListItem button onClick={() => this.navigate('/')}>\n                    <ListItemIcon>\n                        <GoalsIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Goals\" />\n                </ListItem>\n                <ListItem button onClick={() => this.navigate('/settings')}>\n                    <ListItemIcon>\n                        <SettingsIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Settings\" />\n                </ListItem>\n                <Divider/>\n                <ListItem button onClick={this.props.logout}>\n                    <ListItemIcon>\n                        <ExitIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Sign Out\" />\n                </ListItem>\n            </List>\n        )\n    }\n}\n\nexport default withRouter(MainMenu);","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Icon from '@material-ui/icons/AddAlarm'\nimport { withTheme } from '@material-ui/core/styles'\nimport { withFirebase } from '../Firebase';\nimport './goalform.css';\n\nclass GoalForm extends Component {\n    constructor(props) {\n        super(props);\n        // console.log(this.props)\n        this.now = new Date();\n        const addSixtySeconds = new Date(this.now.getTime() + 60000);\n        const leadingZero = num => num < 10 ? \"0\" + num : num\n        this.today = `${this.now.getFullYear()}-${leadingZero(this.now.getMonth() + 1)}-${leadingZero(this.now.getDate())}`\n        this.maxDate = `${this.now.getFullYear() + 10}-${leadingZero(this.now.getMonth() + 1)}-${leadingZero(this.now.getDate())}`\n        this.currentTime = `${leadingZero(addSixtySeconds.getHours())}:${leadingZero(addSixtySeconds.getMinutes())}`;\n        let initialState;\n        if (this.props.initialState && this.props.initialState.date) {\n            const milliseconds = this.props.initialState.date;\n            let date = this.today;\n            let time = this.currentTime;\n            if (milliseconds > this.now.getTime()) {\n                const d = new Date(milliseconds);\n                date = `${d.getFullYear()}-${leadingZero(d.getMonth() + 1)}-${leadingZero(d.getDate())}`\n                time = `${leadingZero(d.getHours())}:${leadingZero(d.getMinutes())}`;\n            }\n            initialState = {\n                name: this.props.initialState.goal,\n                nameErr: false,\n                nameHelper: \"\",\n                date,\n                dateErr: false,\n                dateHelper: \"\",\n                time,\n                timeErr: false,\n                timeHelper: \"\",\n                multigoal: this.props.initialState.multigoal ? true : false,\n                subgoal: this.props.initialState.subgoal ? true : false,\n            }\n        } else {\n            initialState = {\n                name: \"\",\n                nameErr: false,\n                nameHelper: \"\",\n                date: this.today,\n                dateErr: false,\n                dateHelper: \"\",\n                time: this.currentTime,\n                timeErr: false,\n                timeHelper: \"\",\n                // multigoal: false,\n                // subgoal: false,\n                multigoal: this.props.initialState && this.props.initialState.multigoal\n                    ? true : false,\n                subgoal: this.props.initialState && this.props.initialState.subgoal\n                    ? true : false,\n            }\n        }\n        this.state = initialState;\n        // console.log(this.state)\n    }\n\n    toggleMultigoal = () => {\n        this.setState({\n            multigoal: !this.state.multigoal\n        })\n    }\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.name !== this.state.name ||\n            prevState.date !== this.state.date ||\n            prevState.time !== this.state.time) {\n            this.validate();\n        }\n    }\n\n    validate = () => {\n        //check if name\n        let nameErr = false;\n        let nameHelper = \"\";\n        let dateErr = false;\n        let dateHelper = \"\";\n        let timeErr = false;\n        let timeHelper = \"\";\n        if (!this.state.name) {\n            nameErr = true;\n            nameHelper = \"Please set a goal\";\n        }\n        //check if date\n        if (!this.state.date) {\n            dateErr = true;\n            dateHelper = \"Please set a date\";\n        }\n        //check if time\n        if (!this.state.time) {\n            timeErr = true;\n            timeHelper = \"Please set a time\";\n        }\n        //get current date and time when form submits\n        const now = new Date();\n        const dateArgs = `${this.state.date} ${this.state.time}`.split(/[- :]/).map(str => Number(str));\n        dateArgs[1]--; //month is 0 indexed\n        const datetime = new Date(...dateArgs);\n        // check if time/date is > now\n        if (datetime.getTime() < now.getTime()) {\n            if (datetime.toDateString() !== now.toDateString()) {\n                dateErr = true;\n                dateHelper = \"Date must be in future\";\n            } else {\n                timeErr = true;\n                timeHelper = \"Time must be in future\";\n            }\n        }\n        this.setState({\n            nameErr,\n            nameHelper,\n            dateErr,\n            dateHelper,\n            timeErr,\n            timeHelper,\n        })\n        if (timeErr || dateErr || nameErr) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    handleSubmit = () => {\n        if (this.validate()) return;\n        const dateArgs = `${this.state.date} ${this.state.time}`.split(/[- :]/)\n            .map(str => Number(str));\n        dateArgs[1]--; //month is 0 indexed\n        const d = new Date(...dateArgs);\n        const now = new Date();\n        const n = now.getTime();\n        if (this.props.initialState && this.props.initialState.goal && !this.state.subgoal) {\n            this.props.firebase.goalsRef.doc(this.props.initialState.id)\n                .update({\n                    goal: this.state.name,\n                    date: d.getTime(),\n                    multigoal: this.state.multigoal,\n                    subgoal: this.state.subgoal,\n                    completed: false,\n                    updatedAt: n\n                })\n                .then(() => {\n                    this.props.toggleModal();\n                    // this.props.initialState.closeMenu();\n                })\n        } else if (!this.state.subgoal){\n            this.props.firebase.goalsRef.add({\n                goal: this.state.name,\n                date: d.getTime(),\n                multigoal: this.state.multigoal,\n                subgoal: this.state.subgoal,\n                completed: false,\n                createdAt: n,\n                updatedAt: n\n            })\n            .then(() => {\n                this.props.toggleModal();\n            })\n        } else {\n            // console.log(`Adding subgoal`, this.state)\n            this.props.firebase.goalsRef\n            .doc(this.props.initialState.parentGoalId)\n            .collection('subgoals').add({\n                goal: this.state.name,\n                date: d.getTime(),\n                multigoal: this.state.multigoal,\n                subgoal: this.state.subgoal,\n                completed: false,\n                createdAt: n,\n                updatedAt: n\n            })\n            .then(() => {\n                this.props.toggleModal();\n            })\n        }\n\n    }\n\n    render() {\n        return (\n            <Card className=\"goalform\">\n                <CardHeader\n                    avatar={\n                        <Avatar\n                            style={{\n                                backgroundColor: this.props.theme.palette.secondary.main,\n                                color: this.props.theme.palette.text.primary\n                            }}>\n                            <Icon />\n                        </Avatar>\n                    }\n                    title=\"Add a goal\"\n                    // subheader=\"With Chocolates\"\n                    action={\n                        <IconButton onClick={this.props.toggleModal} tabIndex={-1}>\n                            <CloseIcon />\n                        </IconButton>\n                    }\n                />\n                <CardContent>\n                    <Grid container spacing={0}>\n                        <Grid item xs={12}>\n                            <TextField\n                                label=\"Goal\"\n                                placeholder=\"Make it a good one!\"\n                                error={this.state.nameErr}\n                                value={this.state.name}\n                                onChange={this.handleChange('name')}\n                                fullWidth\n                                margin=\"normal\"\n                                helperText={this.state.nameHelper}\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                label=\"Due Date\"\n                                error={this.state.dateErr}\n                                type=\"date\"\n                                value={this.state.date}\n                                onChange={this.handleChange('date')}\n                                margin=\"normal\"\n                                fullWidth\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                helperText={this.state.dateHelper}\n                                InputProps={{\n                                    inputProps: {\n                                        min: this.today,\n                                        max: this.maxDate\n                                    }\n                                }}\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                label=\"Due Time\"\n                                error={this.state.timeErr}\n                                type=\"time\"\n                                value={this.state.time}\n                                onChange={this.handleChange('time')}\n                                margin=\"normal\"\n                                fullWidth\n                                helperText={this.state.timeHelper}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                            />\n                        </Grid>\n                        {\n                            !this.state.subgoal && !this.props.initialState.subgoalsAdded &&\n                            <Grid item xs={12} md={6}>\n                                <FormGroup row>\n                                    <FormControlLabel\n                                        control={\n                                            <Switch\n                                            checked={this.state.multigoal}\n                                            onChange={this.toggleMultigoal}\n                                            value={this.state.multigoal}\n                                            />\n                                        }\n                                        label={\n                                            <Typography color={\n                                                this.state.multigoal\n                                                ? \"textPrimary\"\n                                                : \"textSecondary\"\n                                                }>\n                                                Multi-Step Goal\n                                            </Typography>\n                                        }/>\n                                </FormGroup>\n                            </Grid>\n                        }\n                    </Grid>\n                </CardContent>\n                <CardActions className=\"row right\">\n                    <Button onClick={this.handleSubmit}>\n                        {\n                            this.props.initialState && this.props.initialState.goal\n                            ? \"Update \" : \"Add \"\n                        }\n                        Goal\n                    </Button>\n                    <Button onClick={this.props.toggleModal}>Cancel</Button>\n                </CardActions>\n            </Card>\n                )\n            }\n        }\n\nexport default withTheme()(withFirebase(GoalForm));","import React from 'react';\nimport './timer.css';\nclass Timer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.unMounting = false;\n        const timeRemaining = this.checkTime();\n        this.state = {\n            time: {},\n            counting: timeRemaining > 0 ? true : false,\n            classes: \"\"\n        }\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if(prevProps.date !== this.props.date) {\n            this.updateTime();\n        }\n    }\n    componentDidMount() {\n        if (this.props.date /* && this.state.counting */) {\n            this.updateTime();\n        }\n    }\n    checkTime = () => {\n        const future = this.props.date;\n        const d = new Date();\n        const now = d.getTime();\n        const timeRemaining = future - now;\n        return timeRemaining;\n    }\n    updateTime = () => {\n        if (this.unMounting) return;\n        // var future = Date.parse(\"December 31, 2019\");\n        let timeRemaining = this.checkTime();\n        let counting;\n        timeRemaining < 0 ? counting = false : counting = true;\n        timeRemaining = Math.abs(timeRemaining);\n        // console.log(timeRemaining)\n        // if (timeRemaining < 1000) {\n        //     return this.setState({\n        //         time: {\n        //             days: \"00\",\n        //             hours: \"00\",\n        //             minutes: \"00\",\n        //             seconds: \"00\"\n        //         },\n        //         counting: false,\n        //         // classes: \"timer-strike_animate\"\n        //     });\n        // }\n        let seconds = Math.floor(timeRemaining / 1000) % 60;\n        let minutes = Math.floor((timeRemaining / 1000) / 60) % 60;\n        let hours = Math.floor((timeRemaining / 1000) / 3600) % 24;\n        let days = Math.floor(((timeRemaining / 1000) / 3600) / 24);\n        days = days < 10 ? '0' + days : days.toString();\n        hours = hours < 10 ? '0' + hours : hours.toString();\n        minutes = minutes < 10 ? '0' + minutes : minutes.toString();\n        seconds = seconds < 10 ? '0' + seconds : seconds.toString();\n        this.setState({\n            time: {\n                days, hours, minutes, seconds\n            },\n            counting: counting\n        });\n        requestAnimationFrame(this.updateTime);\n    }\n\n    componentWillUnmount() {\n        this.unMounting = true;\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                {\n                    this.state.counting\n                    ? <span className={this.state.classes}>\n                        Due in:\n                        {` ${this.state.time.days}:` +\n                            `${this.state.time.hours}:` +\n                            `${this.state.time.minutes}:` +\n                            `${this.state.time.seconds}`}\n                    </span>\n                    : <span className=\"timer-strike\">\n                        Past Due:\n                        {` ${this.state.time.days}:` +\n                            `${this.state.time.hours}:` +\n                            `${this.state.time.minutes}:` +\n                            `${this.state.time.seconds}`}\n                    </span>\n                    // : <span className=\"timer-strike\">00:00:00:00</span>\n                }\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Timer;","import React from 'react';\r\nimport './timedue.css'\r\n\r\nconst TimeDue = props => {\r\n    const ms = props.date;\r\n    const now = new Date();\r\n    const nowMs = now.getTime();\r\n    const diff = nowMs - ms;\r\n    const d = new Date(ms);\r\n    return (\r\n        <span className={diff > 0 ? \"timedue\" : \"\"}>Due: {d.toLocaleString()}</span>\r\n    )\r\n};\r\n\r\nexport default TimeDue;","import React, { Component } from 'react';\n\nclass TimeStamp extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            created: \"\",\n            updated: \"\",\n            completed: \"\",\n            timeStatus: \"\"\n        }\n\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps !== this.props) {\n            this.updateTime();\n        }\n    }\n\n    componentDidMount() {\n        this.updateTime();\n    }\n\n    updateTime = () => {\n        const updated = new Date(this.props.updated);\n        const created = new Date(this.props.created);\n        const completed = new Date(this.props.completed);\n        if (this.props.completed) {\n            this.setState({\n                timeStatus: \"completed\",\n                completed: \"Completed: \" + completed.toLocaleString()\n            })\n        } else if (this.props.updated === this.props.created) {\n            this.setState({\n                timeStatus: \"created\",\n                created: \"Created: \" + created.toLocaleString()\n            });\n        } else {\n            this.setState({\n                timeStatus: \"updated\",\n                updated: \"Updated: \" + updated.toLocaleString(),\n                created: \"Created: \" + created.toLocaleString()\n            });\n        }\n    }\n\n    renderSpans = () => {\n        //if created\n        switch(this.state.timeStatus) {\n            case 'completed':\n                return (\n                    <span>{this.state.completed}</span>\n                )\n            case 'created':\n                return (\n                    <span>{this.state.created}</span>\n                )\n            case 'updated':\n                return (\n                    <React.Fragment>\n                        {/* <span>{this.state.created}</span><br/> */}\n                        <span>{this.state.updated}</span>\n                    </React.Fragment>\n                )\n            default:\n                return;\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                {this.renderSpans()}\n            </React.Fragment>\n        )\n    }\n}\n\nexport default TimeStamp;","import React, { Component } from 'react';\n\nclass TimerCompleted extends Component {\n    constructor(props) {\n        super(props);\n        const completed = props.completed;\n        const updated = props.updated;\n        const completionTime = completed - updated;\n        let seconds = Math.round(completionTime / 1000) % 60;\n        let minutes = Math.floor((completionTime / 1000) / 60) % 60;\n        let hours = Math.floor((completionTime / 1000) / 3600) % 24;\n        let days = Math.floor(((completionTime / 1000) / 3600) / 24);\n        this.days = days < 10 ? '0' + days : days.toString();\n        this.hours = hours < 10 ? '0' + hours : hours.toString();\n        this.minutes = minutes < 10 ? '0' + minutes : minutes.toString();\n        this.seconds = seconds < 10 ? '0' + seconds : seconds.toString();\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <span>{`Completed in: ${this.days}:${this.hours}:${this.minutes}:${this.seconds}`}</span><br/>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default TimerCompleted;","import React, { Component } from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n// import AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { withTheme } from '@material-ui/core/styles';\nimport { withFirebase } from '../Firebase';\nimport Timer from './timer';\nimport TimeDue from './timedue';\nimport TimeStamp from './timestamp';\nimport TimerCompleted from './timercompleted';\nimport './goalitem.css';\n\nclass GoalItem extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            anchorEl: null,\n            timeView: true\n        };\n        this.goalRef = props.goal.subgoal\n        ? props.firebase.goalsRef.doc(`${props.parentGoal.id}/subgoals/${props.goal.id}`)\n        : props.firebase.goalsRef.doc(props.goal.id);\n    }\n\n    componentDidMount() {\n        if (this.props.deleteSelf) {\n            this.goalRef.delete();\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        // console.log(\"I rendered with\", {props: this.props})\n        if (prevProps.deleteSelf !== this.props.deleteSelf && this.props.deleteSelf) {\n            this.goalRef.delete();\n        }\n    }\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCompleteToggle = () => {\n        const d = new Date();\n        const ms = d.getTime();\n        const newCompletedStatus = !this.props.goal.completed\n        this.goalRef.update({\n            completed: newCompletedStatus,\n            completedAt: newCompletedStatus ? ms : null\n        });\n        const countRef = this.props.firebase.settingsRef.doc('completedCount');\n        countRef.get().then(doc => {\n            const data = doc.data();\n            let newCount;\n            newCompletedStatus\n                ? newCount = data.count + 1\n                : newCount = data.count - 1\n            if (newCount < 0) newCount = 0;\n            countRef.set({\n                count: newCount\n            })\n        })\n\n    }\n    triggerModal = (subgoal) => {\n        if (subgoal) {\n            console.log(subgoal)\n            this.props.toggleModal({\n                parentGoalName: this.props.goal.goal,\n                parentGoalDate: this.props.goal.date,\n                parentGoalId: this.props.goal.id,\n                multigoal: false,\n                subgoal: true\n                // closeMenu: this.handleClose\n            })\n        } else {\n            this.props.toggleModal({\n                goal: this.props.goal.goal,\n                date: this.props.goal.date,\n                id: this.props.goal.id,\n                multigoal: this.props.goal.multigoal,\n                subgoal: this.props.goal.subgoal\n                // closeMenu: this.handleClose\n            })\n        }\n        this.handleClose();\n    }\n    handleDelete = () =>{\n        this.goalRef.delete();\n        this.handleClose();\n    }\n\n    toggleTimeView = () => {\n        this.setState({\n            timeView: !this.state.timeView\n        })\n    }\n\n    render() {\n        const { anchorEl } = this.state;\n        const open = Boolean(anchorEl);\n        return (\n            <React.Fragment>\n                <ListItem className={this.props.goal.subgoal ? \"goalItem-indent\" : \"\"}\n                    button onClick={this.toggleTimeView}>\n                    {\n                        this.state.timeView\n                        ? <ListItemText\n                        // className={}\n                        primary={this.props.goal.goal}\n                        secondary={this.props.goal.completed\n                            ? <TimeStamp completed={this.props.goal.completedAt} />\n                            : <Timer date={this.props.goal.date} />\n                        }\n                        primaryTypographyProps={{\n                            style: { width: '80%' },\n                            className: this.props.goal.completed ? \"goalitem-strike\" : \"\"\n                        }}\n                        secondaryTypographyProps={{ color: 'error' }}\n                        />\n                        : <ListItemText\n                        // className={this.props.goal.completed ? \"goalitem-strike\" : \"\"}\n                        primary={this.props.goal.goal}\n                        secondary={this.props.goal.completed\n                            ? <React.Fragment>\n                                {/* <TimeStamp completed={this.props.goal.completedAt} /><br/> */}\n                                {/* <TimeStamp updated={this.props.goal.updatedAt} created={this.props.goal.createdAt}/><br/> */}\n                                <TimerCompleted completed={this.props.goal.completedAt} updated={this.props.goal.updatedAt}/>\n                            </React.Fragment>\n                            :<React.Fragment>\n                                {/* <TimeStamp updated={this.props.goal.updatedAt} created={this.props.goal.createdAt}/><br/> */}\n                                <TimeDue date={this.props.goal.date}/><br/>\n                            </React.Fragment>\n                        }\n                        primaryTypographyProps={{\n                            style: { width: '80%' },\n                            className: this.props.goal.completed ? \"goalitem-strike\" : \"\"\n                        }}\n                        secondaryTypographyProps={{ color: 'error' }}\n                        />\n\n                    }\n                    <ListItemSecondaryAction>\n                        <IconButton onClick={this.handleCompleteToggle}>\n                            {\n                                this.props.goal.completed\n                                ? <CheckBoxIcon color=\"secondary\"/>\n                                : <CheckBoxOutlineBlankIcon />\n                            }\n                        </IconButton>\n                        <IconButton onClick={this.handleMenuClick}>\n                            <MoreVertIcon />\n                        </IconButton>\n                        <Menu\n                            id=\"long-menu\"\n                            anchorEl={anchorEl}\n                            open={open}\n                            onClose={this.handleClose}>\n                            {\n                                !this.props.goal.completed &&\n                                <MenuItem onClick={() => this.triggerModal(false)}>\n                                    <ListItemIcon>\n                                        <EditIcon color={'inherit'}/>\n                                    </ListItemIcon>\n                                    <ListItemText inset primary=\"Edit\" />\n                                </MenuItem>\n                            }\n                            <MenuItem onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon nativeColor={this.props.theme.palette.warn[500]}/>\n                                </ListItemIcon>\n                                <ListItemText inset primary=\"Delete\" />\n                            </MenuItem>\n                        </Menu>\n                    </ListItemSecondaryAction>\n                </ListItem>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default withTheme()(withFirebase(GoalItem));","import React, { Component } from 'react';\nimport List from '@material-ui/core/List';\nimport Collapse from '@material-ui/core/Collapse';\nimport GoalItem from './goalitem';\nimport { withFirebase } from '../Firebase';\n\nclass MultiGoalList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            subgoals: []\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.deleteInProgress && this.state.subgoals.length === 0) {\n            this.props.deleteParent();\n        }\n    }\n\n    componentDidMount() {\n        this.props.firebase.db\n            .collection(`users/${this.props.user.uid}/goals/${this.props.parentGoal.id}/subgoals`)\n            .onSnapshot((snapshot) => {\n                const subgoals = [];\n                snapshot.forEach(doc => subgoals.push({ id: doc.id, ...doc.data() }))\n                const completed = subgoals.filter(goal => goal.completed);\n                const completePercentage = Math.round(completed.length / subgoals.length * 100);\n                this.props.updateProgress(completePercentage);\n                this.setState({ subgoals });\n            })\n    }\n\n    render() {\n        return (\n            <Collapse in={this.props.open} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding>\n                    {\n                        this.state.subgoals\n                            .sort((goalA, goalB) => {\n                                const diff = goalA.date - goalB.date\n                                if (goalA.completed === goalB.completed) {\n                                    return diff;\n                                } else if (goalA.completed) {\n                                    return 1;\n                                } else {\n                                    return -1;\n                                }\n                            })\n                            .map(goal => (\n                                <GoalItem key={goal.id} goal={goal} \n                                toggleModal={this.props.toggleModal} \n                                parentGoal={this.props.parentGoal}\n                                deleteSelf={this.props.deleteInProgress}/>\n                            ))\n                    }\n                </List>\n            </Collapse>\n        );\n    }\n}\n\nexport default withFirebase(MultiGoalList);","import React, { Component } from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n// import CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\n// import CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { withTheme } from '@material-ui/core/styles';\nimport { withFirebase } from '../Firebase';\nimport MultiGoalList from './multigoallist';\nimport Timer from './timer';\nimport TimeDue from './timedue';\nimport TimeStamp from './timestamp';\nimport TimerCompleted from './timercompleted';\nimport './multigoalitem.css';\n\nclass MultiGoalItem extends Component {\n    constructor(props) {\n        super(props);\n        // console.log(props)\n        this.state = {\n            anchorEl: null,\n            timeView: true,\n            subgoalsOpen: props.goal.multigoal ? false : null,\n            progress: 0,\n            subgoalsAdded: false,\n            loading: true,\n            deleteInProgress: false,\n        };\n        this.goalRef = props.goal.subgoal\n        ? props.firebase.goalsRef.doc(`${props.parentGoal.id}/subgoals/${props.goal.id}`)\n        : props.firebase.goalsRef.doc(props.goal.id);\n    }\n    // componentDidUpdate() {\n    //     console.log(\"I rendered with\", {props: this.props})\n    // }\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCompleteToggle = () => {\n        const d = new Date();\n        const ms = d.getTime();\n        const newCompletedStatus = !this.props.goal.completed\n        this.goalRef.update({\n            completed: newCompletedStatus,\n            completedAt: newCompletedStatus ? ms : null\n        });\n        const countRef = this.props.firebase.settingsRef.doc('completedCount');\n        countRef.get().then(doc => {\n            const data = doc.data();\n            let newCount;\n            newCompletedStatus\n                ? newCount = data.count + 1\n                : newCount = data.count - 1\n            if (newCount < 0) newCount = 0;\n            countRef.set({\n                count: newCount\n            })\n        })\n\n    }\n    triggerModal = (subgoal) => {\n        if (subgoal) {\n            // console.log(subgoal)\n            this.props.toggleModal({\n                parentGoalName: this.props.goal.goal,\n                parentGoalDate: this.props.goal.date,\n                parentGoalId: this.props.goal.id,\n                multigoal: false,\n                subgoal: true,\n                subgoalsAdded: this.state.subgoalsAdded\n                // closeMenu: this.handleClose\n            })\n        } else {\n            this.props.toggleModal({\n                goal: this.props.goal.goal,\n                date: this.props.goal.date,\n                id: this.props.goal.id,\n                multigoal: this.props.goal.multigoal,\n                subgoal: this.props.goal.subgoal,\n                subgoalsAdded: this.state.subgoalsAdded\n                // closeMenu: this.handleClose\n            })\n        }\n        this.handleClose();\n    }\n    startDelete = () => {\n        // this.goalRef.delete();\n        this.setState({\n            subgoalsOpen: true,\n            deleteInProgress: true,\n        })\n        this.handleClose();\n    }\n\n    finishDelete = () => {\n        this.goalRef.delete();\n    }\n\n    toggleTimeView = () => {\n        this.setState({\n            timeView: !this.state.timeView\n        })\n    }\n    toggleSubgoals = () => {\n        this.setState({\n            subgoalsOpen: !this.state.subgoalsOpen\n        })\n    }\n\n    updateProgress = newPercentage => {\n        // console.log(newPercentage)\n        this.setState({\n            progress: newPercentage,\n            subgoalsAdded: isNaN(newPercentage) ? false : true,\n            loading: false\n        });\n        if (newPercentage === 100 && !this.props.goal.completed) {\n            this.handleCompleteToggle();\n        } else if (newPercentage !== 100 && this.props.goal.completed) {\n            this.handleCompleteToggle();\n        }\n    }\n\n    render() {\n        const { anchorEl } = this.state;\n        const open = Boolean(anchorEl);\n        return (\n            <React.Fragment>\n                <ListItem className={this.props.goal.subgoal ? \"goalitem-indent\" : \"\"}\n                    button onClick={this.toggleTimeView}>\n                    {\n                        this.state.timeView\n                        ? <ListItemText\n                        primary={this.props.goal.goal}\n                        secondary={this.props.goal.completed\n                            ? <TimeStamp completed={this.props.goal.completedAt} />\n                            : <Timer date={this.props.goal.date} />\n                        }\n                        primaryTypographyProps={{\n                            style: { width: '80%' },\n                            className: this.props.goal.completed ? \"goalitem-strike\" : \"\"\n                        }}\n                        secondaryTypographyProps={{ color: 'error' }}\n                        />\n                        : <ListItemText\n                        primary={this.props.goal.goal}\n                        secondary={this.props.goal.completed\n                            ? <React.Fragment>\n                                {/* <TimeStamp completed={this.props.goal.completedAt} /><br/> */}\n                                {/* <TimeStamp updated={this.props.goal.updatedAt} created={this.props.goal.createdAt}/><br/> */}\n                                <TimerCompleted completed={this.props.goal.completedAt} updated={this.props.goal.updatedAt}/>\n                            </React.Fragment>\n                            :<React.Fragment>\n                                {/* <TimeStamp updated={this.props.goal.updatedAt} created={this.props.goal.createdAt}/><br/> */}\n                                <TimeDue date={this.props.goal.date}/><br/>\n                            </React.Fragment>\n                        }\n                        primaryTypographyProps={{\n                            style: { width: '80%' },\n                            className: this.props.goal.completed ? \"goalitem-strike\" : \"\"\n                        }}\n                        secondaryTypographyProps={{ color: 'error' }}\n                        />\n\n                    }\n                    <ListItemSecondaryAction>\n                        {\n                            this.state.subgoalsAdded\n                            ? !this.state.loading && \n                            <IconButton onClick={this.toggleSubgoals}>\n                                {\n                                    this.state.subgoalsOpen\n                                    ? <ExpandLess/>\n                                    : <ExpandMore/>\n                                }\n                            </IconButton>\n                            : !this.state.loading &&\n                            <IconButton variant=\"raised\"\n                                onClick={() => this.triggerModal(true)}>\n                                <AddIcon />\n                            </IconButton>\n                        }\n                        <IconButton onClick={this.handleMenuClick}>\n                            <MoreVertIcon />\n                        </IconButton>\n                        <Menu\n                            id=\"long-menu\"\n                            anchorEl={anchorEl}\n                            open={open}\n                            onClose={this.handleClose}>\n                            {\n                                this.props.goal.multigoal &&\n                                //trigger modal with subgoal flag\n                                <MenuItem onClick={() => this.triggerModal(true)}>\n                                    <ListItemIcon>\n                                        <AddIcon color={'inherit'}/>\n                                    </ListItemIcon>\n                                    <ListItemText inset primary=\"Add Sub Goal\" />\n                                </MenuItem>\n                            }\n                            {\n                                !this.props.goal.completed &&\n                                <MenuItem onClick={() => this.triggerModal(false)}>\n                                    <ListItemIcon>\n                                        <EditIcon color={'inherit'}/>\n                                    </ListItemIcon>\n                                    <ListItemText inset primary=\"Edit\" />\n                                </MenuItem>\n                            }\n                            <MenuItem onClick={this.startDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon nativeColor={this.props.theme.palette.warn[500]}/>\n                                </ListItemIcon>\n                                <ListItemText inset primary=\"Delete\" />\n                            </MenuItem>\n                        </Menu>\n                    </ListItemSecondaryAction>\n                </ListItem>\n                {\n                    !this.state.loading && this.state.subgoalsAdded &&\n                    <LinearProgress className=\"goalItem-progress\"\n                        color=\"secondary\" variant=\"determinate\" value={this.state.progress} />\n                }\n                {\n                    this.props.goal.multigoal &&\n                    <MultiGoalList \n                        open={this.state.subgoalsOpen}\n                        parentGoal={this.props.goal}\n                        user={this.props.user} \n                        toggleModal={this.props.toggleModal}\n                        updateProgress={this.updateProgress}\n                        deleteParent={this.finishDelete}\n                        deleteInProgress={this.state.deleteInProgress}/>\n                }\n            </React.Fragment>\n        )\n    }\n}\n\nexport default withTheme()(withFirebase(MultiGoalItem));","import React, {Component} from 'react'\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nclass Clock extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.d = new Date();\r\n        this.options = {\r\n            weekday: 'short',\r\n            year: 'numeric',\r\n            month: 'numeric',\r\n            day: 'numeric',\r\n            hour: 'numeric',\r\n            minute: 'numeric',\r\n            second: 'numeric',\r\n        }\r\n        this.state = {\r\n            time: this.d.toLocaleString('en-US', this.options)\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.update();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unmounting = true;\r\n    }\r\n\r\n    update = () => {\r\n        if(this.unmounting) return;\r\n        const d = new Date();\r\n        const newTime = d.toLocaleString('en-US', this.options);\r\n        if(newTime !== this.state.time) {\r\n            this.setState({\r\n                time: newTime\r\n            })\r\n        }\r\n        requestAnimationFrame(this.update);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Chip color=\"secondary\" label={this.state.time} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Clock;","import React, {Component} from 'react'\nimport Chip from '@material-ui/core/Chip';\nimport { withFirebase } from '../Firebase';\nclass CompletedCounter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {completeCount: \"\"}\n        // console.log(props)\n    }\n\n    componentDidMount() {\n        const completedRef = this.props.firebase.db.collection(`users/${this.props.uid}/settings`)\n        .doc('completedCount');\n\n        completedRef.onSnapshot(snapshot => {\n            if (snapshot.exists) {\n                const data = snapshot.data()\n                this.setState({ completeCount: data.count })\n            } else {\n                completedRef.set({ count: 0 })\n            }\n        })\n    }\n\n    render() {\n        return (\n            <Chip color=\"primary\" label={`Completed Goals: ${this.state.completeCount}`} />\n        )\n    }\n}\n\nexport default withFirebase(CompletedCounter);","import React from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport './centeredModal.css';\r\n\r\nexport default ({children: Children, ...rest}) => (\r\n    <Modal {...rest} className=\"centeredModal\">{Children}</Modal>\r\n);\r\n","import Dashboard from './dashboard';\r\nimport Goalform from './goalform';\r\nimport CenteredModal from './centeredModal';\r\n\r\nexport { Goalform, CenteredModal };\r\nexport default Dashboard;","import React from 'react';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport List from '@material-ui/core/List';\nimport GoalForm from './goalform';\nimport GoalItem from './goalitem';\nimport MultiGoalItem from './multigoalitem';\nimport Clock from './clock';\nimport CompletedCounter from './completedcounter';\nimport CenteredModal from './centeredModal';\nimport { withFirebase } from '../Firebase';\nimport './dashboard.css';\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            goalModalOpen: false,\n            modalState: undefined,\n            goals: [],\n            settings: {}\n        };\n    }\n    componentDidMount = () => {\n        this.props.firebase.db.collection(`users/${this.props.user.uid}/goals`)\n        .onSnapshot((snapshot) => {\n            const goals = [];\n            snapshot.forEach(doc => goals.push({id: doc.id, ...doc.data()}))\n            this.setState({goals});\n        })\n        this.props.firebase.db.collection(`users/${this.props.user.uid}/settings`)\n        .onSnapshot((snapshot) => {\n            const settings = {};\n            // snapshot.forEach(doc => settings.push({id: doc.id, ...doc.data()}))\n            snapshot.forEach(doc => settings[doc.id] = {id: doc.id, ...doc.data()});\n            this.setState({settings});\n        })\n    }\n    toggleModal = modalState => {\n        this.setState({\n            goalModalOpen: !this.state.goalModalOpen,\n            modalState: modalState ? modalState : null\n        })\n    }\n    render() {\n        return (\n            <div className=\"dash\">\n                <div className=\"dash-items\">\n                    <div className=\"dash-item\">\n                        <Clock />\n                    </div>\n                    <div className=\"dash-item\">\n                        <CompletedCounter uid={this.props.user.uid}/>\n                    </div>\n                </div>\n                <List>\n                    {\n                        this.state.goals\n                        .sort((goalA, goalB) => {\n                            const diff = goalA.date - goalB.date\n                            if (goalA.completed === goalB.completed) {\n                                return diff;\n                            } else if (goalA.completed) {\n                                return 1;\n                            } else {\n                                return -1;\n                            }\n                        })\n                        .map(goal => (\n                            goal.multigoal\n                            ? <MultiGoalItem key={goal.id} goal={goal} \n                            toggleModal={this.toggleModal}\n                            user={this.props.user}/>\n                            : <GoalItem key={goal.id} goal={goal} toggleModal={this.toggleModal}/>\n                        ))\n                    }\n                </List>\n                <CenteredModal open={this.state.goalModalOpen}\n                    onClose={this.toggleModal}>\n                    <GoalForm toggleModal={this.toggleModal} initialState={this.state.modalState}/>\n                </CenteredModal>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <Fab color=\"secondary\"\n                    variant=\"extended\"\n                    aria-label=\"Add\"\n                    id=\"dash-addBtn\"\n                    onClick={this.toggleModal}>\n                    <AddIcon />\n                </Fab>\n            </div>\n        );\n    }\n}\n\nexport default withFirebase(Dashboard);","import React, { Component } from 'react'\r\n\r\nclass Settings extends Component {\r\n    render() {\r\n        return (\r\n            <h1>Settings Works!</h1>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Settings;","import React, { Component } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid'\nimport './about.css';\n\nclass About extends Component {\n    render() {\n        return (\n            <div className=\"about\">\n                <Grid container justify={\"center\"} alignItems={\"center\"}>\n                    <Grid item xs={12} lg={8}>\n                        <Card className=\"about-card\">\n                            <CardContent>\n                                <Typography variant={\"h4\"} align={\"center\"}>\n                                    Thanks for using Goaler!\n                                </Typography>\n                                <br/>\n                                <Typography variant={\"h5\"} align={\"center\"}>\n                                    Contact me <a href=\"mailto:leewarrick@gmail.com\" rel=\"noopener noreferrer\" target=\"_BLANK\">here</a>\n                                </Typography>\n                                <br/>\n                                <Typography variant={\"h6\"} align={\"center\"}>\n                                    © Lee Warrick 2019. All Rights Reserved.\n                                </Typography>\n                            </CardContent> \n                        </Card>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default About;","import React, { Component } from 'react';\nimport { withFirebase } from './components/Firebase';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport Drawer from '@material-ui/core/Drawer';\nimport Login from './components/login/login';\nimport Loading from './components/loading/loading';\nimport Header from './components/header/header';\nimport MainMenu from './components/mainmenu/mainmenu';\nimport Dashboard from './components/dashboard/';\nimport Settings from './components/settings/settings';\nimport About from './components/about/about';\nimport './App.css';\n\nconst PrivateRoute = ({component: Component, user, ...rest}) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => user\n        ? <Component {...props} {...rest} user={user} />\n        : <Redirect to={{pathname: '/login', state: {from: props.location}}} />}\n        // : <Redirect to='/login' />}\n    />\n  )\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      loading: true,\n      from: null,\n      drawer: false\n    }\n  }\n\n  componentDidMount = () => {\n    this.props.firebase.auth.onAuthStateChanged(user => {\n      if (user) {\n        this.setState({ user: user, loading: false })\n        this.props.firebase.initializeUser(user.uid);\n      } else {\n        this.setState({ user: null, loading: false });\n      }\n    })\n  }\n\n  // writeTestData = () => {\n  //   this.props.firebase.goalsRef.add({name: \"banana Johnson\"})\n  // }\n\n  signIn = async () => {\n    const result = await this.props.firebase.signIn();\n    this.setState({ user: result.user });\n  }\n\n  signOut = () => {\n    this.props.firebase.logout();\n    this.toggleDrawer();\n  }\n\n  toggleDrawer = () => {\n    this.setState({\n      drawer: !this.state.drawer\n    })\n  }\n\n  render() {\n    return (\n      <Router basename=\"/Goaler\">\n        <Loading status={this.state.loading}>\n          <div className=\"App\">\n          <Header user={this.state.user} login={this.signIn} toggleDrawer={this.toggleDrawer}/>\n          <Drawer anchor={\"right\"} open={this.state.drawer} onClose={this.toggleDrawer}>\n            <MainMenu logout={this.signOut} toggleDrawer={this.toggleDrawer}/>\n          </Drawer>\n          <Route path=\"/login\" render={(props)=> <Login {...props} user={this.state.user} login={this.signIn} />} />\n          <PrivateRoute user={this.state.user} exact path='/about' component={About}/>\n          <PrivateRoute user={this.state.user} exact path='/' component={Dashboard}/>\n          <PrivateRoute user={this.state.user} exact path='/settings' component={Settings}/>\n          {/* <Link to=\"/private\">Banana</Link>\n          <Link to=\"/private/2\">Banana2</Link>\n          <PrivateRoute user={this.state.user} exact path='/private' component={Banana} text=\"React Router\"/>\n          <PrivateRoute user={this.state.user} path='/private/:num' component={Banana} text=\"React Router\" /> */}\n          </div>\n        </Loading>\n      </Router>\n    );\n  }\n}\n\nexport default withFirebase(App);\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport purple from '@material-ui/core/colors/purple';\nimport orange from '@material-ui/core/colors/orange';\nimport red from '@material-ui/core/colors/red';\n\n// All the following keys are optional.\n// We try our best to provide a great default value.\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n        main: blue[900]\n    },\n    secondary: {\n        main: purple[400],\n      },\n    error: orange,\n    warn: red,\n    // Used by `getContrastText()` to maximize the contrast between the background and\n    // the text.\n    contrastThreshold: 3,\n    // Used to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: 0.5,\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nexport default theme;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport theme from './theme';\nimport 'typeface-roboto';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n<FirebaseContext.Provider value={new Firebase()}>\n    <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <App />\n    </MuiThemeProvider>\n</FirebaseContext.Provider>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}