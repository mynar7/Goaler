{"version":3,"sources":["components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/login/login.jsx","components/loading/loading.jsx","components/header/header.jsx","components/mainmenu/mainmenu.jsx","components/dashboard/goalform.jsx","components/dashboard/timer.jsx","components/dashboard/timedue.jsx","components/dashboard/timestamp.jsx","components/dashboard/timercompleted.jsx","components/dashboard/goalitem.jsx","components/dashboard/clock.jsx","components/dashboard/centeredModal.jsx","components/dashboard/index.js","components/dashboard/dashboard.jsx","components/settings/settings.jsx","components/about/about.jsx","App.js","theme.js","serviceWorker.js","index.js"],"names":["FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","components_Firebase","Firebase","_this","this","classCallCheck","signIn","provider","auth","GoogleAuthProvider","signInWithRedirect","catch","err","console","log","logout","signOut","redirect","getRedirectResult","initializeUser","uid","goalsRef","db","collection","concat","app","initializeApp","firestore","settings","timestampsInSnapshots","Login","user","history","push","Loading","Fragment","status","className","CircularProgress_default","color","size","children","Header","AppBar_default","position","Toolbar_default","Link","to","Button_default","aria-label","Beenhere_default","Typography_default","variant","IconButton_default","onClick","toggleDrawer","Menu_default","login","MainMenu","possibleConstructorReturn","getPrototypeOf","call","navigate","route","_this2","List_default","ListItem_default","button","ListItemIcon_default","Info_default","ListItemText_default","primary","DoneAll_default","Settings_default","Divider_default","ExitToApp_default","withRouter","GoalForm","handleChange","name","event","setState","defineProperty","target","value","validate","nameErr","nameHelper","dateErr","dateHelper","timeErr","timeHelper","state","date","time","now","Date","dateArgs","split","map","str","Number","datetime","construct","toConsumableArray","getTime","toDateString","handleSubmit","d","n","initialState","doc","id","update","goal","completed","updatedAt","then","toggleModal","add","createdAt","addSixtySeconds","leadingZero","num","today","getFullYear","getMonth","getDate","maxDate","currentTime","getHours","getMinutes","milliseconds","prevProps","prevState","Card_default","CardHeader_default","avatar","Avatar_default","style","backgroundColor","theme","palette","secondary","main","text","AddAlarm_default","title","action","tabIndex","Close_default","CardContent_default","Grid_default","container","spacing","item","xs","TextField_default","label","placeholder","error","onChange","fullWidth","margin","helperText","md","type","InputLabelProps","shrink","InputProps","inputProps","min","max","CardActions_default","withTheme","Timer","checkTime","updateTime","unMounting","counting","timeRemaining","Math","abs","seconds","floor","minutes","hours","days","toString","requestAnimationFrame","classes","TimeDue","ms","diff","toLocaleString","TimeStamp","updated","created","timeStatus","renderSpans","TimerCompleted","completionTime","round","GoalItem","handleMenuClick","anchorEl","currentTarget","handleClose","handleCompleteToggle","completedAt","triggerModal","handleDelete","delete","toggleTimeView","timeView","open","Boolean","timestamp","dashboard_timer","primaryTypographyProps","width","secondaryTypographyProps","timercompleted","dashboard_timedue","ListItemSecondaryAction_default","CheckBox_default","CheckBoxOutlineBlank_default","MoreVert_default","core_Menu_default","onClose","MenuItem_default","Edit_default","inset","Delete_default","nativeColor","warn","Clock","unmounting","newTime","options","weekday","year","month","day","hour","minute","second","Chip_default","dashboard_centeredModal","_ref","Children","rest","objectWithoutProperties","Modal_default","Dashboard","componentDidMount","onSnapshot","snapshot","goals","forEach","objectSpread","data","modalState","goalModalOpen","undefined","clock","sort","goalA","goalB","dashboard_goalitem","key","dashboard_goalform","Fab_default","Add_default","Settings","About","justify","alignItems","lg","align","href","rel","PrivateRoute","component","Route","render","Redirect","pathname","from","location","App","onAuthStateChanged","loading","asyncToGenerator","regenerator_default","mark","_callee","result","wrap","_context","prev","next","sent","stop","drawer","BrowserRouter","basename","loading_loading","header_header","Drawer_default","anchor","mainmenu_mainmenu","path","App_PrivateRoute","exact","createMuiTheme","blue","purple","orange","red","contrastThreshold","tonalOffset","typography","useNextVariants","window","hostname","match","ReactDOM","context","Provider","styles","CssBaseline_default","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.79dce7a1.chunk.js","sourcesContent":["import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n    <FirebaseContext.Consumer>\n        {firebase => <Component {...props} firebase={firebase} />}\n    </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;","import app, { auth } from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n// Initialize Firebase\nconst config = {\n    apiKey: process.env.REACT_APP_FIREBASE_apiKey,\n    authDomain: process.env.REACT_APP_FIREBASE_authDomain,\n    databaseURL: process.env.REACT_APP_FIREBASE_databaseURL,\n    projectId: process.env.REACT_APP_FIREBASE_projectId,\n    storageBucket: process.env.REACT_APP_FIREBASE_storageBucket,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_messagingSenderId\n};\n\nclass Firebase {\n    constructor() {\n        app.initializeApp(config);\n        this.auth = app.auth();\n        this.db = app.firestore();\n        const settings = {/* your settings... */ timestampsInSnapshots: true};\n        this.db.settings(settings);\n        // this.userRef = null;\n        // this.goalsRef = null;\n    }\n    signIn = () => {\n        const provider = new auth.GoogleAuthProvider();\n        return this.auth.signInWithRedirect(provider).catch(err => console.log(err));\n        // return this.auth.signInWithPopup(provider).catch(err => console.log(err));\n    }\n    logout = () => {\n        return this.auth.signOut();\n    }\n    redirect = () => {\n        return this.auth.getRedirectResult();\n    }\n    initializeUser = (uid) => {\n        this.goalsRef = this.db.collection(`users/${uid}/goals`);\n        // this.db.collection(`users/${uid}/goals/${goalid}/subgoals`);\n        // this.goalsRef = this.userRef.collection(\"goals\");\n    }\n}\n\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };","import React, { Component } from 'react';\n\nclass Login extends Component {\n    componentDidMount() {\n        console.log(this.props)\n        if (this.props.user) {\n            this.props.history.push('/')\n        }\n    }\n    render() {\n        return (\n            <h2>Login works!</h2>\n        )\n    }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport './loading.css';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nclass Loading extends Component {\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    render() {\n        return (\n            <React.Fragment>\n            {\n                this.props.status ? \n                    <div className=\"loading\">\n                        <CircularProgress color=\"secondary\" size={200}/>\n                    </div> :\n                    this.props.children\n            }\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Loading;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport LogoIcon from '@material-ui/icons/Beenhere';\nimport MenuIcon from '@material-ui/icons/Menu'\nimport './header.css';\n\nclass Header extends Component {\n    render() {\n        return (\n            <header>\n                <AppBar position=\"static\" className=\"header\">\n                    <Toolbar className=\"row\">\n                        <Link to=\"/\">\n                            <Button color=\"inherit\" aria-label=\"Logo\">\n                                <LogoIcon />\n                                <Typography variant=\"h6\" color=\"inherit\">\n                                    Goaler\n                                </Typography>\n                            </Button>\n                        </Link>\n                        <div>\n                        {\n                            this.props.user\n                            ? <IconButton color=\"inherit\" onClick={this.props.toggleDrawer}>\n                                <MenuIcon />\n                            </IconButton>\n                            : <Button color=\"inherit\" onClick={this.props.login}>Sign In</Button>\n                        }\n                        </div>\n                    </Toolbar>\n                </AppBar>\n            </header>\n        )\n    }\n}\n\nexport default Header;","import React, { Component } from 'react'\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ExitIcon from '@material-ui/icons/ExitToApp'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport GoalsIcon from '@material-ui/icons/DoneAll'\nimport InfoIcon from '@material-ui/icons/Info'\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { withRouter } from 'react-router-dom';\nimport './mainmenu.css'\n\nclass MainMenu extends Component {\n    constructor(props) {\n        super(props);\n        console.log(props)\n    }\n\n    navigate = route => {\n        this.props.history.push(route);\n        this.props.toggleDrawer();\n    }\n\n    render() {\n        return (\n            <List className=\"mainmenu\">\n                <ListItem button onClick={() => this.navigate('/about')}>\n                    <ListItemIcon>\n                        <InfoIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"About\" />\n                </ListItem>\n                <ListItem button onClick={() => this.navigate('/')}>\n                    <ListItemIcon>\n                        <GoalsIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Goals\" />\n                </ListItem>\n                <ListItem button onClick={() => this.navigate('/settings')}>\n                    <ListItemIcon>\n                        <SettingsIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Settings\" />\n                </ListItem>\n                <Divider/>\n                <ListItem button onClick={this.props.logout}>\n                    <ListItemIcon>\n                        <ExitIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Sign Out\" />\n                </ListItem>\n            </List>\n        )\n    }\n}\n\nexport default withRouter(MainMenu);","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Icon from '@material-ui/icons/AddAlarm'\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { withTheme } from '@material-ui/core/styles'\nimport { withFirebase } from '../Firebase';\nimport './goalform.css';\n\nclass GoalForm extends Component {\n    constructor(props) {\n        super(props);\n        this.now = new Date();\n        const addSixtySeconds = new Date(this.now.getTime() + 60000);\n        const leadingZero = num => num < 10 ? \"0\" + num : num\n        this.today = `${this.now.getFullYear()}-${leadingZero(this.now.getMonth() + 1)}-${leadingZero(this.now.getDate())}`\n        this.maxDate = `${this.now.getFullYear() + 10}-${leadingZero(this.now.getMonth() + 1)}-${leadingZero(this.now.getDate())}`\n        this.currentTime = `${leadingZero(addSixtySeconds.getHours())}:${leadingZero(addSixtySeconds.getMinutes())}`;\n        let initialState;\n        if (this.props.initialState) {\n            const milliseconds = this.props.initialState.date;\n            let date = this.today;\n            let time = this.currentTime;\n            if (milliseconds > this.now.getTime()) {\n                const d = new Date(milliseconds);\n                date = `${d.getFullYear()}-${leadingZero(d.getMonth() + 1)}-${leadingZero(d.getDate())}`\n                time = `${leadingZero(d.getHours())}:${leadingZero(d.getMinutes())}`;\n            }\n            initialState = {\n                name: this.props.initialState.goal,\n                nameErr: false,\n                nameHelper: \"\",\n                date,\n                dateErr: false,\n                dateHelper: \"\",\n                time,\n                timeErr: false,\n                timeHelper: \"\",\n            }\n        } else {\n            initialState = {\n                name: \"\",\n                nameErr: false,\n                nameHelper: \"\",\n                date: this.today,\n                dateErr: false,\n                dateHelper: \"\",\n                time: this.currentTime,\n                timeErr: false,\n                timeHelper: \"\",\n            }\n        }\n        this.state = initialState;\n    }\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.name !== this.state.name ||\n            prevState.date !== this.state.date ||\n            prevState.time !== this.state.time) {\n                this.validate();\n            }\n    }\n\n    validate = () => {\n        //check if name\n        let nameErr = false;\n        let nameHelper = \"\";\n        let dateErr = false;\n        let dateHelper = \"\";\n        let timeErr = false;\n        let timeHelper = \"\";\n        if (!this.state.name) {\n            nameErr = true;\n            nameHelper = \"Please set a goal\";\n        }\n        //check if date\n        if (!this.state.date) {\n            dateErr = true;\n            dateHelper = \"Please set a date\";\n        }\n        //check if time\n        if (!this.state.time) {\n            timeErr = true;\n            timeHelper = \"Please set a time\";\n        }\n        //get current date and time when form submits\n        const now = new Date();\n        const dateArgs = `${this.state.date} ${this.state.time}`.split(/[- :]/).map(str => Number(str));\n        dateArgs[1]--; //month is 0 indexed\n        const datetime = new Date(...dateArgs);\n        // check if time/date is > now\n        if (datetime.getTime() < now.getTime()) {\n            if (datetime.toDateString() !== now.toDateString()) {\n                dateErr = true;\n                dateHelper = \"Date must be in future\";\n            } else  {\n                timeErr = true;\n                timeHelper = \"Time must be in future\";\n            }\n        }\n        this.setState({\n            nameErr,\n            nameHelper,\n            dateErr,\n            dateHelper,\n            timeErr,\n            timeHelper,\n        })\n        if (timeErr || dateErr || nameErr) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    handleSubmit = () => {\n        if (this.validate()) return;\n        const dateArgs = `${this.state.date} ${this.state.time}`.split(/[- :]/)\n        .map(str => Number(str));\n        dateArgs[1]--; //month is 0 indexed\n        const d = new Date(...dateArgs);\n        const now = new Date();\n        const n = now.getTime();\n        if (this.props.initialState) {\n            this.props.firebase.goalsRef.doc(this.props.initialState.id)\n            .update({\n                goal: this.state.name,\n                date: d.getTime(),\n                completed: false,\n                updatedAt: n\n            })\n            .then(() => {\n                this.props.toggleModal();\n                // this.props.initialState.closeMenu();\n            })\n        } else {\n            this.props.firebase.goalsRef.add({\n                goal: this.state.name,\n                date: d.getTime(),\n                completed: false,\n                createdAt: n,\n                updatedAt: n\n            })\n            .then(() => {\n                this.props.toggleModal();\n            })\n        }\n\n    }\n\n    render() {\n        return (\n            <Card className=\"goalform\">\n                <CardHeader\n                    avatar={\n                        <Avatar\n                        style={{\n                            backgroundColor: this.props.theme.palette.secondary.main,\n                            color: this.props.theme.palette.text.primary\n                        }}>\n                            <Icon />\n                        </Avatar>\n                    }\n                    title=\"Add a goal\"\n                    // subheader=\"With Chocolates\"\n                    action={\n                        <IconButton onClick={this.props.toggleModal} tabIndex={-1}>\n                            <CloseIcon/>\n                        </IconButton>\n                    }\n                />\n                <CardContent>\n                    <Grid container spacing={0}>\n                        <Grid item xs={12}>\n                            <TextField\n                                label=\"Goal\"\n                                placeholder=\"Make it a good one!\"\n                                error={this.state.nameErr}\n                                value={this.state.name}\n                                onChange={this.handleChange('name')}\n                                fullWidth\n                                margin=\"normal\"\n                                helperText={this.state.nameHelper}\n                                />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                label=\"Due Date\"\n                                error={this.state.dateErr}\n                                type=\"date\"\n                                value={this.state.date}\n                                onChange={this.handleChange('date')}\n                                margin=\"normal\"\n                                fullWidth\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                helperText={this.state.dateHelper}\n                                InputProps={{\n                                    inputProps: {\n                                        min: this.today,\n                                        max: this.maxDate\n                                    }\n                                }}\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                label=\"Due Time\"\n                                error={this.state.timeErr}\n                                type=\"time\"\n                                value={this.state.time}\n                                onChange={this.handleChange('time')}\n                                margin=\"normal\"\n                                fullWidth\n                                helperText={this.state.timeHelper}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                            />\n                        </Grid>\n                    </Grid>\n                </CardContent>\n                <CardActions className=\"row right\">\n                    <Button onClick={this.handleSubmit}>{this.props.initialState ? \"Update\" : \"Add\"} Goal</Button>\n                    <Button onClick={this.props.toggleModal}>Cancel</Button>\n                </CardActions>\n            </Card>\n        )\n    }\n}\n\nexport default withTheme()(withFirebase(GoalForm));","import React from 'react';\nimport './timer.css';\nclass Timer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.unMounting = false;\n        const timeRemaining = this.checkTime();\n        this.state = {\n            time: {},\n            counting: timeRemaining > 0 ? true : false,\n            classes: \"\"\n        }\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if(prevProps.date !== this.props.date) {\n            this.updateTime();\n        }\n    }\n    componentDidMount() {\n        if (this.props.date /* && this.state.counting */) {\n            this.updateTime();\n        }\n    }\n    checkTime = () => {\n        const future = this.props.date;\n        const d = new Date();\n        const now = d.getTime();\n        const timeRemaining = future - now;\n        return timeRemaining;\n    }\n    updateTime = () => {\n        if (this.unMounting) return;\n        // var future = Date.parse(\"December 31, 2019\");\n        let timeRemaining = this.checkTime();\n        let counting;\n        timeRemaining < 0 ? counting = false : counting = true;\n        timeRemaining = Math.abs(timeRemaining);\n        // console.log(timeRemaining)\n        // if (timeRemaining < 1000) {\n        //     return this.setState({\n        //         time: {\n        //             days: \"00\",\n        //             hours: \"00\",\n        //             minutes: \"00\",\n        //             seconds: \"00\"\n        //         },\n        //         counting: false,\n        //         // classes: \"timer-strike_animate\"\n        //     });\n        // }\n        let seconds = Math.floor(timeRemaining / 1000) % 60;\n        let minutes = Math.floor((timeRemaining / 1000) / 60) % 60;\n        let hours = Math.floor((timeRemaining / 1000) / 3600) % 24;\n        let days = Math.floor(((timeRemaining / 1000) / 3600) / 24);\n        days = days < 10 ? '0' + days : days.toString();\n        hours = hours < 10 ? '0' + hours : hours.toString();\n        minutes = minutes < 10 ? '0' + minutes : minutes.toString();\n        seconds = seconds < 10 ? '0' + seconds : seconds.toString();\n        this.setState({\n            time: {\n                days, hours, minutes, seconds\n            },\n            counting: counting\n        });\n        requestAnimationFrame(this.updateTime);\n    }\n\n    componentWillUnmount() {\n        this.unMounting = true;\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                {\n                    this.state.counting\n                    ? <span className={this.state.classes}>\n                        Due in:\n                        {` ${this.state.time.days}:` +\n                            `${this.state.time.hours}:` +\n                            `${this.state.time.minutes}:` +\n                            `${this.state.time.seconds}`}\n                    </span>\n                    : <span className=\"timer-strike\">\n                        Past Due:\n                        {` ${this.state.time.days}:` +\n                            `${this.state.time.hours}:` +\n                            `${this.state.time.minutes}:` +\n                            `${this.state.time.seconds}`}\n                    </span>\n                    // : <span className=\"timer-strike\">00:00:00:00</span>\n                }\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Timer;","import React from 'react';\nimport './timedue.css'\n\nconst TimeDue = props => {\n    const ms = props.date;\n    const now = new Date();\n    const nowMs = now.getTime();\n    const diff = nowMs - ms;\n    const d = new Date(ms);\n    return (\n        <span className={diff > 0 ? \"timedue\" : \"\"}>Due: {d.toLocaleString()}</span>\n    )\n};\n\nexport default TimeDue;","import React, { Component } from 'react';\n\nclass TimeStamp extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            created: \"\",\n            updated: \"\",\n            completed: \"\",\n            timeStatus: \"\"\n        }\n\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps !== this.props) {\n            this.updateTime();\n        }\n    }\n\n    componentDidMount() {\n        this.updateTime();\n    }\n\n    updateTime = () => {\n        const updated = new Date(this.props.updated);\n        const created = new Date(this.props.created);\n        const completed = new Date(this.props.completed);\n        if (this.props.completed) {\n            this.setState({\n                timeStatus: \"completed\",\n                completed: \"Completed: \" + completed.toLocaleString()\n            })\n        } else if (this.props.updated === this.props.created) {\n            this.setState({\n                timeStatus: \"created\",\n                created: \"Created: \" + created.toLocaleString()\n            });\n        } else {\n            this.setState({\n                timeStatus: \"updated\",\n                updated: \"Updated: \" + updated.toLocaleString(),\n                created: \"Created: \" + created.toLocaleString()\n            });\n        }\n    }\n\n    renderSpans = () => {\n        //if created\n        switch(this.state.timeStatus) {\n            case 'completed':\n                return (\n                    <span>{this.state.completed}</span>\n                )\n            case 'created':\n                return (\n                    <span>{this.state.created}</span>\n                )\n            case 'updated':\n                return (\n                    <React.Fragment>\n                        {/* <span>{this.state.created}</span><br/> */}\n                        <span>{this.state.updated}</span>\n                    </React.Fragment>\n                )\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                {this.renderSpans()}\n            </React.Fragment>\n        )\n    }\n}\n\nexport default TimeStamp;","import React, { Component } from 'react';\n\nclass TimerCompleted extends Component {\n    constructor(props) {\n        super(props);\n        const completed = props.completed;\n        const updated = props.updated;\n        const completionTime = completed - updated;\n        let seconds = Math.round(completionTime / 1000) % 60;\n        let minutes = Math.floor((completionTime / 1000) / 60) % 60;\n        let hours = Math.floor((completionTime / 1000) / 3600) % 24;\n        let days = Math.floor(((completionTime / 1000) / 3600) / 24);\n        this.days = days < 10 ? '0' + days : days.toString();\n        this.hours = hours < 10 ? '0' + hours : hours.toString();\n        this.minutes = minutes < 10 ? '0' + minutes : minutes.toString();\n        this.seconds = seconds < 10 ? '0' + seconds : seconds.toString();\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <span>{`Completed in: ${this.days}:${this.hours}:${this.minutes}:${this.seconds}`}</span><br/>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default TimerCompleted;","import React, { Component } from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { withTheme } from '@material-ui/core/styles';\nimport { withFirebase } from '../Firebase';\nimport Timer from './timer';\nimport TimeDue from './timedue';\nimport TimeStamp from './timestamp';\nimport TimerCompleted from './timercompleted';\nimport './goalitem.css';\n\nclass GoalItem extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            anchorEl: null,\n            timeView: true\n        };\n    }\n    // componentDidUpdate() {\n    //     console.log(\"I rendered with\", {props: this.props})\n    // }\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCompleteToggle = () => {\n        const d = new Date();\n        const ms = d.getTime();\n        this.props.firebase.goalsRef.doc(this.props.goal.id).update({\n            completed: !this.props.goal.completed,\n            completedAt: !this.props.goal.completed ? ms : null\n        });\n    }\n    triggerModal = () => {\n        this.props.toggleModal({\n            goal: this.props.goal.goal,\n            date: this.props.goal.date,\n            id: this.props.goal.id,\n            // closeMenu: this.handleClose\n        })\n        this.handleClose();\n    }\n    handleDelete = () =>{\n        this.props.firebase.goalsRef.doc(this.props.goal.id).delete();\n        this.handleClose();\n    }\n\n    toggleTimeView = () => {\n        this.setState({\n            timeView: !this.state.timeView\n        })\n    }\n\n    render() {\n        const { anchorEl } = this.state;\n        const open = Boolean(anchorEl);\n        return (\n            <ListItem button onClick={this.toggleTimeView}>\n                {\n                    this.state.timeView\n                    ? <ListItemText\n                    // className={}\n                    primary={this.props.goal.goal}\n                    secondary={this.props.goal.completed\n                        ? <TimeStamp completed={this.props.goal.completedAt} />\n                        : <Timer date={this.props.goal.date} />\n                    }\n                    primaryTypographyProps={{\n                        style: { width: '80%' },\n                        className: this.props.goal.completed ? \"goalitem-strike\" : \"\"\n                    }}\n                    secondaryTypographyProps={{ color: 'error' }}\n                    />\n                    : <ListItemText\n                    // className={this.props.goal.completed ? \"goalitem-strike\" : \"\"}\n                    primary={this.props.goal.goal}\n                    secondary={this.props.goal.completed\n                        ? <React.Fragment>\n                            {/* <TimeStamp completed={this.props.goal.completedAt} /><br/> */}\n                            {/* <TimeStamp updated={this.props.goal.updatedAt} created={this.props.goal.createdAt}/><br/> */}\n                            <TimerCompleted completed={this.props.goal.completedAt} updated={this.props.goal.updatedAt}/>\n                        </React.Fragment>\n                        :<React.Fragment>\n                            {/* <TimeStamp updated={this.props.goal.updatedAt} created={this.props.goal.createdAt}/><br/> */}\n                            <TimeDue date={this.props.goal.date}/><br/>\n                        </React.Fragment>\n                    }\n                    primaryTypographyProps={{\n                        style: { width: '80%' },\n                        className: this.props.goal.completed ? \"goalitem-strike\" : \"\"\n                    }}\n                    secondaryTypographyProps={{ color: 'error' }}\n                    />\n\n                }\n                <ListItemSecondaryAction>\n                    <IconButton onClick={this.handleCompleteToggle}>\n                        {\n                            this.props.goal.completed\n                            ? <CheckBoxIcon color=\"secondary\"/>\n                            : <CheckBoxOutlineBlankIcon />\n                        }\n                    </IconButton>\n                    <IconButton onClick={this.handleMenuClick}>\n                        <MoreVertIcon />\n                    </IconButton>\n                    <Menu\n                        id=\"long-menu\"\n                        anchorEl={anchorEl}\n                        open={open}\n                        onClose={this.handleClose}\n                    >\n                        {\n                            !this.props.goal.completed &&\n                            <MenuItem onClick={this.triggerModal}>\n                                <ListItemIcon>\n                                    <EditIcon color={'inherit'}/>\n                                </ListItemIcon>\n                                <ListItemText inset primary=\"Edit\" />\n                            </MenuItem>\n                        }\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon nativeColor={this.props.theme.palette.warn[500]}/>\n                            </ListItemIcon>\n                            <ListItemText inset primary=\"Delete\" />\n                        </MenuItem>\n\n                    </Menu>\n                </ListItemSecondaryAction>\n            </ListItem>\n        )\n    }\n}\n\nexport default withTheme()(withFirebase(GoalItem));","import React, {Component} from 'react'\nimport Chip from '@material-ui/core/Chip';\n\nclass Clock extends Component {\n    constructor(props) {\n        super(props);\n        this.d = new Date();\n        this.options = {\n            weekday: 'short',\n            year: 'numeric',\n            month: 'numeric',\n            day: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            second: 'numeric',\n        }\n        this.state = {\n            time: this.d.toLocaleString('en-US', this.options)\n        }\n    }\n\n    componentDidMount() {\n        this.update();\n    }\n\n    componentWillUnmount() {\n        this.unmounting = true;\n    }\n\n    update = () => {\n        if(this.unmounting) return;\n        const d = new Date();\n        const newTime = d.toLocaleString('en-US', this.options);\n        if(newTime !== this.state.time) {\n            this.setState({\n                time: newTime\n            })\n        }\n        requestAnimationFrame(this.update);\n    }\n\n    render() {\n        return (\n            <Chip color=\"secondary\" label={this.state.time} />\n        )\n    }\n}\n\nexport default Clock;","import React from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport './centeredModal.css';\n\nexport default ({children: Children, ...rest}) => (\n    <Modal {...rest} className=\"centeredModal\">{Children}</Modal>\n);\n","import Dashboard from './dashboard';\nimport Goalform from './goalform';\nimport CenteredModal from './centeredModal';\n\nexport { Goalform, CenteredModal };\nexport default Dashboard;","import React from 'react';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport List from '@material-ui/core/List';\nimport GoalForm from './goalform';\nimport GoalItem from './goalitem';\nimport Clock from './clock';\nimport CenteredModal from './centeredModal';\nimport { withFirebase } from '../Firebase';\nimport './dashboard.css';\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            goalModalOpen: false,\n            modalState: undefined,\n            goals: []\n        };\n    }\n    componentDidMount = () => {\n        this.props.firebase.db.collection(`users/${this.props.user.uid}/goals`)\n        .onSnapshot((snapshot) => {\n            const goals = [];\n            snapshot.forEach(doc => goals.push({id: doc.id, ...doc.data()}))\n            this.setState({goals});\n        })\n    }\n    toggleModal = modalState => {\n        this.setState({\n            goalModalOpen: !this.state.goalModalOpen,\n            modalState: modalState && modalState.id ? modalState : null\n        })\n    }\n    render() {\n        return (\n            <div className=\"dash\">\n                <div className=\"dash-clock\">\n                    <Clock/>\n                </div>\n                <List>\n                    {\n                        this.state.goals\n                        .sort((goalA, goalB) => {\n                            const diff = goalA.date - goalB.date\n                            if (goalA.completed === goalB.completed) {\n                                return diff;\n                            } else if (goalA.completed) {\n                                return 1;\n                            } else {\n                                return -1;\n                            }\n                        })\n                        .map(goal => (\n                            <GoalItem key={goal.id} goal={goal} toggleModal={this.toggleModal}/>\n                        ))\n                    }\n                </List>\n                <CenteredModal open={this.state.goalModalOpen} \n                    onClose={this.toggleModal}\n                >\n                    <GoalForm toggleModal={this.toggleModal} initialState={this.state.modalState}/>\n                </CenteredModal>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <Fab color=\"secondary\" \n                    variant=\"extended\" \n                    aria-label=\"Add\" \n                    id=\"dash-addBtn\"\n                    onClick={this.toggleModal}\n                >\n                    <AddIcon />\n                </Fab>\n            </div>\n        );\n    }\n}\n\nexport default withFirebase(Dashboard);","import React, { Component } from 'react'\n\nclass Settings extends Component {\n    render() {\n        return (\n            <h1>Settings Works!</h1>\n        )\n    }\n}\n\nexport default Settings;","import React, { Component } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid'\nimport './about.css';\n\nclass About extends Component {\n    render() {\n        return (\n            <div className=\"about\">\n                <Grid container justify={\"center\"} alignItems={\"center\"}>\n                    <Grid item xs={12} lg={8}>\n                        <Card className=\"about-card\">\n                            <CardContent>\n                                <Typography variant={\"h4\"} align={\"center\"}>\n                                    Thanks for using Goaler!\n                                </Typography>\n                                <br/>\n                                <Typography variant={\"h5\"} align={\"center\"}>\n                                    Contact me <a href=\"mailto:leewarrick@gmail.com\" rel=\"noopener noreferrer\" target=\"_BLANK\">here</a>\n                                </Typography>\n                                <br/>\n                                <Typography variant={\"h6\"} align={\"center\"}>\n                                    © Lee Warrick 2019. All Rights Reserved.\n                                </Typography>\n                            </CardContent> \n                        </Card>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default About;","import React, { Component } from 'react';\nimport { withFirebase } from './components/Firebase';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport Drawer from '@material-ui/core/Drawer';\nimport Login from './components/login/login';\nimport Loading from './components/loading/loading';\nimport Header from './components/header/header';\nimport MainMenu from './components/mainmenu/mainmenu';\nimport Dashboard from './components/dashboard/';\nimport Settings from './components/settings/settings';\nimport About from './components/about/about';\nimport './App.css';\n\nconst PrivateRoute = ({component: Component, user, ...rest}) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => user\n        ? <Component {...props} {...rest} user={user} />\n        : <Redirect to={{pathname: '/login', state: {from: props.location}}} />}\n        // : <Redirect to='/login' />}\n    />\n  )\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      loading: true,\n      from: null,\n      drawer: false\n    }\n  }\n\n  componentDidMount = () => {\n    this.props.firebase.auth.onAuthStateChanged(user => {\n      if (user) {\n        this.setState({ user: user, loading: false })\n        this.props.firebase.initializeUser(user.uid);\n      } else {\n        this.setState({ user: null, loading: false });\n      }\n    })\n  }\n\n  // writeTestData = () => {\n  //   this.props.firebase.goalsRef.add({name: \"banana Johnson\"})\n  // }\n\n  signIn = async () => {\n    const result = await this.props.firebase.signIn();\n    this.setState({ user: result.user });\n  }\n\n  signOut = () => {\n    this.props.firebase.logout();\n    this.toggleDrawer();\n  }\n\n  toggleDrawer = () => {\n    this.setState({\n      drawer: !this.state.drawer\n    })\n  }\n\n  render() {\n    return (\n      <Router basename=\"/Goaler\">\n        <Loading status={this.state.loading}>\n          <div className=\"App\">\n          <Header user={this.state.user} login={this.signIn} toggleDrawer={this.toggleDrawer}/>\n          <Drawer anchor={\"right\"} open={this.state.drawer} onClose={this.toggleDrawer}>\n            <MainMenu logout={this.signOut} toggleDrawer={this.toggleDrawer}/>\n          </Drawer>\n          <Route path=\"/login\" render={(props)=> <Login {...props} user={this.state.user} />} />\n          <PrivateRoute user={this.state.user} exact path='/about' component={About}/>\n          <PrivateRoute user={this.state.user} exact path='/' component={Dashboard}/>\n          <PrivateRoute user={this.state.user} exact path='/settings' component={Settings}/>\n          {/* <Link to=\"/private\">Banana</Link>\n          <Link to=\"/private/2\">Banana2</Link>\n          <PrivateRoute user={this.state.user} exact path='/private' component={Banana} text=\"React Router\"/>\n          <PrivateRoute user={this.state.user} path='/private/:num' component={Banana} text=\"React Router\" /> */}\n          </div>\n        </Loading>\n      </Router>\n    );\n  }\n}\n\nexport default withFirebase(App);\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport purple from '@material-ui/core/colors/purple';\nimport orange from '@material-ui/core/colors/orange';\nimport red from '@material-ui/core/colors/red';\n\n// All the following keys are optional.\n// We try our best to provide a great default value.\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n        main: blue[900]\n    },\n    secondary: {\n        main: purple[400],\n      },\n    error: orange,\n    warn: red,\n    // Used by `getContrastText()` to maximize the contrast between the background and\n    // the text.\n    contrastThreshold: 3,\n    // Used to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: 0.5,\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nexport default theme;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport theme from './theme';\nimport 'typeface-roboto';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n<FirebaseContext.Provider value={new Firebase()}>\n    <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <App />\n    </MuiThemeProvider>\n</FirebaseContext.Provider>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}