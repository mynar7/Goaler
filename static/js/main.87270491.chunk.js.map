{"version":3,"sources":["components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/login/login.jsx","components/loading/loading.jsx","components/header/header.jsx","components/dashboard/goalform.jsx","components/dashboard/timer.jsx","components/dashboard/timedue.jsx","components/dashboard/goalitem.jsx","components/dashboard/centeredModal.jsx","components/dashboard/index.js","components/dashboard/dashboard.jsx","App.js","theme.js","serviceWorker.js","index.js"],"names":["FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","components_Firebase","Firebase","_this","this","classCallCheck","signIn","provider","auth","GoogleAuthProvider","signInWithRedirect","catch","err","console","log","logout","signOut","redirect","getRedirectResult","initializeUser","uid","goalsRef","db","collection","concat","app","initializeApp","firestore","settings","timestampsInSnapshots","Login","user","history","push","Loading","Fragment","status","className","CircularProgress_default","color","size","children","Header","AppBar_default","position","Toolbar_default","Link","to","Button_default","aria-label","Beenhere_default","Typography_default","variant","onClick","login","GoalForm","possibleConstructorReturn","getPrototypeOf","call","handleChange","name","event","setState","defineProperty","target","value","validate","nameErr","nameHelper","dateErr","dateHelper","timeErr","timeHelper","state","date","time","now","Date","dateArgs","split","map","str","Number","datetime","construct","toConsumableArray","getTime","toDateString","handleSubmit","d","initialState","doc","id","update","goal","completed","then","toggleModal","add","addSixtySeconds","leadingZero","num","today","getFullYear","getMonth","getDate","maxDate","currentTime","getHours","getMinutes","milliseconds","prevProps","prevState","Card_default","CardHeader_default","avatar","Avatar_default","style","backgroundColor","theme","palette","secondary","main","text","primary","AddAlarm_default","title","action","IconButton_default","tabIndex","Close_default","CardContent_default","Grid_default","container","spacing","item","xs","TextField_default","label","placeholder","error","onChange","fullWidth","margin","helperText","md","type","InputLabelProps","shrink","InputProps","inputProps","min","max","CardActions_default","withTheme","Timer","checkTime","updateTime","unMounting","timeRemaining","days","hours","minutes","seconds","counting","Math","floor","toString","requestAnimationFrame","classes","TimeDue","ms","diff","toLocaleString","GoalItem","handleMenuClick","anchorEl","currentTarget","handleClose","handleCompleteToggle","triggerModal","handleDelete","delete","toggleTimeView","timeView","open","Boolean","ListItem_default","button","ListItemText_default","dashboard_timer","primaryTypographyProps","width","secondaryTypographyProps","dashboard_timedue","ListItemSecondaryAction_default","CheckBox_default","CheckBoxOutlineBlank_default","MoreVert_default","Menu_default","onClose","MenuItem_default","ListItemIcon_default","Edit_default","inset","Delete_default","nativeColor","warn","dashboard_centeredModal","_ref","Children","rest","objectWithoutProperties","Modal_default","Dashboard","componentDidMount","onSnapshot","snapshot","goals","forEach","objectSpread","data","modalState","goalModalOpen","undefined","_this2","List_default","sort","goalA","goalB","index","dashboard_goalitem","key","dashboard_goalform","Fab_default","Add_default","PrivateRoute","component","Route","render","Redirect","pathname","from","location","App","onAuthStateChanged","loading","asyncToGenerator","regenerator_default","mark","_callee","result","wrap","_context","prev","next","sent","stop","BrowserRouter","basename","loading_loading","header_header","path","App_PrivateRoute","exact","createMuiTheme","blue","purple","orange","red","contrastThreshold","tonalOffset","typography","useNextVariants","window","hostname","match","ReactDOM","context","Provider","styles","CssBaseline_default","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.87270491.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n    <FirebaseContext.Consumer>\r\n        {firebase => <Component {...props} firebase={firebase} />}\r\n    </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default FirebaseContext;","import app, { auth } from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n// Initialize Firebase\r\nconst config = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_apiKey,\r\n    authDomain: process.env.REACT_APP_FIREBASE_authDomain,\r\n    databaseURL: process.env.REACT_APP_FIREBASE_databaseURL,\r\n    projectId: process.env.REACT_APP_FIREBASE_projectId,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_storageBucket,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_messagingSenderId\r\n};\r\n\r\nclass Firebase {\r\n    constructor() {\r\n        app.initializeApp(config);\r\n        this.auth = app.auth();\r\n        this.db = app.firestore();\r\n        const settings = {/* your settings... */ timestampsInSnapshots: true};\r\n        this.db.settings(settings);\r\n        // this.userRef = null;\r\n        this.goalsRef = null;\r\n    }\r\n    signIn = () => {\r\n        const provider = new auth.GoogleAuthProvider();\r\n        return this.auth.signInWithRedirect(provider).catch(err => console.log(err));\r\n        // return this.auth.signInWithPopup(provider).catch(err => console.log(err));\r\n    }\r\n    logout = () => {\r\n        return this.auth.signOut();\r\n    }\r\n    redirect = () => {\r\n        return this.auth.getRedirectResult();\r\n    }\r\n    initializeUser = (uid) => {\r\n        this.goalsRef = this.db.collection(`users/${uid}/goals`);\r\n        // this.db.collection(`users/${uid}/goals/${goalid}/subgoals`);\r\n        // this.goalsRef = this.userRef.collection(\"goals\");\r\n    }\r\n}\r\n\r\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\r\nimport Firebase from './firebase';\r\n\r\nexport default Firebase;\r\n\r\nexport { FirebaseContext, withFirebase };","import React, { Component } from 'react';\r\n\r\nclass Login extends Component {\r\n    componentDidMount() {\r\n        console.log(this.props)\r\n        if (this.props.user) {\r\n            this.props.history.push('/')\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <h2>Login works!</h2>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport './loading.css';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nclass Loading extends Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n            {\r\n                this.props.status ? \r\n                    <div className=\"loading\">\r\n                        <CircularProgress color=\"secondary\" size={200}/>\r\n                    </div> :\r\n                    this.props.children\r\n            }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Loading;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuIcon from '@material-ui/icons/Beenhere';\r\nimport './header.css';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <header className=\"header\">\r\n                <AppBar position=\"static\">\r\n                    <Toolbar className=\"row\">\r\n                        <Link to=\"/\">\r\n                            <Button color=\"inherit\" aria-label=\"Menu\">\r\n                                <MenuIcon />\r\n                                <Typography variant=\"h6\" color=\"inherit\">\r\n                                    Goaler\r\n                                </Typography>\r\n                            </Button>\r\n                        </Link>\r\n                        <div>\r\n                        {\r\n                            this.props.user ?\r\n                            <Button color=\"inherit\" onClick={this.props.logout}>Sign Out</Button> :\r\n                            <Button color=\"inherit\" onClick={this.props.login}>Sign In</Button>\r\n                        }\r\n                        </div>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Icon from '@material-ui/icons/AddAlarm'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withTheme } from '@material-ui/core/styles'\r\nimport { withFirebase } from '../Firebase';\r\nimport './goalform.css';\r\n\r\nclass GoalForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.now = new Date();\r\n        const addSixtySeconds = new Date(this.now.getTime() + 60000);\r\n        const leadingZero = num => num < 10 ? \"0\" + num : num\r\n        this.today = `${this.now.getFullYear()}-${leadingZero(this.now.getMonth() + 1)}-${leadingZero(this.now.getDate())}`\r\n        this.maxDate = `${this.now.getFullYear() + 10}-${leadingZero(this.now.getMonth() + 1)}-${leadingZero(this.now.getDate())}`\r\n        this.currentTime = `${leadingZero(addSixtySeconds.getHours())}:${leadingZero(addSixtySeconds.getMinutes())}`;\r\n        let initialState;\r\n        if (this.props.initialState) {\r\n            const milliseconds = this.props.initialState.date;\r\n            let date = this.today;\r\n            let time = this.currentTime;\r\n            if (milliseconds > this.now.getTime()) {\r\n                const d = new Date(milliseconds);\r\n                date = `${d.getFullYear()}-${leadingZero(d.getMonth() + 1)}-${leadingZero(d.getDate())}`\r\n                time = `${leadingZero(d.getHours())}:${leadingZero(d.getMinutes())}`;\r\n            }\r\n            initialState = {\r\n                name: this.props.initialState.goal,\r\n                nameErr: false,\r\n                nameHelper: \"\",\r\n                date,\r\n                dateErr: false,\r\n                dateHelper: \"\",\r\n                time,\r\n                timeErr: false,\r\n                timeHelper: \"\",\r\n            }\r\n        } else {\r\n            initialState = {\r\n                name: \"\",\r\n                nameErr: false,\r\n                nameHelper: \"\",\r\n                date: this.today,\r\n                dateErr: false,\r\n                dateHelper: \"\",\r\n                time: this.currentTime,\r\n                timeErr: false,\r\n                timeHelper: \"\",\r\n            }\r\n        }\r\n        this.state = initialState;\r\n    }\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.name !== this.state.name ||\r\n            prevState.date !== this.state.date ||\r\n            prevState.time !== this.state.time) {\r\n                this.validate();\r\n            }\r\n    }\r\n\r\n    validate = () => {\r\n        //check if name\r\n        let nameErr = false;\r\n        let nameHelper = \"\";\r\n        let dateErr = false;\r\n        let dateHelper = \"\";\r\n        let timeErr = false;\r\n        let timeHelper = \"\";\r\n        if (!this.state.name) {\r\n            nameErr = true;\r\n            nameHelper = \"Please set a goal\";\r\n        }\r\n        //check if date\r\n        if (!this.state.date) {\r\n            dateErr = true;\r\n            dateHelper = \"Please set a date\";\r\n        }\r\n        //check if time\r\n        if (!this.state.time) {\r\n            timeErr = true;\r\n            timeHelper = \"Please set a time\";\r\n        }\r\n        //get current date and time when form submits\r\n        const now = new Date();\r\n        const dateArgs = `${this.state.date} ${this.state.time}`.split(/[- :]/).map(str => Number(str));\r\n        dateArgs[1]--; //month is 0 indexed\r\n        const datetime = new Date(...dateArgs);\r\n        // check if time/date is > now\r\n        if (datetime.getTime() < now.getTime()) {\r\n            if (datetime.toDateString() !== now.toDateString()) {\r\n                dateErr = true; \r\n                dateHelper = \"Date must be in future\";\r\n            } else  {\r\n                timeErr = true;\r\n                timeHelper = \"Time must be in future\";\r\n            }\r\n        } \r\n        this.setState({\r\n            nameErr,\r\n            nameHelper,\r\n            dateErr,\r\n            dateHelper,\r\n            timeErr,\r\n            timeHelper,\r\n        })\r\n        if (timeErr || dateErr || nameErr) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if (this.validate()) return;\r\n        const dateArgs = `${this.state.date} ${this.state.time}`.split(/[- :]/)\r\n        .map(str => Number(str));\r\n        dateArgs[1]--; //month is 0 indexed\r\n        const d = new Date(...dateArgs);\r\n        if (this.props.initialState) {\r\n            this.props.firebase.goalsRef.doc(this.props.initialState.id)\r\n            .update({\r\n                goal: this.state.name,\r\n                date: d.getTime(),\r\n                completed: false\r\n            })\r\n            .then(() => {\r\n                this.props.toggleModal();\r\n                // this.props.initialState.closeMenu();\r\n            })\r\n        } else {\r\n            this.props.firebase.goalsRef.add({\r\n                goal: this.state.name,\r\n                date: d.getTime(),\r\n                completed: false\r\n            })\r\n            .then(() => {\r\n                this.props.toggleModal();\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card className=\"goalform\">\r\n                <CardHeader\r\n                    avatar={\r\n                        <Avatar \r\n                        style={{\r\n                            backgroundColor: this.props.theme.palette.secondary.main,\r\n                            color: this.props.theme.palette.text.primary\r\n                        }}>\r\n                            <Icon />\r\n                        </Avatar>\r\n                    }\r\n                    title=\"Add a goal\"\r\n                    // subheader=\"With Chocolates\"\r\n                    action={\r\n                        <IconButton onClick={this.props.toggleModal} tabIndex={-1}>\r\n                            <CloseIcon/>\r\n                        </IconButton>\r\n                    }\r\n                />\r\n                <CardContent>\r\n                    <Grid container spacing={0}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                label=\"Goal\"\r\n                                placeholder=\"Make it a good one!\"\r\n                                error={this.state.nameErr}\r\n                                value={this.state.name}\r\n                                onChange={this.handleChange('name')}\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                helperText={this.state.nameHelper}\r\n                                />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"Due Date\"\r\n                                error={this.state.dateErr}\r\n                                type=\"date\"\r\n                                value={this.state.date}\r\n                                onChange={this.handleChange('date')}\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                helperText={this.state.dateHelper}\r\n                                InputProps={{\r\n                                    inputProps: {\r\n                                        min: this.today,\r\n                                        max: this.maxDate\r\n                                    }\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"Due Time\"\r\n                                error={this.state.timeErr}\r\n                                type=\"time\"\r\n                                value={this.state.time}\r\n                                onChange={this.handleChange('time')}\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                                helperText={this.state.timeHelper}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n                <CardActions className=\"row right\">\r\n                    <Button onClick={this.handleSubmit}>{this.props.initialState ? \"Update\" : \"Add\"} Goal</Button>\r\n                    <Button onClick={this.props.toggleModal}>Cancel</Button>\r\n                </CardActions>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withTheme()(withFirebase(GoalForm));","import React from 'react';\r\nimport './timer.css';\r\nclass Timer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.unMounting = false;\r\n        const timeRemaining = this.checkTime();\r\n        this.state = {\r\n            time: {},\r\n            counting: timeRemaining > 0 ? true : false,\r\n            classes: \"\"\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.date !== this.props.date) {\r\n            this.updateTime();\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.date && this.state.counting) {\r\n            this.updateTime();\r\n        }\r\n    }\r\n    checkTime = () => {\r\n        const future = this.props.date;\r\n        const d = new Date();\r\n        const now = d.getTime();\r\n        const timeRemaining = future - now;\r\n        return timeRemaining;\r\n    }\r\n    updateTime = () => {\r\n        if (this.unMounting) return;\r\n        // var future = Date.parse(\"December 31, 2019\");\r\n        const timeRemaining = this.checkTime();\r\n        if (timeRemaining < 1000) {\r\n            return this.setState({\r\n                time: {\r\n                    days: \"00\",\r\n                    hours: \"00\",\r\n                    minutes: \"00\",\r\n                    seconds: \"00\"\r\n                },\r\n                counting: false,\r\n                // classes: \"timer-strike_animate\"\r\n            });\r\n        }\r\n        let seconds = Math.floor(timeRemaining / 1000) % 60;\r\n        let minutes = Math.floor((timeRemaining / 1000) / 60) % 60;\r\n        let hours = Math.floor((timeRemaining / 1000) / 3600) % 24;\r\n        let days = Math.floor(((timeRemaining / 1000) / 3600) / 24);\r\n        days = days < 10 ? '0' + days : days.toString();\r\n        hours = hours < 10 ? '0' + hours : hours.toString();\r\n        minutes = minutes < 10 ? '0' + minutes : minutes.toString();\r\n        seconds = seconds < 10 ? '0' + seconds : seconds.toString();\r\n        this.setState({\r\n            time: {\r\n                days, hours, minutes, seconds\r\n            },\r\n            counting: true\r\n        });\r\n        requestAnimationFrame(this.updateTime);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unMounting = true;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {\r\n                    this.state.counting\r\n                    ? <span className={this.state.classes}>\r\n                        {`${this.state.time.days}:` +\r\n                            `${this.state.time.hours}:` +\r\n                            `${this.state.time.minutes}:` +\r\n                            `${this.state.time.seconds}`}\r\n                    </span>\r\n                    : <span className=\"timer-strike\">00:00:00:00</span>\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Timer;","import React from 'react';\r\nimport './timedue.css'\r\n\r\nconst TimeDue = props => {\r\n    const ms = props.date;\r\n    const now = new Date();\r\n    const nowMs = now.getTime();\r\n    const diff = nowMs - ms;\r\n    const d = new Date(ms);\r\n    return (\r\n        <span className={diff > 0 ? \"timedue\" : \"\"}>Due: {d.toLocaleString()}</span>\r\n    )\r\n};\r\n\r\nexport default TimeDue;","import React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { withTheme } from '@material-ui/core/styles';\nimport { withFirebase } from '../Firebase';\nimport Timer from './timer';\nimport TimeDue from './timedue';\nimport './goalitem.css';\n\nclass GoalItem extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            anchorEl: null,\n            timeView: true\n        };\n    }\n    // componentDidUpdate() {\n    //     console.log(\"I rendered with\", {props: this.props})\n    // }\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCompleteToggle = () =>{\n        this.props.firebase.goalsRef.doc(this.props.goal.id).update({\n            completed: !this.props.goal.completed\n        });\n    }\n    triggerModal = () => {\n        this.props.toggleModal({\n            goal: this.props.goal.goal,\n            date: this.props.goal.date,\n            id: this.props.goal.id,\n            // closeMenu: this.handleClose\n        })\n        this.handleClose();\n    }\n    handleDelete = () =>{\n        this.props.firebase.goalsRef.doc(this.props.goal.id).delete();\n        this.handleClose();\n    }\n\n    toggleTimeView = () => {\n        this.setState({\n            timeView: !this.state.timeView\n        })\n    }\n\n    render() {\n        const { anchorEl } = this.state;\n        const open = Boolean(anchorEl);\n        return (\n            <ListItem button onClick={this.toggleTimeView}>\n                {\n                    this.state.timeView\n                    ? <ListItemText\n                    className={this.props.goal.completed ? \"goalitem-strike\" : \"\"}\n                    primary={`${this.props.goal.goal}`}\n                    secondary={!this.props.goal.completed && <Timer date={this.props.goal.date} />}\n                    primaryTypographyProps={{ \n                        style: { width: '80%' }\n                    }}\n                    secondaryTypographyProps={{ color: 'error' }}\n                    />\n                    : <ListItemText\n                    className={this.props.goal.completed ? \"goalitem-strike\" : \"\"}\n                    primary={`${this.props.goal.goal}`}\n                    secondary={!this.props.goal.completed && <TimeDue date={this.props.goal.date}/>}\n                    primaryTypographyProps={{ \n                        style: { width: '80%' }\n                    }}\n                    secondaryTypographyProps={{ color: 'error' }}\n                    />\n\n                }\n                <ListItemSecondaryAction>\n                    <IconButton onClick={this.handleCompleteToggle}>\n                        {\n                            this.props.goal.completed\n                            ? <CheckBoxIcon color=\"secondary\"/>\n                            : <CheckBoxOutlineBlankIcon />\n                        }\n                    </IconButton>\n                    <IconButton onClick={this.handleMenuClick}>\n                        <MoreVertIcon />\n                    </IconButton>\n                    <Menu\n                        id=\"long-menu\"\n                        anchorEl={anchorEl}\n                        open={open}\n                        onClose={this.handleClose}\n                    >\n                        <MenuItem onClick={this.triggerModal}>\n                            <ListItemIcon>\n                                <EditIcon color={'inherit'}/>\n                            </ListItemIcon>\n                            <ListItemText inset primary=\"Edit\" />\n                        </MenuItem>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon nativeColor={this.props.theme.palette.warn[500]}/>\n                            </ListItemIcon>\n                            <ListItemText inset primary=\"Delete\" />\n                        </MenuItem>\n                        \n                    </Menu>\n                </ListItemSecondaryAction>\n            </ListItem>\n        )\n    }\n}\n\nexport default withTheme()(withFirebase(GoalItem));","import React from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport './centeredModal.css';\r\n\r\nexport default ({children: Children, ...rest}) => (\r\n    <Modal {...rest} className=\"centeredModal\">{Children}</Modal>\r\n);\r\n","import Dashboard from './dashboard';\r\nimport Goalform from './goalform';\r\nimport CenteredModal from './centeredModal';\r\n\r\nexport { Goalform, CenteredModal };\r\nexport default Dashboard;","import React from 'react';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport List from '@material-ui/core/List';\r\nimport GoalForm from './goalform';\r\nimport GoalItem from './goalitem';\r\nimport CenteredModal from './centeredModal';\r\nimport { withFirebase } from '../Firebase';\r\nimport './dashboard.css';\r\n\r\nclass Dashboard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            goalModalOpen: false,\r\n            modalState: undefined,\r\n            goals: []\r\n        };\r\n    }\r\n    componentDidMount = () => {\r\n        this.props.firebase.db.collection(`users/${this.props.user.uid}/goals`)\r\n        .onSnapshot((snapshot) => {\r\n            const goals = [];\r\n            snapshot.forEach(doc => goals.push({id: doc.id, ...doc.data()}))\r\n            this.setState({goals});\r\n        })\r\n    }\r\n    toggleModal = modalState => {\r\n        this.setState({\r\n            goalModalOpen: !this.state.goalModalOpen,\r\n            modalState: modalState && modalState.id ? modalState : null\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"dash\">\r\n                <List>\r\n                    {\r\n                        this.state.goals\r\n                        .sort((goalA, goalB) => {\r\n                            const diff = goalA.date - goalB.date\r\n                            if (goalA.completed === goalB.completed) {\r\n                                return diff;\r\n                            } else if (goalA.completed) {\r\n                                return 1;\r\n                            } else {\r\n                                return -1;\r\n                            }\r\n                        })\r\n                        .map((goal, index) => (\r\n                            <GoalItem key={index} goal={goal} toggleModal={this.toggleModal}/>\r\n                        ))\r\n                    }\r\n                </List>\r\n                <CenteredModal open={this.state.goalModalOpen} \r\n                    onClose={this.toggleModal}\r\n                >\r\n                    <GoalForm toggleModal={this.toggleModal} initialState={this.state.modalState}/>\r\n                </CenteredModal>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <Fab color=\"secondary\" \r\n                    variant=\"extended\" \r\n                    aria-label=\"Add\" \r\n                    id=\"dash-addBtn\"\r\n                    onClick={this.toggleModal}\r\n                >\r\n                    <AddIcon />\r\n                </Fab>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withFirebase(Dashboard);","import React, { Component } from 'react';\nimport { withFirebase } from './components/Firebase';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport Login from './components/login/login';\nimport Loading from './components/loading/loading';\nimport Header from './components/header/header';\nimport Dashboard from './components/dashboard/';\nimport './App.css';\n\nconst PrivateRoute = ({component: Component, user, ...rest}) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => user\n        ? <Component {...props} {...rest} user={user} />\n        : <Redirect to={{pathname: '/login', state: {from: props.location}}} />}\n        // : <Redirect to='/login' />}\n    />\n  )\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      loading: true,\n      from: null\n    }\n  }\n\n  componentDidMount = () => {\n    this.props.firebase.auth.onAuthStateChanged(user => {\n      if (user) {\n        this.setState({ user: user, loading: false })\n        this.props.firebase.initializeUser(user.uid);\n      } else {\n        this.setState({ user: null, loading: false });\n      }\n    })\n  }\n\n  // writeTestData = () => {\n  //   this.props.firebase.goalsRef.add({name: \"banana Johnson\"})\n  // }\n\n  signIn = async () => {\n    const result = await this.props.firebase.signIn();\n    this.setState({ user: result.user });\n  }\n\n  signOut = () => {\n    this.props.firebase.logout();\n  }\n\n  render() {\n    return (\n      <Router basename=\"/Goaler\">\n        <Loading status={this.state.loading}>\n          <div className=\"App\">\n          <Header user={this.state.user} login={this.signIn} logout={this.signOut}/>\n          <Route path=\"/login\" render={(props)=> <Login {...props} user={this.state.user} />} />\n          <PrivateRoute user={this.state.user} exact path='/' component={Dashboard}/>\n          {/* <Link to=\"/private\">Banana</Link>\n          <Link to=\"/private/2\">Banana2</Link>\n          <PrivateRoute user={this.state.user} exact path='/private' component={Banana} text=\"React Router\"/>\n          <PrivateRoute user={this.state.user} path='/private/:num' component={Banana} text=\"React Router\" /> */}\n          </div>\n        </Loading>\n      </Router>\n    );\n  }\n}\n\nexport default withFirebase(App);\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport purple from '@material-ui/core/colors/purple';\nimport orange from '@material-ui/core/colors/orange';\nimport red from '@material-ui/core/colors/red';\n\n// All the following keys are optional.\n// We try our best to provide a great default value.\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n        main: blue[900]\n    },\n    secondary: {\n        main: purple[400],\n      },\n    error: orange,\n    warn: red,\n    // Used by `getContrastText()` to maximize the contrast between the background and\n    // the text.\n    contrastThreshold: 3,\n    // Used to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: 0.5,\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nexport default theme;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport theme from './theme';\nimport 'typeface-roboto';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n<FirebaseContext.Provider value={new Firebase()}>\n    <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <App />\n    </MuiThemeProvider>\n</FirebaseContext.Provider>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}