{"version":3,"sources":["components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/login/login.jsx","components/loading/loading.jsx","components/header/header.jsx","components/dashboard/goalform.jsx","components/dashboard/centeredModal.jsx","components/dashboard/index.js","components/dashboard/dashboard.jsx","App.js","theme.js","serviceWorker.js","index.js"],"names":["FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","components_Firebase","Firebase","_this","this","classCallCheck","signIn","provider","auth","GoogleAuthProvider","signInWithRedirect","catch","err","console","log","logout","signOut","redirect","getRedirectResult","initializeUser","uid","goalsRef","db","collection","concat","app","initializeApp","firestore","settings","timestampsInSnapshots","Login","user","history","push","Loading","Fragment","status","className","CircularProgress_default","color","size","children","Header","AppBar_default","position","Toolbar_default","Link","to","Button_default","aria-label","Beenhere_default","Typography_default","variant","onClick","login","Goalform","possibleConstructorReturn","getPrototypeOf","call","handleChange","name","event","setState","defineProperty","target","value","validate","nameErr","nameHelper","dateErr","dateHelper","timeErr","timeHelper","state","date","time","now","Date","datetime","parse","getTime","toDateString","handleSubmit","d","add","goal","then","closeModal","today","getFullYear","getMonth","getDate","maxDate","currentTime","getHours","getMinutes","prevProps","prevState","Card_default","CardHeader_default","avatar","Avatar_default","style","backgroundColor","theme","palette","secondary","main","text","primary","AddAlarm_default","title","action","IconButton_default","tabIndex","Close_default","CardContent_default","Grid_default","container","spacing","item","xs","TextField_default","label","placeholder","error","onChange","fullWidth","margin","helperText","md","type","InputLabelProps","shrink","InputProps","inputProps","min","max","CardActions_default","withTheme","dashboard_centeredModal","_ref","Children","rest","objectWithoutProperties","Modal_default","Dashboard","componentDidMount","assertThisInitialized","onSnapshot","snapshot","goals","forEach","doc","objectSpread","id","data","toggleModal","goalModalOpen","map","key","align","open","onClose","dashboard_goalform","Fab_default","Add_default","PrivateRoute","component","Route","render","Redirect","pathname","from","location","App","onAuthStateChanged","loading","asyncToGenerator","regenerator_default","mark","_callee","result","wrap","_context","prev","next","sent","stop","_this2","BrowserRouter","basename","loading_loading","header_header","path","App_PrivateRoute","exact","createMuiTheme","blue","purple","red","contrastThreshold","tonalOffset","typography","useNextVariants","Boolean","window","hostname","match","ReactDOM","context","Provider","styles","CssBaseline_default","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b57c36d2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n    <FirebaseContext.Consumer>\r\n        {firebase => <Component {...props} firebase={firebase} />}\r\n    </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default FirebaseContext;","import app, { auth } from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n// Initialize Firebase\r\nconst config = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_apiKey,\r\n    authDomain: process.env.REACT_APP_FIREBASE_authDomain,\r\n    databaseURL: process.env.REACT_APP_FIREBASE_databaseURL,\r\n    projectId: process.env.REACT_APP_FIREBASE_projectId,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_storageBucket,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_messagingSenderId\r\n};\r\n\r\nclass Firebase {\r\n    constructor() {\r\n        app.initializeApp(config);\r\n        this.auth = app.auth();\r\n        this.db = app.firestore();\r\n        const settings = {/* your settings... */ timestampsInSnapshots: true};\r\n        this.db.settings(settings);\r\n        // this.userRef = null;\r\n        this.goalsRef = null;\r\n    }\r\n    signIn = () => {\r\n        const provider = new auth.GoogleAuthProvider();\r\n        return this.auth.signInWithRedirect(provider).catch(err => console.log(err));\r\n        // return this.auth.signInWithPopup(provider).catch(err => console.log(err));\r\n    }\r\n    logout = () => {\r\n        return this.auth.signOut();\r\n    }\r\n    redirect = () => {\r\n        return this.auth.getRedirectResult();\r\n    }\r\n    initializeUser = (uid) => {\r\n        this.goalsRef = this.db.collection(`users/${uid}/goals`);\r\n        // this.db.collection(`users/${uid}/goals/${goalid}/subgoals`);\r\n        // this.goalsRef = this.userRef.collection(\"goals\");\r\n    }\r\n}\r\n\r\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\r\nimport Firebase from './firebase';\r\n\r\nexport default Firebase;\r\n\r\nexport { FirebaseContext, withFirebase };","import React, { Component } from 'react';\r\n\r\nclass Login extends Component {\r\n    componentDidMount() {\r\n        console.log(this.props)\r\n        if (this.props.user) {\r\n            this.props.history.push('/')\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <h2>Login works!</h2>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport './loading.css';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nclass Loading extends Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n            {\r\n                this.props.status ? \r\n                    <div className=\"loading\">\r\n                        <CircularProgress color=\"secondary\" size={200}/>\r\n                    </div> :\r\n                    this.props.children\r\n            }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Loading;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuIcon from '@material-ui/icons/Beenhere';\r\nimport './header.css';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <header className=\"header\">\r\n                <AppBar position=\"static\">\r\n                    <Toolbar className=\"row\">\r\n                        <Link to=\"/\">\r\n                            <Button color=\"inherit\" aria-label=\"Menu\">\r\n                                <MenuIcon />\r\n                                <Typography variant=\"h6\" color=\"inherit\">\r\n                                    Goaler\r\n                                </Typography>\r\n                            </Button>\r\n                        </Link>\r\n                        <div>\r\n                        {\r\n                            this.props.user ?\r\n                            <Button color=\"inherit\" onClick={this.props.logout}>Sign Out</Button> :\r\n                            <Button color=\"inherit\" onClick={this.props.login}>Sign In</Button>\r\n                        }\r\n                        </div>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Icon from '@material-ui/icons/AddAlarm'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withTheme } from '@material-ui/core/styles'\r\nimport { withFirebase } from '../Firebase';\r\nimport './goalform.css';\r\n\r\nclass Goalform extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(props)\r\n        this.now = new Date();\r\n        this.today = `${this.now.getFullYear()}-${this.now.getMonth() + 1}-${this.now.getDate()}`\r\n        this.maxDate = `${this.now.getFullYear() + 10}-${this.now.getMonth() + 1}-${this.now.getDate()}`\r\n        this.currentTime = `${this.now.getHours() < 10 ? '0' + this.now.getHours() : this.now.getHours()}:${(this.now.getMinutes() + 1) < 10 ? '0' + (this.now.getMinutes() + 1) : this.now.getMinutes()  + 1}`\r\n        this.state = {\r\n            name: \"\",\r\n            nameErr: false,\r\n            nameHelper: \"\",\r\n            date: this.today,\r\n            dateErr: false,\r\n            dateHelper: \"\",\r\n            time: this.currentTime,\r\n            timeErr: false,\r\n            timeHelper: \"\",\r\n        }\r\n    }\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.name !== this.state.name ||\r\n            prevState.date !== this.state.date ||\r\n            prevState.time !== this.state.time) {\r\n                this.validate();\r\n            }\r\n    }\r\n\r\n    validate = () => {\r\n        //check if name\r\n        let nameErr = false;\r\n        let nameHelper = \"\";\r\n        let dateErr = false;\r\n        let dateHelper = \"\";\r\n        let timeErr = false;\r\n        let timeHelper = \"\";\r\n        if (!this.state.name) {\r\n            nameErr = true;\r\n            nameHelper = \"Please set a goal\";\r\n        }\r\n        //check if date\r\n        if (!this.state.date) {\r\n            dateErr = true;\r\n            dateHelper = \"Please set a date\";\r\n        }\r\n        //check if time\r\n        if (!this.state.time) {\r\n            timeErr = true;\r\n            timeHelper = \"Please set a time\";\r\n        }\r\n        //get current date and time when form submits\r\n        const now = new Date();\r\n        const datetime = new Date(Date.parse(this.state.date + \" \" + this.state.time));\r\n        // console.log(this.state.time)\r\n        // console.log({now, datetime});\r\n        // console.log({now: now.getTime(), form: datetime.getTime(), diff: datetime.getTime() - now.getTime()});\r\n        // check if time/date is > now\r\n        if (datetime.getTime() < now.getTime()) {\r\n            if (datetime.toDateString() !== now.toDateString()) {\r\n                dateErr = true; \r\n                dateHelper = \"Date must be in future\";\r\n            } else  {\r\n                timeErr = true;\r\n                timeHelper = \"Time must be in future\";\r\n            }\r\n        } \r\n        this.setState({\r\n            nameErr,\r\n            nameHelper,\r\n            dateErr,\r\n            dateHelper,\r\n            timeErr,\r\n            timeHelper,\r\n        })\r\n        if (timeErr || dateErr || nameErr) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if (this.validate()) return;\r\n        const d = new Date(Date.parse(this.state.date + \" \" + this.state.time))\r\n        this.props.firebase.goalsRef.add({\r\n            goal: this.state.name,\r\n            date: d.getTime()\r\n        })\r\n        .then(() => {\r\n            this.props.closeModal();\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card className=\"goalform\">\r\n                <CardHeader\r\n                    avatar={\r\n                        <Avatar \r\n                        style={{\r\n                            backgroundColor: this.props.theme.palette.secondary.main,\r\n                            color: this.props.theme.palette.text.primary\r\n                        }}>\r\n                            <Icon />\r\n                        </Avatar>\r\n                    }\r\n                    title=\"Add a goal\"\r\n                    // subheader=\"With Chocolates\"\r\n                    action={\r\n                        <IconButton onClick={this.props.closeModal} tabIndex={-1}>\r\n                            <CloseIcon/>\r\n                        </IconButton>\r\n                    }\r\n                />\r\n                <CardContent>\r\n                    <Grid container spacing={0}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                label=\"Goal\"\r\n                                placeholder=\"Make it a good one!\"\r\n                                error={this.state.nameErr}\r\n                                value={this.state.name}\r\n                                onChange={this.handleChange('name')}\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                helperText={this.state.nameHelper}\r\n                                />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"Due Date\"\r\n                                error={this.state.dateErr}\r\n                                type=\"date\"\r\n                                value={this.state.date}\r\n                                onChange={this.handleChange('date')}\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                helperText={this.state.dateHelper}\r\n                                InputProps={{\r\n                                    inputProps: {\r\n                                        min: this.today,\r\n                                        max: this.maxDate\r\n                                    }\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"Due Time\"\r\n                                error={this.state.timeErr}\r\n                                type=\"time\"\r\n                                value={this.state.time}\r\n                                onChange={this.handleChange('time')}\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                                helperText={this.state.timeHelper}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n                <CardActions className=\"row right\">\r\n                    <Button onClick={this.handleSubmit}>Add Goal</Button>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </CardActions>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withTheme()(withFirebase(Goalform));","import React from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport './centeredModal.css';\r\n\r\nexport default ({children: Children, ...rest}) => (\r\n    <Modal {...rest} className=\"centeredModal\">{Children}</Modal>\r\n);\r\n","import Dashboard from './dashboard';\r\nimport Goalform from './goalform';\r\nimport CenteredModal from './centeredModal';\r\n\r\nexport { Goalform, CenteredModal };\r\nexport default Dashboard;","import React from 'react';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Goalform from './goalform';\r\nimport CenteredModal from './centeredModal';\r\nimport { withFirebase } from '../Firebase';\r\nimport './dashboard.css';\r\n\r\nclass Dashboard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            goalModalOpen: false,\r\n            goals: []\r\n        };\r\n    }\r\n    componentDidMount = () => {\r\n        const that = this;\r\n        this.props.firebase.db.collection(`users/${this.props.user.uid}/goals`)\r\n        .onSnapshot((snapshot) => {\r\n            const goals = [];\r\n            snapshot.forEach(doc => goals.push({id: doc.id, ...doc.data()}))\r\n            // console.log(goals);\r\n            this.setState({goals});\r\n        })\r\n    }\r\n    toggleModal = () => {\r\n        this.setState({\r\n            goalModalOpen: !this.state.goalModalOpen\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"dash\">\r\n                {\r\n                    this.state.goals.map(goal => (\r\n                        <Typography key={goal.id} variant={\"h6\"} align=\"center\">\r\n                            {`${goal.goal}, ${goal.date}, ${goal.id}`}\r\n                        </Typography>\r\n                    ))\r\n                }\r\n                <CenteredModal open={this.state.goalModalOpen} \r\n                    onClose={this.toggleModal}\r\n                >\r\n                    <Goalform closeModal={this.toggleModal}/>\r\n                </CenteredModal>\r\n                <Fab color=\"secondary\" \r\n                    variant=\"extended\" \r\n                    aria-label=\"Add\" \r\n                    id=\"dash-addBtn\"\r\n                    onClick={this.toggleModal}\r\n                >\r\n                    <AddIcon />\r\n                </Fab>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withFirebase(Dashboard);","import React, { Component } from 'react';\nimport { withFirebase } from './components/Firebase';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport Login from './components/login/login';\nimport Loading from './components/loading/loading';\nimport Header from './components/header/header';\nimport Dashboard from './components/dashboard/';\nimport './App.css';\n\nconst PrivateRoute = ({component: Component, user, ...rest}) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => user\n        ? <Component {...props} {...rest} user={user} />\n        : <Redirect to={{pathname: '/login', state: {from: props.location}}} />}\n        // : <Redirect to='/login' />}\n    />\n  )\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      loading: true,\n      from: null\n    }\n  }\n\n  componentDidMount = () => {\n    this.props.firebase.auth.onAuthStateChanged(user => {\n      if (user) {\n        this.setState({ user: user, loading: false })\n        this.props.firebase.initializeUser(user.uid);\n      } else {\n        this.setState({ user: null, loading: false });\n      }\n    })\n  }\n\n  // writeTestData = () => {\n  //   this.props.firebase.goalsRef.add({name: \"banana Johnson\"})\n  // }\n\n  signIn = async () => {\n    const result = await this.props.firebase.signIn();\n    this.setState({ user: result.user });\n  }\n\n  signOut = () => {\n    this.props.firebase.logout();\n  }\n\n  render() {\n    return (\n      <Router basename=\"/Goaler\">\n        <Loading status={this.state.loading}>\n          <div className=\"App\">\n          <Header user={this.state.user} login={this.signIn} logout={this.signOut}/>\n          <Route path=\"/login\" render={(props)=> <Login {...props} user={this.state.user} />} />\n          <PrivateRoute user={this.state.user} exact path='/' component={Dashboard}/>\n          {/* <Link to=\"/private\">Banana</Link>\n          <Link to=\"/private/2\">Banana2</Link>\n          <PrivateRoute user={this.state.user} exact path='/private' component={Banana} text=\"React Router\"/>\n          <PrivateRoute user={this.state.user} path='/private/:num' component={Banana} text=\"React Router\" /> */}\n          </div>\n        </Loading>\n      </Router>\n    );\n  }\n}\n\nexport default withFirebase(App);\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport red from '@material-ui/core/colors/red';\r\n\r\n// All the following keys are optional.\r\n// We try our best to provide a great default value.\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n    primary: {\r\n        main: blue[900]\r\n    },\r\n    secondary: {\r\n        main: purple[400],\r\n      },\r\n    error: red,\r\n    // Used by `getContrastText()` to maximize the contrast between the background and\r\n    // the text.\r\n    contrastThreshold: 3,\r\n    // Used to shift a color's luminance by approximately\r\n    // two indexes within its tonal palette.\r\n    // E.g., shift from Red 500 to Red 300 or Red 700.\r\n    tonalOffset: 0.5,\r\n  },\r\n  typography: {\r\n    useNextVariants: true,\r\n  },\r\n});\r\n\r\nexport default theme;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport theme from './theme';\nimport 'typeface-roboto';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n<FirebaseContext.Provider value={new Firebase()}>\n    <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <App />\n    </MuiThemeProvider>\n</FirebaseContext.Provider>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}