{"version":3,"sources":["components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/login/login.jsx","components/loading/loading.jsx","components/header/header.jsx","components/mainmenu/mainmenu.jsx","components/dashboard/goalform.jsx","components/dashboard/timer.jsx","components/dashboard/timedue.jsx","components/dashboard/timestamp.jsx","components/dashboard/timercompleted.jsx","components/dashboard/goalitem.jsx","components/dashboard/clock.jsx","components/dashboard/completedcounter.jsx","components/dashboard/centeredModal.jsx","components/dashboard/index.js","components/dashboard/dashboard.jsx","components/settings/settings.jsx","components/about/about.jsx","App.js","theme.js","serviceWorker.js","index.js"],"names":["FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","components_Firebase","Firebase","_this","this","classCallCheck","signIn","provider","auth","GoogleAuthProvider","signInWithRedirect","catch","err","console","log","logout","signOut","redirect","getRedirectResult","initializeUser","uid","goalsRef","db","collection","concat","settingsRef","app","initializeApp","firestore","settings","timestampsInSnapshots","Login","user","history","push","Loading","Fragment","status","className","CircularProgress_default","color","size","children","Header","AppBar_default","position","Toolbar_default","Link","to","Button_default","aria-label","Beenhere_default","Typography_default","variant","IconButton_default","onClick","toggleDrawer","Menu_default","login","MainMenu","navigate","route","_this2","List_default","ListItem_default","button","ListItemIcon_default","Info_default","ListItemText_default","primary","DoneAll_default","Settings_default","Divider_default","ExitToApp_default","withRouter","GoalForm","possibleConstructorReturn","getPrototypeOf","call","handleChange","name","event","setState","defineProperty","target","value","validate","nameErr","nameHelper","dateErr","dateHelper","timeErr","timeHelper","state","date","time","now","Date","dateArgs","split","map","str","Number","datetime","construct","toConsumableArray","getTime","toDateString","handleSubmit","d","n","initialState","doc","id","update","goal","completed","updatedAt","then","toggleModal","add","createdAt","addSixtySeconds","leadingZero","num","today","getFullYear","getMonth","getDate","maxDate","currentTime","getHours","getMinutes","milliseconds","prevProps","prevState","Card_default","CardHeader_default","avatar","Avatar_default","style","backgroundColor","theme","palette","secondary","main","text","AddAlarm_default","title","action","tabIndex","Close_default","CardContent_default","Grid_default","container","spacing","item","xs","TextField_default","label","placeholder","error","onChange","fullWidth","margin","helperText","md","type","InputLabelProps","shrink","InputProps","inputProps","min","max","CardActions_default","withTheme","Timer","checkTime","updateTime","unMounting","counting","timeRemaining","Math","abs","seconds","floor","minutes","hours","days","toString","requestAnimationFrame","classes","TimeDue","ms","diff","toLocaleString","TimeStamp","updated","created","timeStatus","renderSpans","TimerCompleted","completionTime","round","GoalItem","handleMenuClick","anchorEl","currentTarget","handleClose","handleCompleteToggle","newCompletedStatus","completedAt","countRef","get","newCount","data","count","set","triggerModal","handleDelete","delete","toggleTimeView","timeView","open","Boolean","timestamp","dashboard_timer","primaryTypographyProps","width","secondaryTypographyProps","timercompleted","dashboard_timedue","ListItemSecondaryAction_default","CheckBox_default","CheckBoxOutlineBlank_default","MoreVert_default","core_Menu_default","onClose","MenuItem_default","Edit_default","inset","Delete_default","nativeColor","warn","Clock","unmounting","newTime","options","weekday","year","month","day","hour","minute","second","Chip_default","CompletedCounter","completeCount","completedRef","onSnapshot","snapshot","exists","dashboard_centeredModal","_ref","Children","rest","objectWithoutProperties","Modal_default","Dashboard","componentDidMount","goals","forEach","objectSpread","modalState","goalModalOpen","undefined","clock","completedcounter","sort","goalA","goalB","dashboard_goalitem","key","dashboard_goalform","Fab_default","Add_default","Settings","About","justify","alignItems","lg","align","href","rel","PrivateRoute","component","Route","render","Redirect","pathname","from","location","App","onAuthStateChanged","loading","asyncToGenerator","regenerator_default","mark","_callee","result","wrap","_context","prev","next","sent","stop","drawer","BrowserRouter","basename","loading_loading","header_header","Drawer_default","anchor","mainmenu_mainmenu","path","App_PrivateRoute","exact","createMuiTheme","blue","purple","orange","red","contrastThreshold","tonalOffset","typography","useNextVariants","window","hostname","match","ReactDOM","context","Provider","styles","CssBaseline_default","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ba1b0983.chunk.js","sourcesContent":["import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n    <FirebaseContext.Consumer>\n        {firebase => <Component {...props} firebase={firebase} />}\n    </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;","import app, { auth } from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n// Initialize Firebase\nconst config = {\n    apiKey: process.env.REACT_APP_FIREBASE_apiKey,\n    authDomain: process.env.REACT_APP_FIREBASE_authDomain,\n    databaseURL: process.env.REACT_APP_FIREBASE_databaseURL,\n    projectId: process.env.REACT_APP_FIREBASE_projectId,\n    storageBucket: process.env.REACT_APP_FIREBASE_storageBucket,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_messagingSenderId\n};\n\nclass Firebase {\n    constructor() {\n        app.initializeApp(config);\n        this.auth = app.auth();\n        this.db = app.firestore();\n        const settings = {/* your settings... */ timestampsInSnapshots: true};\n        this.db.settings(settings);\n        // this.userRef = null;\n        // this.goalsRef = null;\n    }\n    signIn = () => {\n        const provider = new auth.GoogleAuthProvider();\n        return this.auth.signInWithRedirect(provider).catch(err => console.log(err));\n        // return this.auth.signInWithPopup(provider).catch(err => console.log(err));\n    }\n    logout = () => {\n        return this.auth.signOut();\n    }\n    redirect = () => {\n        return this.auth.getRedirectResult();\n    }\n    initializeUser = (uid) => {\n        this.goalsRef = this.db.collection(`users/${uid}/goals`);\n        this.settingsRef = this.db.collection(`users/${uid}/settings`)\n        // this.db.collection(`users/${uid}/goals/${goalid}/subgoals`);\n        // this.goalsRef = this.userRef.collection(\"goals\");\n    }\n}\n\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };","import React, { Component } from 'react';\n\nclass Login extends Component {\n    componentDidMount() {\n        console.log(this.props)\n        if (this.props.user) {\n            this.props.history.push('/')\n        }\n    }\n    render() {\n        return (\n            <h2>Login works!</h2>\n        )\n    }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport './loading.css';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nclass Loading extends Component {\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    render() {\n        return (\n            <React.Fragment>\n            {\n                this.props.status ? \n                    <div className=\"loading\">\n                        <CircularProgress color=\"secondary\" size={200}/>\n                    </div> :\n                    this.props.children\n            }\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Loading;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport LogoIcon from '@material-ui/icons/Beenhere';\nimport MenuIcon from '@material-ui/icons/Menu'\nimport './header.css';\n\nclass Header extends Component {\n    render() {\n        return (\n            <header>\n                <AppBar position=\"static\" className=\"header\">\n                    <Toolbar className=\"row\">\n                        <Link to=\"/\">\n                            <Button color=\"inherit\" aria-label=\"Logo\">\n                                <LogoIcon />\n                                <Typography variant=\"h6\" color=\"inherit\">\n                                    Goaler\n                                </Typography>\n                            </Button>\n                        </Link>\n                        <div>\n                        {\n                            this.props.user\n                            ? <IconButton color=\"inherit\" onClick={this.props.toggleDrawer}>\n                                <MenuIcon />\n                            </IconButton>\n                            : <Button color=\"inherit\" onClick={this.props.login}>Sign In</Button>\n                        }\n                        </div>\n                    </Toolbar>\n                </AppBar>\n            </header>\n        )\n    }\n}\n\nexport default Header;","import React, { Component } from 'react'\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ExitIcon from '@material-ui/icons/ExitToApp'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport GoalsIcon from '@material-ui/icons/DoneAll'\nimport InfoIcon from '@material-ui/icons/Info'\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { withRouter } from 'react-router-dom';\nimport './mainmenu.css'\n\nclass MainMenu extends Component {\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    navigate = route => {\n        this.props.history.push(route);\n        this.props.toggleDrawer();\n    }\n\n    render() {\n        return (\n            <List className=\"mainmenu\">\n                <ListItem button onClick={() => this.navigate('/about')}>\n                    <ListItemIcon>\n                        <InfoIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"About\" />\n                </ListItem>\n                <ListItem button onClick={() => this.navigate('/')}>\n                    <ListItemIcon>\n                        <GoalsIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Goals\" />\n                </ListItem>\n                <ListItem button onClick={() => this.navigate('/settings')}>\n                    <ListItemIcon>\n                        <SettingsIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Settings\" />\n                </ListItem>\n                <Divider/>\n                <ListItem button onClick={this.props.logout}>\n                    <ListItemIcon>\n                        <ExitIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Sign Out\" />\n                </ListItem>\n            </List>\n        )\n    }\n}\n\nexport default withRouter(MainMenu);","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Icon from '@material-ui/icons/AddAlarm'\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { withTheme } from '@material-ui/core/styles'\nimport { withFirebase } from '../Firebase';\nimport './goalform.css';\n\nclass GoalForm extends Component {\n    constructor(props) {\n        super(props);\n        this.now = new Date();\n        const addSixtySeconds = new Date(this.now.getTime() + 60000);\n        const leadingZero = num => num < 10 ? \"0\" + num : num\n        this.today = `${this.now.getFullYear()}-${leadingZero(this.now.getMonth() + 1)}-${leadingZero(this.now.getDate())}`\n        this.maxDate = `${this.now.getFullYear() + 10}-${leadingZero(this.now.getMonth() + 1)}-${leadingZero(this.now.getDate())}`\n        this.currentTime = `${leadingZero(addSixtySeconds.getHours())}:${leadingZero(addSixtySeconds.getMinutes())}`;\n        let initialState;\n        if (this.props.initialState) {\n            const milliseconds = this.props.initialState.date;\n            let date = this.today;\n            let time = this.currentTime;\n            if (milliseconds > this.now.getTime()) {\n                const d = new Date(milliseconds);\n                date = `${d.getFullYear()}-${leadingZero(d.getMonth() + 1)}-${leadingZero(d.getDate())}`\n                time = `${leadingZero(d.getHours())}:${leadingZero(d.getMinutes())}`;\n            }\n            initialState = {\n                name: this.props.initialState.goal,\n                nameErr: false,\n                nameHelper: \"\",\n                date,\n                dateErr: false,\n                dateHelper: \"\",\n                time,\n                timeErr: false,\n                timeHelper: \"\",\n            }\n        } else {\n            initialState = {\n                name: \"\",\n                nameErr: false,\n                nameHelper: \"\",\n                date: this.today,\n                dateErr: false,\n                dateHelper: \"\",\n                time: this.currentTime,\n                timeErr: false,\n                timeHelper: \"\",\n            }\n        }\n        this.state = initialState;\n    }\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.name !== this.state.name ||\n            prevState.date !== this.state.date ||\n            prevState.time !== this.state.time) {\n                this.validate();\n            }\n    }\n\n    validate = () => {\n        //check if name\n        let nameErr = false;\n        let nameHelper = \"\";\n        let dateErr = false;\n        let dateHelper = \"\";\n        let timeErr = false;\n        let timeHelper = \"\";\n        if (!this.state.name) {\n            nameErr = true;\n            nameHelper = \"Please set a goal\";\n        }\n        //check if date\n        if (!this.state.date) {\n            dateErr = true;\n            dateHelper = \"Please set a date\";\n        }\n        //check if time\n        if (!this.state.time) {\n            timeErr = true;\n            timeHelper = \"Please set a time\";\n        }\n        //get current date and time when form submits\n        const now = new Date();\n        const dateArgs = `${this.state.date} ${this.state.time}`.split(/[- :]/).map(str => Number(str));\n        dateArgs[1]--; //month is 0 indexed\n        const datetime = new Date(...dateArgs);\n        // check if time/date is > now\n        if (datetime.getTime() < now.getTime()) {\n            if (datetime.toDateString() !== now.toDateString()) {\n                dateErr = true;\n                dateHelper = \"Date must be in future\";\n            } else  {\n                timeErr = true;\n                timeHelper = \"Time must be in future\";\n            }\n        }\n        this.setState({\n            nameErr,\n            nameHelper,\n            dateErr,\n            dateHelper,\n            timeErr,\n            timeHelper,\n        })\n        if (timeErr || dateErr || nameErr) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    handleSubmit = () => {\n        if (this.validate()) return;\n        const dateArgs = `${this.state.date} ${this.state.time}`.split(/[- :]/)\n        .map(str => Number(str));\n        dateArgs[1]--; //month is 0 indexed\n        const d = new Date(...dateArgs);\n        const now = new Date();\n        const n = now.getTime();\n        if (this.props.initialState) {\n            this.props.firebase.goalsRef.doc(this.props.initialState.id)\n            .update({\n                goal: this.state.name,\n                date: d.getTime(),\n                completed: false,\n                updatedAt: n\n            })\n            .then(() => {\n                this.props.toggleModal();\n                // this.props.initialState.closeMenu();\n            })\n        } else {\n            this.props.firebase.goalsRef.add({\n                goal: this.state.name,\n                date: d.getTime(),\n                completed: false,\n                createdAt: n,\n                updatedAt: n\n            })\n            .then(() => {\n                this.props.toggleModal();\n            })\n        }\n\n    }\n\n    render() {\n        return (\n            <Card className=\"goalform\">\n                <CardHeader\n                    avatar={\n                        <Avatar\n                        style={{\n                            backgroundColor: this.props.theme.palette.secondary.main,\n                            color: this.props.theme.palette.text.primary\n                        }}>\n                            <Icon />\n                        </Avatar>\n                    }\n                    title=\"Add a goal\"\n                    // subheader=\"With Chocolates\"\n                    action={\n                        <IconButton onClick={this.props.toggleModal} tabIndex={-1}>\n                            <CloseIcon/>\n                        </IconButton>\n                    }\n                />\n                <CardContent>\n                    <Grid container spacing={0}>\n                        <Grid item xs={12}>\n                            <TextField\n                                label=\"Goal\"\n                                placeholder=\"Make it a good one!\"\n                                error={this.state.nameErr}\n                                value={this.state.name}\n                                onChange={this.handleChange('name')}\n                                fullWidth\n                                margin=\"normal\"\n                                helperText={this.state.nameHelper}\n                                />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                label=\"Due Date\"\n                                error={this.state.dateErr}\n                                type=\"date\"\n                                value={this.state.date}\n                                onChange={this.handleChange('date')}\n                                margin=\"normal\"\n                                fullWidth\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                helperText={this.state.dateHelper}\n                                InputProps={{\n                                    inputProps: {\n                                        min: this.today,\n                                        max: this.maxDate\n                                    }\n                                }}\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                label=\"Due Time\"\n                                error={this.state.timeErr}\n                                type=\"time\"\n                                value={this.state.time}\n                                onChange={this.handleChange('time')}\n                                margin=\"normal\"\n                                fullWidth\n                                helperText={this.state.timeHelper}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                            />\n                        </Grid>\n                    </Grid>\n                </CardContent>\n                <CardActions className=\"row right\">\n                    <Button onClick={this.handleSubmit}>{this.props.initialState ? \"Update\" : \"Add\"} Goal</Button>\n                    <Button onClick={this.props.toggleModal}>Cancel</Button>\n                </CardActions>\n            </Card>\n        )\n    }\n}\n\nexport default withTheme()(withFirebase(GoalForm));","import React from 'react';\nimport './timer.css';\nclass Timer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.unMounting = false;\n        const timeRemaining = this.checkTime();\n        this.state = {\n            time: {},\n            counting: timeRemaining > 0 ? true : false,\n            classes: \"\"\n        }\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if(prevProps.date !== this.props.date) {\n            this.updateTime();\n        }\n    }\n    componentDidMount() {\n        if (this.props.date /* && this.state.counting */) {\n            this.updateTime();\n        }\n    }\n    checkTime = () => {\n        const future = this.props.date;\n        const d = new Date();\n        const now = d.getTime();\n        const timeRemaining = future - now;\n        return timeRemaining;\n    }\n    updateTime = () => {\n        if (this.unMounting) return;\n        // var future = Date.parse(\"December 31, 2019\");\n        let timeRemaining = this.checkTime();\n        let counting;\n        timeRemaining < 0 ? counting = false : counting = true;\n        timeRemaining = Math.abs(timeRemaining);\n        // console.log(timeRemaining)\n        // if (timeRemaining < 1000) {\n        //     return this.setState({\n        //         time: {\n        //             days: \"00\",\n        //             hours: \"00\",\n        //             minutes: \"00\",\n        //             seconds: \"00\"\n        //         },\n        //         counting: false,\n        //         // classes: \"timer-strike_animate\"\n        //     });\n        // }\n        let seconds = Math.floor(timeRemaining / 1000) % 60;\n        let minutes = Math.floor((timeRemaining / 1000) / 60) % 60;\n        let hours = Math.floor((timeRemaining / 1000) / 3600) % 24;\n        let days = Math.floor(((timeRemaining / 1000) / 3600) / 24);\n        days = days < 10 ? '0' + days : days.toString();\n        hours = hours < 10 ? '0' + hours : hours.toString();\n        minutes = minutes < 10 ? '0' + minutes : minutes.toString();\n        seconds = seconds < 10 ? '0' + seconds : seconds.toString();\n        this.setState({\n            time: {\n                days, hours, minutes, seconds\n            },\n            counting: counting\n        });\n        requestAnimationFrame(this.updateTime);\n    }\n\n    componentWillUnmount() {\n        this.unMounting = true;\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                {\n                    this.state.counting\n                    ? <span className={this.state.classes}>\n                        Due in:\n                        {` ${this.state.time.days}:` +\n                            `${this.state.time.hours}:` +\n                            `${this.state.time.minutes}:` +\n                            `${this.state.time.seconds}`}\n                    </span>\n                    : <span className=\"timer-strike\">\n                        Past Due:\n                        {` ${this.state.time.days}:` +\n                            `${this.state.time.hours}:` +\n                            `${this.state.time.minutes}:` +\n                            `${this.state.time.seconds}`}\n                    </span>\n                    // : <span className=\"timer-strike\">00:00:00:00</span>\n                }\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Timer;","import React from 'react';\nimport './timedue.css'\n\nconst TimeDue = props => {\n    const ms = props.date;\n    const now = new Date();\n    const nowMs = now.getTime();\n    const diff = nowMs - ms;\n    const d = new Date(ms);\n    return (\n        <span className={diff > 0 ? \"timedue\" : \"\"}>Due: {d.toLocaleString()}</span>\n    )\n};\n\nexport default TimeDue;","import React, { Component } from 'react';\n\nclass TimeStamp extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            created: \"\",\n            updated: \"\",\n            completed: \"\",\n            timeStatus: \"\"\n        }\n\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps !== this.props) {\n            this.updateTime();\n        }\n    }\n\n    componentDidMount() {\n        this.updateTime();\n    }\n\n    updateTime = () => {\n        const updated = new Date(this.props.updated);\n        const created = new Date(this.props.created);\n        const completed = new Date(this.props.completed);\n        if (this.props.completed) {\n            this.setState({\n                timeStatus: \"completed\",\n                completed: \"Completed: \" + completed.toLocaleString()\n            })\n        } else if (this.props.updated === this.props.created) {\n            this.setState({\n                timeStatus: \"created\",\n                created: \"Created: \" + created.toLocaleString()\n            });\n        } else {\n            this.setState({\n                timeStatus: \"updated\",\n                updated: \"Updated: \" + updated.toLocaleString(),\n                created: \"Created: \" + created.toLocaleString()\n            });\n        }\n    }\n\n    renderSpans = () => {\n        //if created\n        switch(this.state.timeStatus) {\n            case 'completed':\n                return (\n                    <span>{this.state.completed}</span>\n                )\n            case 'created':\n                return (\n                    <span>{this.state.created}</span>\n                )\n            case 'updated':\n                return (\n                    <React.Fragment>\n                        {/* <span>{this.state.created}</span><br/> */}\n                        <span>{this.state.updated}</span>\n                    </React.Fragment>\n                )\n            default:\n                return;\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                {this.renderSpans()}\n            </React.Fragment>\n        )\n    }\n}\n\nexport default TimeStamp;","import React, { Component } from 'react';\n\nclass TimerCompleted extends Component {\n    constructor(props) {\n        super(props);\n        const completed = props.completed;\n        const updated = props.updated;\n        const completionTime = completed - updated;\n        let seconds = Math.round(completionTime / 1000) % 60;\n        let minutes = Math.floor((completionTime / 1000) / 60) % 60;\n        let hours = Math.floor((completionTime / 1000) / 3600) % 24;\n        let days = Math.floor(((completionTime / 1000) / 3600) / 24);\n        this.days = days < 10 ? '0' + days : days.toString();\n        this.hours = hours < 10 ? '0' + hours : hours.toString();\n        this.minutes = minutes < 10 ? '0' + minutes : minutes.toString();\n        this.seconds = seconds < 10 ? '0' + seconds : seconds.toString();\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <span>{`Completed in: ${this.days}:${this.hours}:${this.minutes}:${this.seconds}`}</span><br/>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default TimerCompleted;","import React, { Component } from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { withTheme } from '@material-ui/core/styles';\nimport { withFirebase } from '../Firebase';\nimport Timer from './timer';\nimport TimeDue from './timedue';\nimport TimeStamp from './timestamp';\nimport TimerCompleted from './timercompleted';\nimport './goalitem.css';\n\nclass GoalItem extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            anchorEl: null,\n            timeView: true\n        };\n    }\n    // componentDidUpdate() {\n    //     console.log(\"I rendered with\", {props: this.props})\n    // }\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCompleteToggle = () => {\n        const d = new Date();\n        const ms = d.getTime();\n        const newCompletedStatus = !this.props.goal.completed\n        this.props.firebase.goalsRef.doc(this.props.goal.id).update({\n            completed: newCompletedStatus,\n            completedAt: newCompletedStatus ? ms : null\n        });\n        const countRef = this.props.firebase.settingsRef.doc('completedCount');\n        countRef.get().then(doc => {\n            const data = doc.data();\n            let newCount;\n            newCompletedStatus\n                ? newCount = data.count + 1\n                : newCount = data.count - 1\n            if (newCount < 0) newCount = 0;\n            countRef.set({\n                count: newCount\n            })\n        })\n\n    }\n    triggerModal = () => {\n        this.props.toggleModal({\n            goal: this.props.goal.goal,\n            date: this.props.goal.date,\n            id: this.props.goal.id,\n            // closeMenu: this.handleClose\n        })\n        this.handleClose();\n    }\n    handleDelete = () =>{\n        this.props.firebase.goalsRef.doc(this.props.goal.id).delete();\n        this.handleClose();\n    }\n\n    toggleTimeView = () => {\n        this.setState({\n            timeView: !this.state.timeView\n        })\n    }\n\n    render() {\n        const { anchorEl } = this.state;\n        const open = Boolean(anchorEl);\n        return (\n            <ListItem button onClick={this.toggleTimeView}>\n                {\n                    this.state.timeView\n                    ? <ListItemText\n                    // className={}\n                    primary={this.props.goal.goal}\n                    secondary={this.props.goal.completed\n                        ? <TimeStamp completed={this.props.goal.completedAt} />\n                        : <Timer date={this.props.goal.date} />\n                    }\n                    primaryTypographyProps={{\n                        style: { width: '80%' },\n                        className: this.props.goal.completed ? \"goalitem-strike\" : \"\"\n                    }}\n                    secondaryTypographyProps={{ color: 'error' }}\n                    />\n                    : <ListItemText\n                    // className={this.props.goal.completed ? \"goalitem-strike\" : \"\"}\n                    primary={this.props.goal.goal}\n                    secondary={this.props.goal.completed\n                        ? <React.Fragment>\n                            {/* <TimeStamp completed={this.props.goal.completedAt} /><br/> */}\n                            {/* <TimeStamp updated={this.props.goal.updatedAt} created={this.props.goal.createdAt}/><br/> */}\n                            <TimerCompleted completed={this.props.goal.completedAt} updated={this.props.goal.updatedAt}/>\n                        </React.Fragment>\n                        :<React.Fragment>\n                            {/* <TimeStamp updated={this.props.goal.updatedAt} created={this.props.goal.createdAt}/><br/> */}\n                            <TimeDue date={this.props.goal.date}/><br/>\n                        </React.Fragment>\n                    }\n                    primaryTypographyProps={{\n                        style: { width: '80%' },\n                        className: this.props.goal.completed ? \"goalitem-strike\" : \"\"\n                    }}\n                    secondaryTypographyProps={{ color: 'error' }}\n                    />\n\n                }\n                <ListItemSecondaryAction>\n                    <IconButton onClick={this.handleCompleteToggle}>\n                        {\n                            this.props.goal.completed\n                            ? <CheckBoxIcon color=\"secondary\"/>\n                            : <CheckBoxOutlineBlankIcon />\n                        }\n                    </IconButton>\n                    <IconButton onClick={this.handleMenuClick}>\n                        <MoreVertIcon />\n                    </IconButton>\n                    <Menu\n                        id=\"long-menu\"\n                        anchorEl={anchorEl}\n                        open={open}\n                        onClose={this.handleClose}\n                    >\n                        {\n                            !this.props.goal.completed &&\n                            <MenuItem onClick={this.triggerModal}>\n                                <ListItemIcon>\n                                    <EditIcon color={'inherit'}/>\n                                </ListItemIcon>\n                                <ListItemText inset primary=\"Edit\" />\n                            </MenuItem>\n                        }\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon nativeColor={this.props.theme.palette.warn[500]}/>\n                            </ListItemIcon>\n                            <ListItemText inset primary=\"Delete\" />\n                        </MenuItem>\n\n                    </Menu>\n                </ListItemSecondaryAction>\n            </ListItem>\n        )\n    }\n}\n\nexport default withTheme()(withFirebase(GoalItem));","import React, {Component} from 'react'\nimport Chip from '@material-ui/core/Chip';\n\nclass Clock extends Component {\n    constructor(props) {\n        super(props);\n        this.d = new Date();\n        this.options = {\n            weekday: 'short',\n            year: 'numeric',\n            month: 'numeric',\n            day: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            second: 'numeric',\n        }\n        this.state = {\n            time: this.d.toLocaleString('en-US', this.options)\n        }\n    }\n\n    componentDidMount() {\n        this.update();\n    }\n\n    componentWillUnmount() {\n        this.unmounting = true;\n    }\n\n    update = () => {\n        if(this.unmounting) return;\n        const d = new Date();\n        const newTime = d.toLocaleString('en-US', this.options);\n        if(newTime !== this.state.time) {\n            this.setState({\n                time: newTime\n            })\n        }\n        requestAnimationFrame(this.update);\n    }\n\n    render() {\n        return (\n            <Chip color=\"secondary\" label={this.state.time} />\n        )\n    }\n}\n\nexport default Clock;","import React, {Component} from 'react'\nimport Chip from '@material-ui/core/Chip';\nimport { withFirebase } from '../Firebase';\nclass CompletedCounter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {completeCount: \"\"}\n        // console.log(props)\n    }\n\n    componentDidMount() {\n        const completedRef = this.props.firebase.db.collection(`users/${this.props.uid}/settings`)\n        .doc('completedCount');\n\n        completedRef.onSnapshot(snapshot => {\n            if (snapshot.exists) {\n                const data = snapshot.data()\n                this.setState({ completeCount: data.count })\n            } else {\n                completedRef.set({ count: 0 })\n            }\n        })\n    }\n\n    render() {\n        return (\n            <Chip color=\"primary\" label={`Completed Goals: ${this.state.completeCount}`} />\n        )\n    }\n}\n\nexport default withFirebase(CompletedCounter);","import React from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport './centeredModal.css';\n\nexport default ({children: Children, ...rest}) => (\n    <Modal {...rest} className=\"centeredModal\">{Children}</Modal>\n);\n","import Dashboard from './dashboard';\nimport Goalform from './goalform';\nimport CenteredModal from './centeredModal';\n\nexport { Goalform, CenteredModal };\nexport default Dashboard;","import React from 'react';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport List from '@material-ui/core/List';\nimport GoalForm from './goalform';\nimport GoalItem from './goalitem';\nimport Clock from './clock';\nimport CompletedCounter from './completedcounter';\nimport CenteredModal from './centeredModal';\nimport { withFirebase } from '../Firebase';\nimport './dashboard.css';\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            goalModalOpen: false,\n            modalState: undefined,\n            goals: [],\n            settings: {}\n        };\n    }\n    componentDidMount = () => {\n        this.props.firebase.db.collection(`users/${this.props.user.uid}/goals`)\n        .onSnapshot((snapshot) => {\n            const goals = [];\n            snapshot.forEach(doc => goals.push({id: doc.id, ...doc.data()}))\n            this.setState({goals});\n        })\n        this.props.firebase.db.collection(`users/${this.props.user.uid}/settings`)\n        .onSnapshot((snapshot) => {\n            const settings = {};\n            // snapshot.forEach(doc => settings.push({id: doc.id, ...doc.data()}))\n            snapshot.forEach(doc => settings[doc.id] = {id: doc.id, ...doc.data()});\n            this.setState({settings});\n        })\n    }\n    toggleModal = modalState => {\n        this.setState({\n            goalModalOpen: !this.state.goalModalOpen,\n            modalState: modalState && modalState.id ? modalState : null\n        })\n    }\n    render() {\n        return (\n            <div className=\"dash\">\n                <div className=\"dash-items\">\n                    <div className=\"dash-item\">\n                        <Clock />\n                    </div>\n                    <div className=\"dash-item\">\n                        <CompletedCounter uid={this.props.user.uid}/>\n                    </div>\n                </div>\n                <List>\n                    {\n                        this.state.goals\n                        .sort((goalA, goalB) => {\n                            const diff = goalA.date - goalB.date\n                            if (goalA.completed === goalB.completed) {\n                                return diff;\n                            } else if (goalA.completed) {\n                                return 1;\n                            } else {\n                                return -1;\n                            }\n                        })\n                        .map(goal => (\n                            <GoalItem key={goal.id} goal={goal} toggleModal={this.toggleModal}/>\n                        ))\n                    }\n                </List>\n                <CenteredModal open={this.state.goalModalOpen}\n                    onClose={this.toggleModal}\n                >\n                    <GoalForm toggleModal={this.toggleModal} initialState={this.state.modalState}/>\n                </CenteredModal>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <Fab color=\"secondary\"\n                    variant=\"extended\"\n                    aria-label=\"Add\"\n                    id=\"dash-addBtn\"\n                    onClick={this.toggleModal}\n                >\n                    <AddIcon />\n                </Fab>\n            </div>\n        );\n    }\n}\n\nexport default withFirebase(Dashboard);","import React, { Component } from 'react'\n\nclass Settings extends Component {\n    render() {\n        return (\n            <h1>Settings Works!</h1>\n        )\n    }\n}\n\nexport default Settings;","import React, { Component } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid'\nimport './about.css';\n\nclass About extends Component {\n    render() {\n        return (\n            <div className=\"about\">\n                <Grid container justify={\"center\"} alignItems={\"center\"}>\n                    <Grid item xs={12} lg={8}>\n                        <Card className=\"about-card\">\n                            <CardContent>\n                                <Typography variant={\"h4\"} align={\"center\"}>\n                                    Thanks for using Goaler!\n                                </Typography>\n                                <br/>\n                                <Typography variant={\"h5\"} align={\"center\"}>\n                                    Contact me <a href=\"mailto:leewarrick@gmail.com\" rel=\"noopener noreferrer\" target=\"_BLANK\">here</a>\n                                </Typography>\n                                <br/>\n                                <Typography variant={\"h6\"} align={\"center\"}>\n                                    © Lee Warrick 2019. All Rights Reserved.\n                                </Typography>\n                            </CardContent> \n                        </Card>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default About;","import React, { Component } from 'react';\nimport { withFirebase } from './components/Firebase';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport Drawer from '@material-ui/core/Drawer';\nimport Login from './components/login/login';\nimport Loading from './components/loading/loading';\nimport Header from './components/header/header';\nimport MainMenu from './components/mainmenu/mainmenu';\nimport Dashboard from './components/dashboard/';\nimport Settings from './components/settings/settings';\nimport About from './components/about/about';\nimport './App.css';\n\nconst PrivateRoute = ({component: Component, user, ...rest}) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => user\n        ? <Component {...props} {...rest} user={user} />\n        : <Redirect to={{pathname: '/login', state: {from: props.location}}} />}\n        // : <Redirect to='/login' />}\n    />\n  )\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      loading: true,\n      from: null,\n      drawer: false\n    }\n  }\n\n  componentDidMount = () => {\n    this.props.firebase.auth.onAuthStateChanged(user => {\n      if (user) {\n        this.setState({ user: user, loading: false })\n        this.props.firebase.initializeUser(user.uid);\n      } else {\n        this.setState({ user: null, loading: false });\n      }\n    })\n  }\n\n  // writeTestData = () => {\n  //   this.props.firebase.goalsRef.add({name: \"banana Johnson\"})\n  // }\n\n  signIn = async () => {\n    const result = await this.props.firebase.signIn();\n    this.setState({ user: result.user });\n  }\n\n  signOut = () => {\n    this.props.firebase.logout();\n    this.toggleDrawer();\n  }\n\n  toggleDrawer = () => {\n    this.setState({\n      drawer: !this.state.drawer\n    })\n  }\n\n  render() {\n    return (\n      <Router basename=\"/Goaler\">\n        <Loading status={this.state.loading}>\n          <div className=\"App\">\n          <Header user={this.state.user} login={this.signIn} toggleDrawer={this.toggleDrawer}/>\n          <Drawer anchor={\"right\"} open={this.state.drawer} onClose={this.toggleDrawer}>\n            <MainMenu logout={this.signOut} toggleDrawer={this.toggleDrawer}/>\n          </Drawer>\n          <Route path=\"/login\" render={(props)=> <Login {...props} user={this.state.user} />} />\n          <PrivateRoute user={this.state.user} exact path='/about' component={About}/>\n          <PrivateRoute user={this.state.user} exact path='/' component={Dashboard}/>\n          <PrivateRoute user={this.state.user} exact path='/settings' component={Settings}/>\n          {/* <Link to=\"/private\">Banana</Link>\n          <Link to=\"/private/2\">Banana2</Link>\n          <PrivateRoute user={this.state.user} exact path='/private' component={Banana} text=\"React Router\"/>\n          <PrivateRoute user={this.state.user} path='/private/:num' component={Banana} text=\"React Router\" /> */}\n          </div>\n        </Loading>\n      </Router>\n    );\n  }\n}\n\nexport default withFirebase(App);\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport purple from '@material-ui/core/colors/purple';\nimport orange from '@material-ui/core/colors/orange';\nimport red from '@material-ui/core/colors/red';\n\n// All the following keys are optional.\n// We try our best to provide a great default value.\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n        main: blue[900]\n    },\n    secondary: {\n        main: purple[400],\n      },\n    error: orange,\n    warn: red,\n    // Used by `getContrastText()` to maximize the contrast between the background and\n    // the text.\n    contrastThreshold: 3,\n    // Used to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: 0.5,\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nexport default theme;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport theme from './theme';\nimport 'typeface-roboto';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n<FirebaseContext.Provider value={new Firebase()}>\n    <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <App />\n    </MuiThemeProvider>\n</FirebaseContext.Provider>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}