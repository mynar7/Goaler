{"version":3,"sources":["components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/login/login.jsx","components/loading/loading.jsx","components/header/header.jsx","components/dashboard/dashboard.jsx","App.js","theme.js","serviceWorker.js","index.js"],"names":["Component","FirebaseContext","React","createContext","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","components_Firebase","Firebase","_this","this","Object","classCallCheck","signIn","provider","auth","GoogleAuthProvider","signInWithRedirect","catch","err","console","log","logout","signOut","redirect","getRedirectResult","initializeUser","uid","goalsRef","db","collection","concat","app","initializeApp","firestore","settings","timestampsInSnapshots","userRef","Login","props","user","history","push","react_default","a","createElement","Loading","Fragment","status","className","CircularProgress_default","color","size","children","Header","AppBar_default","position","Toolbar_default","Link","to","Button_default","aria-label","Beenhere_default","Typography_default","variant","onClick","login","Dashboard","possibleConstructorReturn","getPrototypeOf","call","state","Fab_default","id","Add_default","PrivateRoute","_ref","component","rest","objectWithoutProperties","Route","assign","render","Redirect","pathname","from","location","App","componentDidMount","firebase","onAuthStateChanged","setState","loading","asyncToGenerator","regenerator_default","mark","_callee","result","wrap","_context","prev","next","sent","stop","_this2","BrowserRouter","basename","loading_loading","header_header","path","App_PrivateRoute","exact","withFirebase","Consumer","theme","createMuiTheme","palette","type","primary","main","blue","secondary","purple","error","red","contrastThreshold","tonalOffset","typography","useNextVariants","Boolean","window","hostname","match","ReactDOM","context","Provider","value","styles","CssBaseline_default","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6LAI4BA,oHAFtBC,EAAkBC,IAAMC,cAAc,MAQ7BF,qBCNTG,iBAAS,CACXC,OAAQC,0CACRC,WAAYD,+BACZE,YAAaF,sCACbG,UAAWH,eACXI,cAAeJ,2BACfK,kBAAmBL,iBCPvBM,EDWI,SAAAC,IAAc,IAAAC,EAAAC,KAAAC,OAAAC,EAAA,EAAAD,CAAAD,KAAAF,GAAAE,KAQdG,OAAS,WACL,IAAMC,EAAW,IAAIC,OAAKC,mBAC1B,OAAOP,EAAKM,KAAKE,mBAAmBH,GAAUI,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAV7DT,KAadY,OAAS,WACL,OAAOb,EAAKM,KAAKQ,WAdPb,KAgBdc,SAAW,WACP,OAAOf,EAAKM,KAAKU,qBAjBPf,KAmBdgB,eAAiB,SAACC,GACdlB,EAAKmB,SAAWnB,EAAKoB,GAAGC,WAAR,SAAAC,OAA4BJ,EAA5B,YAnBhBK,IAAIC,cAAclC,GAClBW,KAAKK,KAAOiB,IAAIjB,OAChBL,KAAKmB,GAAKG,IAAIE,YAEdxB,KAAKmB,GAAGM,SADS,CAAwBC,uBAAuB,IAEhE1B,KAAK2B,QAAU,iCEJRC,8LAZPlB,QAAQC,IAAIX,KAAK6B,OACb7B,KAAK6B,MAAMC,MACX9B,KAAK6B,MAAME,QAAQC,KAAK,sCAI5B,OACIC,EAAAC,EAAAC,cAAA,iCATQlD,uCCsBLmD,mLAdP,OACIH,EAAAC,EAAAC,cAACF,EAAAC,EAAMG,SAAP,KAEIrC,KAAK6B,MAAMS,OACPL,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WACXN,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAkBO,MAAM,YAAYC,KAAM,OAE9C1C,KAAK6B,MAAMc,iBAbT1D,2GCiCP2D,2LA1BP,OACIX,EAAAC,EAAAC,cAAA,UAAQI,UAAU,UACdN,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAQY,SAAS,UACbb,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAASK,UAAU,OACfN,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMC,GAAG,KACLhB,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,CAAQO,MAAM,UAAUU,aAAW,QAC/BlB,EAAAC,EAAAC,cAACiB,EAAAlB,EAAD,MACAD,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CAAYoB,QAAQ,KAAKb,MAAM,WAA/B,YAKRR,EAAAC,EAAAC,cAAA,WAEInC,KAAK6B,MAAMC,KACXG,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,CAAQO,MAAM,UAAUc,QAASvD,KAAK6B,MAAMjB,QAA5C,YACAqB,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,CAAQO,MAAM,UAAUc,QAASvD,KAAK6B,MAAM2B,OAA5C,sBAlBPvE,gDCcNwE,sBAjBX,SAAAA,EAAY5B,GAAO,IAAA9B,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAyD,IACf1D,EAAAE,OAAAyD,EAAA,EAAAzD,CAAAD,KAAAC,OAAA0D,EAAA,EAAA1D,CAAAwD,GAAAG,KAAA5D,KAAM6B,KACDgC,MAAQ,GAFE9D,wEAMf,OACIkC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QACXN,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAC2B,EAAA5B,EAAD,CAAKO,MAAM,YAAYa,QAAQ,WAAWH,aAAW,MAAMY,GAAG,eAC1D9B,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,eAXI/C,IAAMF,YCIxBgF,UAAe,SAAAC,GAA2C,IAA9BjF,EAA8BiF,EAAzCC,UAAsBrC,EAAmBoC,EAAnBpC,KAASsC,EAAUnE,OAAAoE,EAAA,EAAApE,CAAAiE,EAAA,sBAC9D,OACEjC,EAAAC,EAAAC,cAACmC,EAAA,EAADrE,OAAAsE,OAAA,GACMH,EADN,CAEEI,OAAQ,SAAC3C,GAAD,OAAWC,EACfG,EAAAC,EAAAC,cAAClD,EAADgB,OAAAsE,OAAA,GAAe1C,EAAWuC,EAA1B,CAAgCtC,KAAMA,KACtCG,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAUxB,GAAI,CAACyB,SAAU,SAAUb,MAAO,CAACc,KAAM9C,EAAM+C,mBAM3DC,cACJ,SAAAA,EAAYhD,GAAO,IAAA9B,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAA6E,IACjB9E,EAAAE,OAAAyD,EAAA,EAAAzD,CAAAD,KAAAC,OAAA0D,EAAA,EAAA1D,CAAA4E,GAAAjB,KAAA5D,KAAM6B,KAQRiD,kBAAoB,WAClB/E,EAAK8B,MAAMkD,SAAS1E,KAAK2E,mBAAmB,SAAAlD,GACtCA,GACF/B,EAAKkF,SAAS,CAAEnD,KAAMA,EAAMoD,SAAS,IACrCnF,EAAK8B,MAAMkD,SAAS/D,eAAec,EAAKb,MAExClB,EAAKkF,SAAS,CAAEnD,KAAM,KAAMoD,SAAS,OAfxBnF,EAwBnBI,OAxBmBF,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAAlD,EAAAmD,KAwBV,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAlD,EAAAsD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACc5F,EAAK8B,MAAMkD,SAAS5E,SADlC,OACDoF,EADCE,EAAAG,KAEP7F,EAAKkF,SAAS,CAAEnD,KAAMyD,EAAOzD,OAFtB,wBAAA2D,EAAAI,SAAAP,EAAAtF,SAxBUD,EA6BnBc,QAAU,WACRd,EAAK8B,MAAMkD,SAASnE,UA5BpBb,EAAK8D,MAAQ,CACX/B,KAAM,KACNoD,SAAS,EACTP,KAAM,MALS5E,wEAiCV,IAAA+F,EAAA9F,KACP,OACEiC,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAQC,SAAS,WACf/D,EAAAC,EAAAC,cAAC8D,EAAD,CAAS3D,OAAQtC,KAAK6D,MAAMqB,SAC1BjD,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACfN,EAAAC,EAAAC,cAAC+D,EAAD,CAAQpE,KAAM9B,KAAK6D,MAAM/B,KAAM0B,MAAOxD,KAAKG,OAAQS,OAAQZ,KAAKa,UAChEoB,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAO6B,KAAK,SAAS3B,OAAQ,SAAC3C,GAAD,OAAUI,EAAAC,EAAAC,cAACqB,EAADvD,OAAAsE,OAAA,GAAW1C,EAAX,CAAkBC,KAAMgE,EAAKjC,MAAM/B,WAC1EG,EAAAC,EAAAC,cAACiE,EAAD,CAActE,KAAM9B,KAAK6D,MAAM/B,KAAMuE,OAAK,EAACF,KAAK,IAAIhC,UAAWV,cAzCvDxE,aAqDHqH,GPtEarH,EOsEA4F,EPtEa,SAAAhD,GAAK,OAC1CI,EAAAC,EAAAC,cAACjD,EAAgBqH,SAAjB,KACK,SAAAxB,GAAQ,OAAI9C,EAAAC,EAAAC,cAAClD,EAADgB,OAAAsE,OAAA,GAAe1C,EAAf,CAAsBkD,SAAUA,4FQwBtCyB,GAvBDC,yBAAe,CAC3BC,QAAS,CACPC,KAAM,OACNC,QAAS,CACLC,KAAMC,KAAK,MAEfC,UAAW,CACPF,KAAMG,KAAO,MAEjBC,MAAOC,KAGPC,kBAAmB,EAInBC,YAAa,IAEfC,WAAY,CACVC,iBAAiB,YCdDC,QACW,cAA7BC,OAAO5C,SAAS6C,UAEe,UAA7BD,OAAO5C,SAAS6C,UAEhBD,OAAO5C,SAAS6C,SAASC,MACvB,2DCNNC,IAASnD,OACTvC,EAAAC,EAAAC,cAACyF,EAAgBC,SAAjB,CAA0BC,MAAO,IAAIhI,GACjCmC,EAAAC,EAAAC,cAAC4F,EAAA,iBAAD,CAAkBvB,MAAOA,IACrBvE,EAAAC,EAAAC,cAAC6F,EAAA9F,EAAD,MACAD,EAAAC,EAAAC,cAAC8F,EAAD,QAGRC,SAASC,eAAe,SD8GlB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.feb698bf.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n    <FirebaseContext.Consumer>\r\n        {firebase => <Component {...props} firebase={firebase} />}\r\n    </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default FirebaseContext;","import app, { auth } from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n// Initialize Firebase\r\nconst config = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_apiKey,\r\n    authDomain: process.env.REACT_APP_FIREBASE_authDomain,\r\n    databaseURL: process.env.REACT_APP_FIREBASE_databaseURL,\r\n    projectId: process.env.REACT_APP_FIREBASE_projectId,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_storageBucket,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_messagingSenderId\r\n};\r\n\r\nclass Firebase {\r\n    constructor() {\r\n        app.initializeApp(config);\r\n        this.auth = app.auth();\r\n        this.db = app.firestore();\r\n        const settings = {/* your settings... */ timestampsInSnapshots: true};\r\n        this.db.settings(settings);\r\n        this.userRef = null;\r\n    }\r\n    signIn = () => {\r\n        const provider = new auth.GoogleAuthProvider();\r\n        return this.auth.signInWithRedirect(provider).catch(err => console.log(err));\r\n        // return this.auth.signInWithPopup(provider).catch(err => console.log(err));\r\n    }\r\n    logout = () => {\r\n        return this.auth.signOut();\r\n    }\r\n    redirect = () => {\r\n        return this.auth.getRedirectResult();\r\n    }\r\n    initializeUser = (uid) => {\r\n        this.goalsRef = this.db.collection(`users/${uid}/goals`);\r\n        // this.db.collection(`users/${uid}/goals/${goalid}/subgoals`);\r\n        // this.goalsRef = this.userRef.collection(\"goals\");\r\n    }\r\n}\r\n\r\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\r\nimport Firebase from './firebase';\r\n\r\nexport default Firebase;\r\n\r\nexport { FirebaseContext, withFirebase };","import React, { Component } from 'react';\r\n\r\nclass Login extends Component {\r\n    componentDidMount() {\r\n        console.log(this.props)\r\n        if (this.props.user) {\r\n            this.props.history.push('/')\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <h2>Login works!</h2>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport './loading.css';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nclass Loading extends Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n            {\r\n                this.props.status ? \r\n                    <div className=\"loading\">\r\n                        <CircularProgress color=\"secondary\" size={200}/>\r\n                    </div> :\r\n                    this.props.children\r\n            }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Loading;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuIcon from '@material-ui/icons/Beenhere';\r\nimport './header.css';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <header className=\"header\">\r\n                <AppBar position=\"static\">\r\n                    <Toolbar className=\"row\">\r\n                        <Link to=\"/\">\r\n                            <Button color=\"inherit\" aria-label=\"Menu\">\r\n                                <MenuIcon />\r\n                                <Typography variant=\"h6\" color=\"inherit\">\r\n                                    Goaler\r\n                                </Typography>\r\n                            </Button>\r\n                        </Link>\r\n                        <div>\r\n                        {\r\n                            this.props.user ?\r\n                            <Button color=\"inherit\" onClick={this.props.logout}>Sign Out</Button> :\r\n                            <Button color=\"inherit\" onClick={this.props.login}>Sign In</Button>\r\n                        }\r\n                        </div>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport './dashboard.css';\r\n\r\nclass Dashboard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"dash\">\r\n                <h3>Dashboard</h3>\r\n                <Fab color=\"secondary\" variant=\"extended\" aria-label=\"Add\" id=\"dash-addBtn\">\r\n                    <AddIcon />\r\n                </Fab>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React, { Component } from 'react';\nimport { withFirebase } from './components/Firebase';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport Login from './components/login/login';\nimport Loading from './components/loading/loading';\nimport Header from './components/header/header';\nimport Dashboard from './components/dashboard/dashboard';\nimport './App.css';\n\nconst PrivateRoute = ({component: Component, user, ...rest}) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => user\n        ? <Component {...props} {...rest} user={user} />\n        : <Redirect to={{pathname: '/login', state: {from: props.location}}} />}\n        // : <Redirect to='/login' />}\n    />\n  )\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      loading: true,\n      from: null\n    }\n  }\n\n  componentDidMount = () => {\n    this.props.firebase.auth.onAuthStateChanged(user => {\n      if (user) {\n        this.setState({ user: user, loading: false })\n        this.props.firebase.initializeUser(user.uid);\n      } else {\n        this.setState({ user: null, loading: false });\n      }\n    })\n  }\n\n  // writeTestData = () => {\n  //   this.props.firebase.goalsRef.add({name: \"banana Johnson\"})\n  // }\n\n  signIn = async () => {\n    const result = await this.props.firebase.signIn();\n    this.setState({ user: result.user });\n  }\n\n  signOut = () => {\n    this.props.firebase.logout();\n  }\n\n  render() {\n    return (\n      <Router basename=\"/Goaler\">\n        <Loading status={this.state.loading}>\n          <div className=\"App\">\n          <Header user={this.state.user} login={this.signIn} logout={this.signOut}/>\n          <Route path=\"/login\" render={(props)=> <Login {...props} user={this.state.user} />} />\n          <PrivateRoute user={this.state.user} exact path='/' component={Dashboard}/>\n          {/* <Link to=\"/private\">Banana</Link>\n          <Link to=\"/private/2\">Banana2</Link>\n          <PrivateRoute user={this.state.user} exact path='/private' component={Banana} text=\"React Router\"/>\n          <PrivateRoute user={this.state.user} path='/private/:num' component={Banana} text=\"React Router\" /> */}\n          </div>\n        </Loading>\n      </Router>\n    );\n  }\n}\n\nexport default withFirebase(App);\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport red from '@material-ui/core/colors/red';\r\n\r\n// All the following keys are optional.\r\n// We try our best to provide a great default value.\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n    primary: {\r\n        main: blue[900]\r\n    },\r\n    secondary: {\r\n        main: purple[400],\r\n      },\r\n    error: red,\r\n    // Used by `getContrastText()` to maximize the contrast between the background and\r\n    // the text.\r\n    contrastThreshold: 3,\r\n    // Used to shift a color's luminance by approximately\r\n    // two indexes within its tonal palette.\r\n    // E.g., shift from Red 500 to Red 300 or Red 700.\r\n    tonalOffset: 0.2,\r\n  },\r\n  typography: {\r\n    useNextVariants: true,\r\n  },\r\n});\r\n\r\nexport default theme;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport theme from './theme';\nimport 'typeface-roboto';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n<FirebaseContext.Provider value={new Firebase()}>\n    <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <App />\n    </MuiThemeProvider>\n</FirebaseContext.Provider>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}